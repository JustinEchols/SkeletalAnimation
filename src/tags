!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	W:/repos/OldSkeletalAnimation/SkeletalAnimation/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/80ee839/
A	platform.h	/^			game_button A;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
ACos	intrinsics.h	/^ACos(f32 X)$/;"	f	typeref:typename:f32
ANIMATION_FILE_MAGIC_NUMBER	asset.h	/^#define ANIMATION_FILE_MAGIC_NUMBER /;"	d
ANIMATION_FILE_VERSION	asset.h	/^#define ANIMATION_FILE_VERSION /;"	d
ANIMATION_H	animation.h	/^#define ANIMATION_H$/;"	d
APIENTRY	glext.h	/^#define APIENTRY$/;"	d
APIENTRYP	glext.h	/^#define APIENTRYP /;"	d
ASSET_H	asset.h	/^#define ASSET_H$/;"	d
ATan2	intrinsics.h	/^ATan2(f32 Y, f32 X)$/;"	f	typeref:typename:f32
AbsVal	intrinsics.h	/^AbsVal(f32 X)$/;"	f	typeref:typename:f32
AllocateJointXforms	animation.cpp	/^AllocateJointXforms(memory_arena *Arena, key_frame *KeyFrame, u32 JointCount)$/;"	f	typeref:typename:void
Ambient	mesh.h	/^	v4 Ambient;$/;"	m	struct:material_spec	typeref:typename:v4
Angle	game.h	/^	f32 Angle;$/;"	m	struct:game_state	typeref:typename:f32
AngleBetween	math.h	/^AngleBetween(quaternion A, quaternion B)$/;"	f	typeref:typename:f32
Animate	animation.cpp	/^Animate(game_state *GameState, animation_player *AnimationPlayer, animation_state State)$/;"	f	typeref:typename:internal void
AnimationFiles	animation.h	/^char *AnimationFiles[] =$/;"	v	typeref:typename:char * []
AnimationFlags_CrossFadeIn	animation.h	/^	AnimationFlags_CrossFadeIn = (1 << 5),$/;"	e	enum:animation_flags
AnimationFlags_CrossFadeOut	animation.h	/^	AnimationFlags_CrossFadeOut = (1 << 6),$/;"	e	enum:animation_flags
AnimationFlags_Finished	animation.h	/^	AnimationFlags_Finished = (1 << 3),$/;"	e	enum:animation_flags
AnimationFlags_Looping	animation.h	/^	AnimationFlags_Looping = (1 << 1),$/;"	e	enum:animation_flags
AnimationFlags_Playing	animation.h	/^	AnimationFlags_Playing = (1 << 4),$/;"	e	enum:animation_flags
AnimationFlags_RemoveLocomotion	animation.h	/^	AnimationFlags_RemoveLocomotion = (1 << 2),$/;"	e	enum:animation_flags
AnimationGet	game.cpp	/^AnimationGet(game_state *GameState, animation_name Name)$/;"	f	typeref:typename:animation *
AnimationInfos	game.h	/^	animation_info *AnimationInfos;$/;"	m	struct:game_state	typeref:typename:animation_info *
AnimationLoad	asset.cpp	/^AnimationLoad(memory_arena *Arena, char *FileName)$/;"	f	typeref:typename:internal animation_info
AnimationPlay	animation.cpp	/^AnimationPlay(animation_player *AnimationPlayer, animation *NewAnimation, u32 Flags = 0, f32 Ble/;"	f	typeref:typename:internal void
AnimationPlayer	game.h	/^	animation_player AnimationPlayer;$/;"	m	struct:game_state	typeref:typename:animation_player
AnimationPlayerInitialize	animation.cpp	/^AnimationPlayerInitialize(animation_player *AnimationPlayer, model *Model, memory_arena *Arena)$/;"	f	typeref:typename:internal void
AnimationPlayerUpdate	animation.cpp	/^AnimationPlayerUpdate(animation_player *AnimationPlayer, memory_arena *TempArena, f32 dt)$/;"	f	typeref:typename:internal void
AnimationState	game.h	/^	animation_state AnimationState;$/;"	m	struct:entity	typeref:typename:animation_state
AnimationState_Idle	animation.h	/^	AnimationState_Idle = 0x1,$/;"	e	enum:animation_state
AnimationState_IdleToRun	animation.h	/^	AnimationState_IdleToRun = 0x2,$/;"	e	enum:animation_state
AnimationState_IdleToSprint	animation.h	/^	AnimationState_IdleToSprint = 0x3,$/;"	e	enum:animation_state
AnimationState_Running	animation.h	/^	AnimationState_Running = 0x4,$/;"	e	enum:animation_state
AnimationState_RunningToIdle	animation.h	/^	AnimationState_RunningToIdle = 0x5,$/;"	e	enum:animation_state
AnimationState_RunningToSprint	animation.h	/^	AnimationState_RunningToSprint = 0x6,$/;"	e	enum:animation_state
AnimationState_Sprint	animation.h	/^	AnimationState_Sprint = 0x7,$/;"	e	enum:animation_state
AnimationState_SprintToIdle	animation.h	/^	AnimationState_SprintToIdle = 0x8,$/;"	e	enum:animation_state
AnimationState_SprintToRun	animation.h	/^	AnimationState_SprintToRun = 0x9,$/;"	e	enum:animation_state
AnimationUpdate	animation.cpp	/^AnimationUpdate(animation *Animation, f32 dt)$/;"	f	typeref:typename:internal void
Animation_Idle	animation.h	/^	Animation_Idle,$/;"	e	enum:animation_name
Animation_Jump	animation.h	/^	Animation_Jump,$/;"	e	enum:animation_name
Animation_Run	animation.h	/^	Animation_Run,$/;"	e	enum:animation_name
Animation_Sprint	animation.h	/^	Animation_Sprint,$/;"	e	enum:animation_name
Animation_Walk	animation.h	/^	Animation_Walk,$/;"	e	enum:animation_name
Animation_Wave	animation.h	/^	Animation_Wave,$/;"	e	enum:animation_name
Animations	game.h	/^	animation *Animations;$/;"	m	struct:game_state	typeref:typename:animation *
Arena	animation.h	/^	memory_arena *Arena;$/;"	m	struct:animation_player	typeref:typename:memory_arena *
Arena	game.h	/^	memory_arena *Arena;$/;"	m	struct:temporary_memory	typeref:typename:memory_arena *
Arena	game.h	/^	memory_arena Arena;$/;"	m	struct:game_state	typeref:typename:memory_arena
ArenaClear	game.h	/^ArenaClear(memory_arena *Arena)$/;"	f	typeref:typename:internal void
ArenaInitialize	game.h	/^ArenaInitialize(memory_arena *Arena, u8 *Base, memory_index Size)$/;"	f	typeref:typename:internal void
ArrayCopy	platform.h	/^#define ArrayCopy(/;"	d
ArrayCount	platform.h	/^#define ArrayCount(/;"	d
Arrow	game.h	/^	model *Arrow;$/;"	m	struct:game_state	typeref:typename:model *
Aspect	game.h	/^	f32 Aspect;$/;"	m	struct:game_state	typeref:typename:f32
Assert	platform.h	/^#define Assert(/;"	d
Base	game.h	/^	u8 *Base;$/;"	m	struct:memory_arena	typeref:typename:u8 *
BasicFS	opengl.cpp	/^char *BasicFS = R"($/;"	v	typeref:typename:char *
BasicVS	opengl.cpp	/^char *BasicVS = R"($/;"	v	typeref:typename:char *
BindTransform	mesh.h	/^	mat4 BindTransform;$/;"	m	struct:mesh	typeref:typename:mat4
BlendCurrentTime	animation.h	/^	f32 BlendCurrentTime;$/;"	m	struct:animation	typeref:typename:f32
BlendDuration	animation.h	/^	f32 BlendDuration;$/;"	m	struct:animation	typeref:typename:f32
BlendFactor	animation.h	/^	f32 BlendFactor;$/;"	m	struct:animation	typeref:typename:f32
BlendedPose	animation.h	/^	key_frame *BlendedPose;$/;"	m	struct:animation	typeref:typename:key_frame *
BlendingComposite	animation.h	/^	b32 BlendingComposite;$/;"	m	struct:animation	typeref:typename:b32
BlendingIn	animation.h	/^	b32 BlendingIn;$/;"	m	struct:animation	typeref:typename:b32
BlendingOut	animation.h	/^	b32 BlendingOut;$/;"	m	struct:animation	typeref:typename:b32
BufferNextWord	strings.cpp	/^BufferNextWord(u8 **C, u8 *Buff)$/;"	f	typeref:typename:void
Buttons	platform.h	/^		game_button Buttons[Key_Count];$/;"	m	union:game_keyboard::__anon7b296420020a	typeref:typename:game_button[]
Camera	game.h	/^	camera Camera;$/;"	m	struct:game_state	typeref:typename:camera
CameraOffsetFromPlayer	game.h	/^	v3 CameraOffsetFromPlayer;$/;"	m	struct:game_state	typeref:typename:v3
CameraSet	game.cpp	/^CameraSet(camera *Camera, v3 P, f32 Yaw, f32 Pitch)$/;"	f	typeref:typename:internal void
CameraTransform	game.h	/^	mat4 CameraTransform;$/;"	m	struct:game_state	typeref:typename:mat4
CameraTransformUpdate	game.cpp	/^CameraTransformUpdate(game_state *GameState)$/;"	f	typeref:typename:internal void
ChannelCount	texture.h	/^	s32 ChannelCount;$/;"	m	struct:texture	typeref:typename:s32
Channels	animation.h	/^	animation *Channels;$/;"	m	struct:animation_player	typeref:typename:animation *
Clamp	math.h	/^Clamp(f32 Min, f32 X, f32 Max)$/;"	f	typeref:typename:f32
Clamp	math.h	/^Clamp(u32 Min, u32 X, u32 Max)$/;"	f	typeref:typename:u32
Clamp01	math.h	/^Clamp01(f32 X)$/;"	f	typeref:typename:f32
CommonCompilerFlags	build.bat	/^set CommonCompilerFlags=-Od -fp:fast -W4 -wd4201 -wd4100 -wd4505 -wd4189 -Oi -Z7$/;"	v
CommonLinkerFlags	build.bat	/^set CommonLinkerFlags=-incremental:no user32.lib gdi32.lib opengl32.lib kernel32.lib$/;"	v
Conjugate	math.h	/^Conjugate(quaternion Q)$/;"	f	typeref:typename:quaternion
Content	platform.h	/^	void *Content;$/;"	m	struct:debug_file	typeref:typename:void *
Cos	intrinsics.h	/^Cos(f32 X)$/;"	f	typeref:typename:f32
Count	mesh.h	/^	u32 Count;$/;"	m	struct:joint_info	typeref:typename:u32
Count	strings.h	/^	u32 Count;$/;"	m	struct:string_array	typeref:typename:u32
Count	strings.h	/^	u64 Count;$/;"	m	struct:string_list	typeref:typename:u64
Cross	math.h	/^Cross(v3 A, v3 B)$/;"	f	typeref:typename:v3
Cross	math.h	/^Cross(v4 A, v4 B)$/;"	f	typeref:typename:v4
CrossFading	animation.cpp	/^CrossFading(animation *Animation)$/;"	f	typeref:typename:b32
Cube	game.h	/^	model *Cube;$/;"	m	struct:game_state	typeref:typename:model *
CubeAdd	game.cpp	/^CubeAdd(game_state *GameState, v3 P)$/;"	f	typeref:typename:internal void
CurrentTime	animation.h	/^	f32 CurrentTime; $/;"	m	struct:animation	typeref:typename:f32
CurrentTime	animation.h	/^	f32 CurrentTime;$/;"	m	struct:animation_info	typeref:typename:f32
CurrentTime	animation.h	/^	f32 CurrentTime;$/;"	m	struct:animation_player	typeref:typename:f32
CurrentTime	asset.h	/^	f32 CurrentTime;$/;"	m	struct:asset_animation_header	typeref:typename:f32
Cx	math.h	/^	f32 Cx;$/;"	m	struct:affine_decomposition	typeref:typename:f32
Cy	math.h	/^	f32 Cy;$/;"	m	struct:affine_decomposition	typeref:typename:f32
Cz	math.h	/^	f32 Cz;$/;"	m	struct:affine_decomposition	typeref:typename:f32
D	platform.h	/^			game_button D;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
Data	strings.h	/^	u8 *Data;$/;"	m	struct:string	typeref:typename:u8 *
DefaultFlags	animation.h	/^	u32 DefaultFlags;$/;"	m	struct:animation	typeref:typename:u32
DegreeToRad	platform.h	/^#define DegreeToRad(/;"	d
DeviceName	wglext.h	/^        CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[32]
DeviceString	wglext.h	/^        CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[128]
Diffuse	mesh.h	/^	v4 Diffuse;$/;"	m	struct:material_spec	typeref:typename:v4
Direction	game.h	/^	v3 Direction;$/;"	m	struct:camera	typeref:typename:v3
DirectionToEuler	math.h	/^DirectionToEuler(v3 V)$/;"	f	typeref:typename:v3
Dot	math.h	/^Dot(quaternion Q1, quaternion Q2)$/;"	f	typeref:typename:f32
Dot	math.h	/^Dot(v3 A, v3 B)$/;"	f	typeref:typename:f32
Dot	math.h	/^Dot(v4 A, v4 B)$/;"	f	typeref:typename:f32
DtForFrame	platform.h	/^	f32 DtForFrame;$/;"	m	struct:game_input	typeref:typename:f32
Duration	animation.h	/^	f32 Duration;$/;"	m	struct:animation	typeref:typename:f32
Duration	animation.h	/^	f32 Duration;$/;"	m	struct:animation_info	typeref:typename:f32
Duration	asset.h	/^	f32 Duration;$/;"	m	struct:asset_animation_header	typeref:typename:f32
E	math.h	/^	f32 E[2];$/;"	m	union:v2	typeref:typename:f32[2]
E	math.h	/^	f32 E[3];$/;"	m	union:v3	typeref:typename:f32[3]
E	math.h	/^	f32 E[3][3];$/;"	m	struct:mat3	typeref:typename:f32[3][3]
E	math.h	/^	f32 E[4];$/;"	m	union:quaternion	typeref:typename:f32[4]
E	math.h	/^	f32 E[4];$/;"	m	union:v4	typeref:typename:f32[4]
E	math.h	/^	f32 E[4][4];$/;"	m	struct:mat4	typeref:typename:f32[4][4]
E	platform.h	/^			game_button E;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV	wglext.h	/^#define ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV /;"	d
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	wglext.h	/^#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	wglext.h	/^#define ERROR_INVALID_PIXEL_TYPE_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	wglext.h	/^#define ERROR_INVALID_PIXEL_TYPE_EXT /;"	d
ERROR_INVALID_PROFILE_ARB	wglext.h	/^#define ERROR_INVALID_PROFILE_ARB /;"	d
ERROR_INVALID_VERSION_ARB	wglext.h	/^#define ERROR_INVALID_VERSION_ARB /;"	d
ERROR_MISSING_AFFINITY_MASK_NV	wglext.h	/^#define ERROR_MISSING_AFFINITY_MASK_NV /;"	d
EatSpaces	strings.cpp	/^EatSpaces(u8 **Buff)$/;"	f	typeref:typename:void
EndedDown	platform.h	/^	b32 EndedDown;$/;"	m	struct:game_button	typeref:typename:b32
Entities	game.h	/^	entity Entities[4096];$/;"	m	struct:game_state	typeref:typename:entity[4096]
EntityAdd	game.cpp	/^EntityAdd(game_state *GameState, entity_type Type)$/;"	f	typeref:typename:internal entity *
EntityCount	game.h	/^	u32 EntityCount;$/;"	m	struct:game_state	typeref:typename:u32
EntityTransform	game.cpp	/^EntityTransform(entity *Entity, f32 Scale = 1.0f)$/;"	f	typeref:typename:mat4
EntityType_Cube	game.h	/^	EntityType_Cube,$/;"	e	enum:entity_type
EntityType_Invalid	game.h	/^	EntityType_Invalid,$/;"	e	enum:entity_type
EntityType_Player	game.h	/^	EntityType_Player,$/;"	e	enum:entity_type
Equal	math.h	/^Equal(quaternion A, quaternion B, f32 Tolerance = SmallNumber)$/;"	f	typeref:typename:b32
Equal	math.h	/^Equal(v3 A, v3 B, f32 Tolerance = SmallNumber)$/;"	f	typeref:typename:b32
Extensions	opengl.h	/^	char *Extensions;$/;"	m	struct:opengl_info	typeref:typename:char *
F32FromASCII	strings.cpp	/^F32FromASCII(string S)$/;"	f	typeref:typename:f32
F32FromASCII	strings.cpp	/^F32FromASCII(u8 *S)$/;"	f	typeref:typename:f32
F32RoundToU32	intrinsics.h	/^F32RoundToU32(f32 X)$/;"	f	typeref:typename:u32
F32TruncateToS32	intrinsics.h	/^F32TruncateToS32(f32 X)$/;"	f	typeref:typename:s32
FAST_BITS	stb_image.h	/^#define FAST_BITS /;"	d
FONT_H	font.h	/^#define FONT_H$/;"	d
FOV	game.h	/^	f32 FOV;$/;"	m	struct:game_state	typeref:typename:f32
FileName	texture.h	/^	char *FileName;$/;"	m	struct:texture	typeref:typename:char *
FinalPose	animation.h	/^	key_frame *FinalPose;$/;"	m	struct:animation_player	typeref:typename:key_frame *
Finished	animation.cpp	/^Finished(animation *Animation)$/;"	f	typeref:typename:b32
First	strings.h	/^	string_node *First;$/;"	m	struct:string_list	typeref:typename:string_node *
FlagAdd	animation.cpp	/^FlagAdd(animation *Animation, u32 Flag)$/;"	f	typeref:typename:void
FlagIsSet	animation.cpp	/^FlagIsSet(animation *Animation, u32 Flag)$/;"	f	typeref:typename:b32
Flags	animation.h	/^	u32 Flags;$/;"	m	struct:animation	typeref:typename:u32
Flags	wglext.h	/^        DWORD  Flags;$/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
FontFS	opengl.cpp	/^char *FontFS= R"($/;"	v	typeref:typename:char *
FontVS	opengl.cpp	/^char *FontVS = R"($/;"	v	typeref:typename:char *
FrameRate	animation.h	/^	f32 FrameRate;$/;"	m	struct:animation_info	typeref:typename:f32
FrameRate	asset.h	/^	f32 FrameRate;$/;"	m	struct:asset_animation_header	typeref:typename:f32
FreeChannels	animation.h	/^	animation *FreeChannels;$/;"	m	struct:animation_player	typeref:typename:animation *
GAME_H	game.h	/^#define GAME_H$/;"	d
GLAPI	glext.h	/^#define GLAPI /;"	d
GLCompilerShader	opengl.cpp	/^GLCompilerShader(GLenum ShaderType, char *Source)$/;"	f	typeref:typename:internal u32
GLDEBUGPROC	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengt/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDebugCallback	opengl.cpp	/^GLDebugCallback(GLenum Source, GLenum Type, GLuint ID, GLenum Severity, GLsizei Length, const GL/;"	f	typeref:typename:internal void
GLEXT_64_TYPES_DEFINED	glext.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLIBOInit	opengl.cpp	/^GLIBOInit(u32 *IBO, u32 *Indices, u32 IndicesCount)$/;"	f	typeref:typename:internal void
GLProgramCreate	opengl.cpp	/^GLProgramCreate(char *VS, char *FS)$/;"	f	typeref:typename:internal u32
GLVULKANPROCNV	glext.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t	typeref:typename:void (APIENTRY *)(void)
GL_1PASS_EXT	glext.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	glext.h	/^#define GL_1PASS_SGIS /;"	d
GL_2PASS_0_EXT	glext.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	glext.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	glext.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	glext.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	glext.h	/^#define GL_2X_BIT_ATI /;"	d
GL_2_BYTES_NV	glext.h	/^#define GL_2_BYTES_NV /;"	d
GL_3DFX_multisample	glext.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	glext.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	glext.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_3_BYTES_NV	glext.h	/^#define GL_3_BYTES_NV /;"	d
GL_422_AVERAGE_EXT	glext.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	glext.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	glext.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	glext.h	/^#define GL_422_REV_EXT /;"	d
GL_4PASS_0_EXT	glext.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	glext.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	glext.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	glext.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	glext.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	glext.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	glext.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	glext.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	glext.h	/^#define GL_4X_BIT_ATI /;"	d
GL_4_BYTES_NV	glext.h	/^#define GL_4_BYTES_NV /;"	d
GL_8X_BIT_ATI	glext.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	glext.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	glext.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	glext.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	glext.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	glext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	glext.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	glext.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	glext.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	glext.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	glext.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	glext.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	glext.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	glext.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	glext.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	glext.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	glext.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD_ATI	glext.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	glext.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	glext.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	glext.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	glext.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	glext.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	glext.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	glext.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	glext.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	glext.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_BARRIER_BITS	glext.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	glext.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_COMPLETED_NV	glext.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_PIXELS_AMD	glext.h	/^#define GL_ALL_PIXELS_AMD /;"	d
GL_ALL_SHADER_BITS	glext.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_STATIC_DATA_IBM	glext.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA12_EXT	glext.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16F_ARB	glext.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16I_EXT	glext.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	glext.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	glext.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_SNORM	glext.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	glext.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32I_EXT	glext.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	glext.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4_EXT	glext.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8I_EXT	glext.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	glext.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	glext.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_SNORM	glext.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_FLOAT16_APPLE	glext.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	glext.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	glext.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	glext.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_INTEGER	glext.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	glext.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	glext.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	glext.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	glext.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	glext.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_REF_COMMAND_NV	glext.h	/^#define GL_ALPHA_REF_COMMAND_NV /;"	d
GL_ALPHA_SNORM	glext.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV	glext.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV	glext.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV	glext.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV	glext.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV /;"	d
GL_ALREADY_SIGNALED	glext.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS_FAST_HINT_PGI	glext.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	glext.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMD_blend_minmax_factor	glext.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_conservative_depth	glext.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	glext.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	glext.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	glext.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_framebuffer_sample_positions	glext.h	/^#define GL_AMD_framebuffer_sample_positions /;"	d
GL_AMD_gcn_shader	glext.h	/^#define GL_AMD_gcn_shader /;"	d
GL_AMD_gpu_shader_half_float	glext.h	/^#define GL_AMD_gpu_shader_half_float /;"	d
GL_AMD_gpu_shader_int16	glext.h	/^#define GL_AMD_gpu_shader_int16 /;"	d
GL_AMD_gpu_shader_int64	glext.h	/^#define GL_AMD_gpu_shader_int64 /;"	d
GL_AMD_interleaved_elements	glext.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	glext.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	glext.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	glext.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	glext.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	glext.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_query_buffer_object	glext.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	glext.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	glext.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	glext.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_ballot	glext.h	/^#define GL_AMD_shader_ballot /;"	d
GL_AMD_shader_explicit_vertex_parameter	glext.h	/^#define GL_AMD_shader_explicit_vertex_parameter /;"	d
GL_AMD_shader_gpu_shader_half_float_fetch	glext.h	/^#define GL_AMD_shader_gpu_shader_half_float_fetch /;"	d
GL_AMD_shader_image_load_store_lod	glext.h	/^#define GL_AMD_shader_image_load_store_lod /;"	d
GL_AMD_shader_stencil_export	glext.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_trinary_minmax	glext.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	glext.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	glext.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_gather_bias_lod	glext.h	/^#define GL_AMD_texture_gather_bias_lod /;"	d
GL_AMD_texture_texture4	glext.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	glext.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_transform_feedback4	glext.h	/^#define GL_AMD_transform_feedback4 /;"	d
GL_AMD_vertex_shader_layer	glext.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	glext.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	glext.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_ANY_SAMPLES_PASSED	glext.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	glext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_APPLE_aux_depth_stencil	glext.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	glext.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_element_array	glext.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	glext.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	glext.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	glext.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_object_purgeable	glext.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_rgb_422	glext.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	glext.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	glext.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_texture_range	glext.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	glext.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	glext.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	glext.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	glext.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	glext.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	glext.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_1_compatibility	glext.h	/^#define GL_ARB_ES3_1_compatibility /;"	d
GL_ARB_ES3_2_compatibility	glext.h	/^#define GL_ARB_ES3_2_compatibility /;"	d
GL_ARB_ES3_compatibility	glext.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	glext.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	glext.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	glext.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	glext.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	glext.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	glext.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	glext.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	glext.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_clip_control	glext.h	/^#define GL_ARB_clip_control /;"	d
GL_ARB_color_buffer_float	glext.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	glext.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	glext.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	glext.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	glext.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conditional_render_inverted	glext.h	/^#define GL_ARB_conditional_render_inverted /;"	d
GL_ARB_conservative_depth	glext.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	glext.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	glext.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_cull_distance	glext.h	/^#define GL_ARB_cull_distance /;"	d
GL_ARB_debug_output	glext.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	glext.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	glext.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	glext.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_derivative_control	glext.h	/^#define GL_ARB_derivative_control /;"	d
GL_ARB_direct_state_access	glext.h	/^#define GL_ARB_direct_state_access /;"	d
GL_ARB_draw_buffers	glext.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	glext.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	glext.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	glext.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	glext.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	glext.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	glext.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	glext.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	glext.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	glext.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	glext.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	glext.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	glext.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_fragment_shader_interlock	glext.h	/^#define GL_ARB_fragment_shader_interlock /;"	d
GL_ARB_framebuffer_no_attachments	glext.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	glext.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	glext.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	glext.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	glext.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_texture_sub_image	glext.h	/^#define GL_ARB_get_texture_sub_image /;"	d
GL_ARB_gl_spirv	glext.h	/^#define GL_ARB_gl_spirv /;"	d
GL_ARB_gpu_shader5	glext.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	glext.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_gpu_shader_int64	glext.h	/^#define GL_ARB_gpu_shader_int64 /;"	d
GL_ARB_half_float_pixel	glext.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	glext.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	glext.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	glext.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	glext.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	glext.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	glext.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	glext.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	glext.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	glext.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	glext.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	glext.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	glext.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	glext.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	glext.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	glext.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	glext.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_parallel_shader_compile	glext.h	/^#define GL_ARB_parallel_shader_compile /;"	d
GL_ARB_pipeline_statistics_query	glext.h	/^#define GL_ARB_pipeline_statistics_query /;"	d
GL_ARB_pixel_buffer_object	glext.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	glext.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	glext.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_polygon_offset_clamp	glext.h	/^#define GL_ARB_polygon_offset_clamp /;"	d
GL_ARB_post_depth_coverage	glext.h	/^#define GL_ARB_post_depth_coverage /;"	d
GL_ARB_program_interface_query	glext.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	glext.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	glext.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	glext.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	glext.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	glext.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_locations	glext.h	/^#define GL_ARB_sample_locations /;"	d
GL_ARB_sample_shading	glext.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	glext.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	glext.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	glext.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	glext.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counter_ops	glext.h	/^#define GL_ARB_shader_atomic_counter_ops /;"	d
GL_ARB_shader_atomic_counters	glext.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_ballot	glext.h	/^#define GL_ARB_shader_ballot /;"	d
GL_ARB_shader_bit_encoding	glext.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_clock	glext.h	/^#define GL_ARB_shader_clock /;"	d
GL_ARB_shader_draw_parameters	glext.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	glext.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	glext.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	glext.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	glext.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	glext.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	glext.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	glext.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	glext.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_image_samples	glext.h	/^#define GL_ARB_shader_texture_image_samples /;"	d
GL_ARB_shader_texture_lod	glext.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shader_viewport_layer_array	glext.h	/^#define GL_ARB_shader_viewport_layer_array /;"	d
GL_ARB_shading_language_100	glext.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	glext.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	glext.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	glext.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	glext.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	glext.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_buffer	glext.h	/^#define GL_ARB_sparse_buffer /;"	d
GL_ARB_sparse_texture	glext.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_sparse_texture2	glext.h	/^#define GL_ARB_sparse_texture2 /;"	d
GL_ARB_sparse_texture_clamp	glext.h	/^#define GL_ARB_sparse_texture_clamp /;"	d
GL_ARB_spirv_extensions	glext.h	/^#define GL_ARB_spirv_extensions /;"	d
GL_ARB_stencil_texturing	glext.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	glext.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	glext.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_barrier	glext.h	/^#define GL_ARB_texture_barrier /;"	d
GL_ARB_texture_border_clamp	glext.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	glext.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	glext.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	glext.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	glext.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	glext.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	glext.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	glext.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	glext.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	glext.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	glext.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	glext.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	glext.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_filter_anisotropic	glext.h	/^#define GL_ARB_texture_filter_anisotropic /;"	d
GL_ARB_texture_filter_minmax	glext.h	/^#define GL_ARB_texture_filter_minmax /;"	d
GL_ARB_texture_float	glext.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	glext.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	glext.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	glext.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	glext.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	glext.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	glext.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	glext.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	glext.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	glext.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	glext.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	glext.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	glext.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	glext.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	glext.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	glext.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	glext.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	glext.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	glext.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	glext.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_overflow_query	glext.h	/^#define GL_ARB_transform_feedback_overflow_query /;"	d
GL_ARB_transpose_matrix	glext.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	glext.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	glext.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	glext.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	glext.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	glext.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	glext.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	glext.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	glext.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	glext.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	glext.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	glext.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	glext.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	glext.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	glext.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARRAY_BUFFER	glext.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	glext.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	glext.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	glext.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	glext.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	glext.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	glext.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	glext.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	glext.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	glext.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	glext.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATI_draw_buffers	glext.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	glext.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	glext.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	glext.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	glext.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	glext.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pixel_format_float	glext.h	/^#define GL_ATI_pixel_format_float /;"	d
GL_ATI_pn_triangles	glext.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	glext.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_text_fragment_shader	glext.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_env_combine3	glext.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	glext.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	glext.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	glext.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	glext.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	glext.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	glext.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	glext.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	glext.h	/^#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	glext.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	glext.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_AUTO_GENERATE_MIPMAP	glext.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUX_DEPTH_STENCIL_APPLE	glext.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	glext.h	/^#define GL_AVERAGE_EXT /;"	d
GL_AVERAGE_HP	glext.h	/^#define GL_AVERAGE_HP /;"	d
GL_BACK_NORMALS_HINT_PGI	glext.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	glext.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_SECONDARY_COLOR_NV	glext.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BEVEL_NV	glext.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	glext.h	/^#define GL_BGR /;"	d
GL_BGRA	glext.h	/^#define GL_BGRA /;"	d
GL_BGRA_EXT	glext.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_INTEGER	glext.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	glext.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	glext.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	glext.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	glext.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BIAS_BIT_ATI	glext.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	glext.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINORMAL_ARRAY_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	glext.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BLACKHOLE_RENDER_INTEL	glext.h	/^#define GL_BLACKHOLE_RENDER_INTEL /;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_KHR /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	glext.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_COMMAND_NV	glext.h	/^#define GL_BLEND_COLOR_COMMAND_NV /;"	d
GL_BLEND_COLOR_EXT	glext.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST_ALPHA	glext.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	glext.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	glext.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	glext.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	glext.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	glext.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	glext.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	glext.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	glext.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	glext.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_OVERLAP_NV	glext.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	glext.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC_ALPHA	glext.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	glext.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	glext.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	glext.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLOCK_INDEX	glext.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE_BIT_ATI	glext.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	glext.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	glext.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	glext.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	glext.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	glext.h	/^#define GL_BLUE_NV /;"	d
GL_BOLD_BIT_NV	glext.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	glext.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	glext.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	glext.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	glext.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	glext.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	glext.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	glext.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	glext.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	glext.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	glext.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	glext.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	glext.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	glext.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	glext.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	glext.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	glext.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	glext.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	glext.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	glext.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	glext.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	glext.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAP_LENGTH	glext.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	glext.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	glext.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	glext.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_OBJECT_APPLE	glext.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	glext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	glext.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	glext.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	glext.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	glext.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	glext.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	glext.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	glext.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	glext.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	glext.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	glext.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	glext.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	glext.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	glext.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	glext.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	d
GL_CAVEAT_SUPPORT	glext.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	glext.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP_FRAGMENT_COLOR	glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	glext.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	glext.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	glext.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	glext.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_SGIS	glext.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	glext.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_SGIS	glext.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	glext.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	glext.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR_BUFFER	glext.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	glext.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	glext.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_STORAGE_BIT	glext.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIPPING_INPUT_PRIMITIVES	glext.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES /;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	glext.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES_ARB /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES	glext.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	glext.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB /;"	d
GL_CLIP_DEPTH_MODE	glext.h	/^#define GL_CLIP_DEPTH_MODE /;"	d
GL_CLIP_DISTANCE0	glext.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	glext.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	glext.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	glext.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	glext.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	glext.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	glext.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	glext.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_DISTANCE_NV	glext.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	glext.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	glext.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_ORIGIN	glext.h	/^#define GL_CLIP_ORIGIN /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	glext.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	glext.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	glext.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	glext.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	glext.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	glext.h	/^#define GL_CND_ATI /;"	d
GL_COLOR3_BIT_PGI	glext.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	glext.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_KHR	glext.h	/^#define GL_COLORBURN_KHR /;"	d
GL_COLORBURN_NV	glext.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_KHR	glext.h	/^#define GL_COLORDODGE_KHR /;"	d
GL_COLORDODGE_NV	glext.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	glext.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	glext.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	glext.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	glext.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	glext.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	glext.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER_EXT	glext.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE_EXT	glext.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	glext.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE_EXT	glext.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	glext.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT1	glext.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	glext.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT11	glext.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT12	glext.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT13	glext.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT14	glext.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT15	glext.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT16	glext.h	/^#define GL_COLOR_ATTACHMENT16 /;"	d
GL_COLOR_ATTACHMENT17	glext.h	/^#define GL_COLOR_ATTACHMENT17 /;"	d
GL_COLOR_ATTACHMENT18	glext.h	/^#define GL_COLOR_ATTACHMENT18 /;"	d
GL_COLOR_ATTACHMENT19	glext.h	/^#define GL_COLOR_ATTACHMENT19 /;"	d
GL_COLOR_ATTACHMENT1_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT2	glext.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT20	glext.h	/^#define GL_COLOR_ATTACHMENT20 /;"	d
GL_COLOR_ATTACHMENT21	glext.h	/^#define GL_COLOR_ATTACHMENT21 /;"	d
GL_COLOR_ATTACHMENT22	glext.h	/^#define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT23	glext.h	/^#define GL_COLOR_ATTACHMENT23 /;"	d
GL_COLOR_ATTACHMENT24	glext.h	/^#define GL_COLOR_ATTACHMENT24 /;"	d
GL_COLOR_ATTACHMENT25	glext.h	/^#define GL_COLOR_ATTACHMENT25 /;"	d
GL_COLOR_ATTACHMENT26	glext.h	/^#define GL_COLOR_ATTACHMENT26 /;"	d
GL_COLOR_ATTACHMENT27	glext.h	/^#define GL_COLOR_ATTACHMENT27 /;"	d
GL_COLOR_ATTACHMENT28	glext.h	/^#define GL_COLOR_ATTACHMENT28 /;"	d
GL_COLOR_ATTACHMENT29	glext.h	/^#define GL_COLOR_ATTACHMENT29 /;"	d
GL_COLOR_ATTACHMENT2_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT3	glext.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT30	glext.h	/^#define GL_COLOR_ATTACHMENT30 /;"	d
GL_COLOR_ATTACHMENT31	glext.h	/^#define GL_COLOR_ATTACHMENT31 /;"	d
GL_COLOR_ATTACHMENT3_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT4	glext.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT5	glext.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT6	glext.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT7	glext.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT8	glext.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT9	glext.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	glext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	glext.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_COMPONENTS	glext.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	glext.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_FLOAT_APPLE	glext.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX12_EXT	glext.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	glext.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	glext.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	glext.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	glext.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	glext.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_MATRIX	glext.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	glext.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	glext.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	glext.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	glext.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	glext.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	glext.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	glext.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	glext.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	glext.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	glext.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	glext.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	glext.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	glext.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	glext.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	glext.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	glext.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	glext.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	glext.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_SGI	glext.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COMBINE	glext.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	glext.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	glext.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	glext.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	glext.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	glext.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	glext.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	glext.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	glext.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	glext.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	glext.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	glext.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	glext.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	glext.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	glext.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	glext.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	glext.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	glext.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	glext.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	glext.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	glext.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	glext.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	glext.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	glext.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	glext.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	glext.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	glext.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	glext.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	glext.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	glext.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	glext.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	glext.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	glext.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE	glext.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	glext.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	glext.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPLETION_STATUS_ARB	glext.h	/^#define GL_COMPLETION_STATUS_ARB /;"	d
GL_COMPLETION_STATUS_KHR	glext.h	/^#define GL_COMPLETION_STATUS_KHR /;"	d
GL_COMPRESSED_ALPHA	glext.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	glext.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	glext.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	glext.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	glext.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ARB	glext.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	glext.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_R11_EAC	glext.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	glext.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	glext.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	glext.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	glext.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	glext.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	glext.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	glext.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	glext.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	glext.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	glext.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	glext.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	glext.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	glext.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	glext.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	glext.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	glext.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	glext.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	glext.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	glext.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	glext.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	glext.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	glext.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	glext.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	glext.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	glext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	glext.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	glext.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	glext.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_INVOCATIONS	glext.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS /;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	glext.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS_ARB /;"	d
GL_COMPUTE_SUBROUTINE	glext.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	glext.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	glext.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	glext.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	glext.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	glext.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONFORMANT_NV	glext.h	/^#define GL_CONFORMANT_NV /;"	d
GL_CONIC_CURVE_TO_NV	glext.h	/^#define GL_CONIC_CURVE_TO_NV /;"	d
GL_CONJOINT_NV	glext.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	glext.h	/^#define GL_CONSERVATIVE_RASTERIZATION_INTEL /;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	glext.h	/^#define GL_CONSERVATIVE_RASTERIZATION_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_MODE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	glext.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	glext.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	glext.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	glext.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	glext.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	glext.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_BORDER	glext.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_BORDER_HP	glext.h	/^#define GL_CONSTANT_BORDER_HP /;"	d
GL_CONSTANT_COLOR	glext.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	glext.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	glext.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	glext.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	glext.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONSTANT_NV	glext.h	/^#define GL_CONSTANT_NV /;"	d
GL_CONST_EYE_NV	glext.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	glext.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	glext.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	glext.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	glext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	glext.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT	glext.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	glext.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_LOST	glext.h	/^#define GL_CONTEXT_LOST /;"	d
GL_CONTEXT_PROFILE_MASK	glext.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	glext.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_CONTEXT_ROBUST_ACCESS	glext.h	/^#define GL_CONTEXT_ROBUST_ACCESS /;"	d
GL_CONTINUOUS_AMD	glext.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	glext.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	glext.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	glext.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	glext.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	glext.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	glext.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	d
GL_CONVOLUTION_BORDER_MODE	glext.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	glext.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	glext.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	glext.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	glext.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	glext.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	glext.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	glext.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	glext.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	glext.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_10_ATI	glext.h	/^#define GL_CON_10_ATI /;"	d
GL_CON_11_ATI	glext.h	/^#define GL_CON_11_ATI /;"	d
GL_CON_12_ATI	glext.h	/^#define GL_CON_12_ATI /;"	d
GL_CON_13_ATI	glext.h	/^#define GL_CON_13_ATI /;"	d
GL_CON_14_ATI	glext.h	/^#define GL_CON_14_ATI /;"	d
GL_CON_15_ATI	glext.h	/^#define GL_CON_15_ATI /;"	d
GL_CON_16_ATI	glext.h	/^#define GL_CON_16_ATI /;"	d
GL_CON_17_ATI	glext.h	/^#define GL_CON_17_ATI /;"	d
GL_CON_18_ATI	glext.h	/^#define GL_CON_18_ATI /;"	d
GL_CON_19_ATI	glext.h	/^#define GL_CON_19_ATI /;"	d
GL_CON_1_ATI	glext.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_20_ATI	glext.h	/^#define GL_CON_20_ATI /;"	d
GL_CON_21_ATI	glext.h	/^#define GL_CON_21_ATI /;"	d
GL_CON_22_ATI	glext.h	/^#define GL_CON_22_ATI /;"	d
GL_CON_23_ATI	glext.h	/^#define GL_CON_23_ATI /;"	d
GL_CON_24_ATI	glext.h	/^#define GL_CON_24_ATI /;"	d
GL_CON_25_ATI	glext.h	/^#define GL_CON_25_ATI /;"	d
GL_CON_26_ATI	glext.h	/^#define GL_CON_26_ATI /;"	d
GL_CON_27_ATI	glext.h	/^#define GL_CON_27_ATI /;"	d
GL_CON_28_ATI	glext.h	/^#define GL_CON_28_ATI /;"	d
GL_CON_29_ATI	glext.h	/^#define GL_CON_29_ATI /;"	d
GL_CON_2_ATI	glext.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_30_ATI	glext.h	/^#define GL_CON_30_ATI /;"	d
GL_CON_31_ATI	glext.h	/^#define GL_CON_31_ATI /;"	d
GL_CON_3_ATI	glext.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	glext.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	glext.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	glext.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	glext.h	/^#define GL_CON_7_ATI /;"	d
GL_CON_8_ATI	glext.h	/^#define GL_CON_8_ATI /;"	d
GL_CON_9_ATI	glext.h	/^#define GL_CON_9_ATI /;"	d
GL_COORD_REPLACE	glext.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	glext.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	glext.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COPY_READ_BUFFER	glext.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	glext.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	glext.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	glext.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COUNTER_RANGE_AMD	glext.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	glext.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	glext.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	glext.h	/^#define GL_COUNT_UP_NV /;"	d
GL_COVERAGE_MODULATION_NV	glext.h	/^#define GL_COVERAGE_MODULATION_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_NV	glext.h	/^#define GL_COVERAGE_MODULATION_TABLE_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	glext.h	/^#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV /;"	d
GL_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	glext.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_HP	glext.h	/^#define GL_CUBIC_HP /;"	d
GL_CULL_FRAGMENT_NV	glext.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	glext.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	glext.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	glext.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	glext.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	glext.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	glext.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	glext.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_FOG_COORD	glext.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	glext.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	glext.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_MATRIX_ARB	glext.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	glext.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	glext.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	glext.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	glext.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	glext.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	glext.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ARB	glext.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	glext.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	glext.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR	glext.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	glext.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	glext.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TIME_NV	glext.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	glext.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	glext.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	glext.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_D3D12_FENCE_VALUE_EXT	glext.h	/^#define GL_D3D12_FENCE_VALUE_EXT /;"	d
GL_DARKEN_KHR	glext.h	/^#define GL_DARKEN_KHR /;"	d
GL_DARKEN_NV	glext.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	glext.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	glext.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	glext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	glext.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	glext.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	glext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	glext.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	glext.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	glext.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	glext.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	glext.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	glext.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	glext.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	glext.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	glext.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	glext.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	glext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECODE_EXT	glext.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR_WRAP	glext.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	glext.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEDICATED_MEMORY_OBJECT_EXT	glext.h	/^#define GL_DEDICATED_MEMORY_OBJECT_EXT /;"	d
GL_DEFORMATIONS_MASK_SGIX	glext.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	d
GL_DELETE_STATUS	glext.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	glext.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH24_STENCIL8	glext.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	glext.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH32F_STENCIL8	glext.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	glext.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	glext.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	glext.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BOUNDS_EXT	glext.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	glext.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	glext.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	glext.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_FAR_AMD	glext.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	glext.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	glext.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_COMPONENT16	glext.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	glext.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	glext.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	glext.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	glext.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	glext.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	glext.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	glext.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_SGIX	glext.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	glext.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_RENDERABLE	glext.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_SAMPLES_NV	glext.h	/^#define GL_DEPTH_SAMPLES_NV /;"	d
GL_DEPTH_STENCIL	glext.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	glext.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	glext.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_NV	glext.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	glext.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	glext.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	glext.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEXTURE_MODE	glext.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	glext.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	d
GL_DETAIL_TEXTURE_2D_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	glext.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	d
GL_DEVICE_LUID_EXT	glext.h	/^#define GL_DEVICE_LUID_EXT /;"	d
GL_DEVICE_NODE_MASK_EXT	glext.h	/^#define GL_DEVICE_NODE_MASK_EXT /;"	d
GL_DEVICE_UUID_EXT	glext.h	/^#define GL_DEVICE_UUID_EXT /;"	d
GL_DIFFERENCE_KHR	glext.h	/^#define GL_DIFFERENCE_KHR /;"	d
GL_DIFFERENCE_NV	glext.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DISCARD_ATI	glext.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	glext.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	glext.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	glext.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	glext.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	glext.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DISTANCE_ATTENUATION_SGIS	glext.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	d
GL_DOT2_ADD_ATI	glext.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	glext.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	glext.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	glext.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	glext.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	glext.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	glext.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	glext.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	glext.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	glext.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	glext.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	glext.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	glext.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE_MAT2	glext.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	glext.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	glext.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	glext.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	glext.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	glext.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	glext.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	glext.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	glext.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	glext.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	glext.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	glext.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	glext.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	glext.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	glext.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	glext.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	glext.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	glext.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	glext.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	glext.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	glext.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	glext.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	glext.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	glext.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DRAW_ARRAYS_COMMAND_NV	glext.h	/^#define GL_DRAW_ARRAYS_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	glext.h	/^#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	glext.h	/^#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV /;"	d
GL_DRAW_BUFFER0	glext.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	glext.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	glext.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER1	glext.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	glext.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	glext.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	glext.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER11	glext.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	glext.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	glext.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER12	glext.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	glext.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	glext.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER13	glext.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	glext.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	glext.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER14	glext.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	glext.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	glext.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER15	glext.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	glext.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	glext.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER1_ARB	glext.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	glext.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER2	glext.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	glext.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	glext.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER3	glext.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	glext.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	glext.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER4	glext.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	glext.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	glext.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER5	glext.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	glext.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	glext.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER6	glext.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	glext.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	glext.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER7	glext.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	glext.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	glext.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER8	glext.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	glext.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	glext.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER9	glext.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	glext.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	glext.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	glext.h	/^#define GL_DRAW_ELEMENTS_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	glext.h	/^#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	glext.h	/^#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV /;"	d
GL_DRAW_FRAMEBUFFER	glext.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_EXT	glext.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	glext.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	glext.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	glext.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	glext.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	glext.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	glext.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DRIVER_UUID_EXT	glext.h	/^#define GL_DRIVER_UUID_EXT /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	glext.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	glext.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	glext.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	glext.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	glext.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	glext.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	glext.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ATOP_NV	glext.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_IN_NV	glext.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	glext.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	glext.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	glext.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	glext.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	glext.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	glext.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	glext.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	glext.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUAL_ALPHA12_SGIS	glext.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	d
GL_DUAL_ALPHA16_SGIS	glext.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	d
GL_DUAL_ALPHA4_SGIS	glext.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	d
GL_DUAL_ALPHA8_SGIS	glext.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	d
GL_DUAL_INTENSITY12_SGIS	glext.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	d
GL_DUAL_INTENSITY16_SGIS	glext.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	d
GL_DUAL_INTENSITY4_SGIS	glext.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	d
GL_DUAL_INTENSITY8_SGIS	glext.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	d
GL_DUAL_LUMINANCE12_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	d
GL_DUAL_LUMINANCE16_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	d
GL_DUAL_LUMINANCE4_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	d
GL_DUAL_LUMINANCE8_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	glext.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	d
GL_DUDV_ATI	glext.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	glext.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	glext.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	glext.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	glext.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	glext.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	glext.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	glext.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	glext.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGEFLAG_BIT_PGI	glext.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	glext.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	glext.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	glext.h	/^#define GL_EFFECTIVE_RASTER_SAMPLES_EXT /;"	d
GL_EIGHTH_BIT_ATI	glext.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	glext.h	/^#define GL_ELEMENT_ADDRESS_COMMAND_NV /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	glext.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	glext.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	glext.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	glext.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	glext.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	glext.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EVAL_2D_NV	glext.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	glext.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	glext.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	glext.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_KHR	glext.h	/^#define GL_EXCLUSION_KHR /;"	d
GL_EXCLUSION_NV	glext.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXCLUSIVE_EXT	glext.h	/^#define GL_EXCLUSIVE_EXT /;"	d
GL_EXPAND_NEGATE_NV	glext.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	glext.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	glext.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	glext.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_EGL_image_storage	glext.h	/^#define GL_EXT_EGL_image_storage /;"	d
GL_EXT_abgr	glext.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	glext.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	glext.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	glext.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	glext.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	glext.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	glext.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	glext.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	glext.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	glext.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	glext.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_subtable	glext.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	glext.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	glext.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	glext.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	glext.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	glext.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	glext.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	glext.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	glext.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_direct_state_access	glext.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_draw_buffers2	glext.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_instanced	glext.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	glext.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_external_buffer	glext.h	/^#define GL_EXT_external_buffer /;"	d
GL_EXT_fog_coord	glext.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_framebuffer_blit	glext.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	glext.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	glext.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	glext.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	glext.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_shader4	glext.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	glext.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	glext.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_histogram	glext.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	glext.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	glext.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	glext.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	glext.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	glext.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_memory_object	glext.h	/^#define GL_EXT_memory_object /;"	d
GL_EXT_memory_object_fd	glext.h	/^#define GL_EXT_memory_object_fd /;"	d
GL_EXT_memory_object_win32	glext.h	/^#define GL_EXT_memory_object_win32 /;"	d
GL_EXT_misc_attribute	glext.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	glext.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	glext.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_packed_depth_stencil	glext.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	glext.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	glext.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	glext.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	glext.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	glext.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	glext.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	glext.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	glext.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_polygon_offset_clamp	glext.h	/^#define GL_EXT_polygon_offset_clamp /;"	d
GL_EXT_post_depth_coverage	glext.h	/^#define GL_EXT_post_depth_coverage /;"	d
GL_EXT_provoking_vertex	glext.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_raster_multisample	glext.h	/^#define GL_EXT_raster_multisample /;"	d
GL_EXT_rescale_normal	glext.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_secondary_color	glext.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_semaphore	glext.h	/^#define GL_EXT_semaphore /;"	d
GL_EXT_semaphore_fd	glext.h	/^#define GL_EXT_semaphore_fd /;"	d
GL_EXT_semaphore_win32	glext.h	/^#define GL_EXT_semaphore_win32 /;"	d
GL_EXT_separate_shader_objects	glext.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	glext.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_framebuffer_fetch	glext.h	/^#define GL_EXT_shader_framebuffer_fetch /;"	d
GL_EXT_shader_framebuffer_fetch_non_coherent	glext.h	/^#define GL_EXT_shader_framebuffer_fetch_non_coherent /;"	d
GL_EXT_shader_image_load_formatted	glext.h	/^#define GL_EXT_shader_image_load_formatted /;"	d
GL_EXT_shader_image_load_store	glext.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_integer_mix	glext.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shadow_funcs	glext.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shared_texture_palette	glext.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_sparse_texture2	glext.h	/^#define GL_EXT_sparse_texture2 /;"	d
GL_EXT_stencil_clear_tag	glext.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	glext.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	glext.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	glext.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	glext.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	glext.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	glext.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_buffer_object	glext.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_latc	glext.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	glext.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	glext.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_cube_map	glext.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_env_add	glext.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	glext.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	glext.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	glext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_filter_minmax	glext.h	/^#define GL_EXT_texture_filter_minmax /;"	d
GL_EXT_texture_integer	glext.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	glext.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	glext.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	glext.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	glext.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_sRGB	glext.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_decode	glext.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shared_exponent	glext.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	glext.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_swizzle	glext.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_timer_query	glext.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	glext.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_vertex_array	glext.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	glext.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_attrib_64bit	glext.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	glext.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	glext.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_win32_keyed_mutex	glext.h	/^#define GL_EXT_win32_keyed_mutex /;"	d
GL_EXT_window_rectangles	glext.h	/^#define GL_EXT_window_rectangles /;"	d
GL_EXT_x11_sync_object	glext.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	glext.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	glext.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINEAR_NV	glext.h	/^#define GL_EYE_LINEAR_NV /;"	d
GL_EYE_LINE_SGIS	glext.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	glext.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	glext.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	glext.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	glext.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_MAX_AMD	glext.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	glext.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	glext.h	/^#define GL_FAILURE_NV /;"	d
GL_FENCE_APPLE	glext.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	glext.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	glext.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FIELDS_NV	glext.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	glext.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	glext.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	glext.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILL_RECTANGLE_NV	glext.h	/^#define GL_FILL_RECTANGLE_NV /;"	d
GL_FILTER	glext.h	/^#define GL_FILTER /;"	d
GL_FILTER4_SGIS	glext.h	/^#define GL_FILTER4_SGIS /;"	d
GL_FIRST_TO_REST_NV	glext.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	glext.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIXED	glext.h	/^#define GL_FIXED /;"	d
GL_FIXED_OES	glext.h	/^#define GL_FIXED_OES /;"	d
GL_FIXED_ONLY	glext.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	glext.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FLOAT16_MAT2_AMD	glext.h	/^#define GL_FLOAT16_MAT2_AMD /;"	d
GL_FLOAT16_MAT2x3_AMD	glext.h	/^#define GL_FLOAT16_MAT2x3_AMD /;"	d
GL_FLOAT16_MAT2x4_AMD	glext.h	/^#define GL_FLOAT16_MAT2x4_AMD /;"	d
GL_FLOAT16_MAT3_AMD	glext.h	/^#define GL_FLOAT16_MAT3_AMD /;"	d
GL_FLOAT16_MAT3x2_AMD	glext.h	/^#define GL_FLOAT16_MAT3x2_AMD /;"	d
GL_FLOAT16_MAT3x4_AMD	glext.h	/^#define GL_FLOAT16_MAT3x4_AMD /;"	d
GL_FLOAT16_MAT4_AMD	glext.h	/^#define GL_FLOAT16_MAT4_AMD /;"	d
GL_FLOAT16_MAT4x2_AMD	glext.h	/^#define GL_FLOAT16_MAT4x2_AMD /;"	d
GL_FLOAT16_MAT4x3_AMD	glext.h	/^#define GL_FLOAT16_MAT4x3_AMD /;"	d
GL_FLOAT16_NV	glext.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	glext.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	glext.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	glext.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	glext.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	glext.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	glext.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	glext.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	glext.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	glext.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	glext.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	glext.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	glext.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	glext.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	glext.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	glext.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	glext.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_R16_NV	glext.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	glext.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	glext.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	glext.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	glext.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	glext.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	glext.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	glext.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	glext.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	glext.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	glext.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	glext.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	glext.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	glext.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	glext.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	glext.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	glext.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	glext.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	glext.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG_COORD	glext.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	glext.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	glext.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	glext.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	glext.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	glext.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	glext.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	glext.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	glext.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	glext.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	glext.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	glext.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	glext.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DISTANCE_MODE_NV	glext.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_FUNC_POINTS_SGIS	glext.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	d
GL_FOG_FUNC_SGIS	glext.h	/^#define GL_FOG_FUNC_SGIS /;"	d
GL_FOG_OFFSET_SGIX	glext.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	glext.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	glext.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FONT_ASCENDER_BIT_NV	glext.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	glext.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	glext.h	/^#define GL_FONT_GLYPHS_AVAILABLE_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	glext.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	glext.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	glext.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	glext.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	glext.h	/^#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV /;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	glext.h	/^#define GL_FONT_TARGET_UNAVAILABLE_NV /;"	d
GL_FONT_UNAVAILABLE_NV	glext.h	/^#define GL_FONT_UNAVAILABLE_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	glext.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	glext.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNINTELLIGIBLE_NV	glext.h	/^#define GL_FONT_UNINTELLIGIBLE_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	glext.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	glext.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	glext.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	glext.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	glext.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRACTIONAL_EVEN	glext.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	glext.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COLOR_EXT	glext.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	glext.h	/^#define GL_FRAGMENT_COVERAGE_COLOR_NV /;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	glext.h	/^#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV /;"	d
GL_FRAGMENT_DEPTH	glext.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	glext.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_INPUT_NV	glext.h	/^#define GL_FRAGMENT_INPUT_NV /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	glext.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_LIGHT0_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	d
GL_FRAGMENT_LIGHT1_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	d
GL_FRAGMENT_LIGHT2_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	d
GL_FRAGMENT_LIGHT3_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	d
GL_FRAGMENT_LIGHT4_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	d
GL_FRAGMENT_LIGHT5_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	d
GL_FRAGMENT_LIGHT6_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	d
GL_FRAGMENT_LIGHT7_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	d
GL_FRAGMENT_LIGHTING_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	glext.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	glext.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	glext.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	glext.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	glext.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	glext.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	glext.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	glext.h	/^#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS	glext.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	glext.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	glext.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	glext.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	glext.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	glext.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	glext.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BLEND	glext.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	glext.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	glext.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	glext.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	glext.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV /;"	d
GL_FRAMEBUFFER_RENDERABLE	glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	glext.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	glext.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV /;"	d
GL_FRAMEBUFFER_SRGB	glext.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	glext.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	glext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_UNDEFINED	glext.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEZOOM_FACTOR_SGIX	glext.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_FRAMEZOOM_SGIX	glext.h	/^#define GL_FRAMEZOOM_SGIX /;"	d
GL_FRAME_NV	glext.h	/^#define GL_FRAME_NV /;"	d
GL_FRONT_FACE_COMMAND_NV	glext.h	/^#define GL_FRONT_FACE_COMMAND_NV /;"	d
GL_FULL_RANGE_EXT	glext.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	glext.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	glext.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	glext.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	glext.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	glext.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	glext.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GENERATE_MIPMAP	glext.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	glext.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	glext.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	glext.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	glext.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	glext.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_DEFORMATION_SGIX	glext.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	d
GL_GEOMETRY_INPUT_TYPE	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_OUTPUT_TYPE	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	glext.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	glext.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	glext.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	glext.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_EXT	glext.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	glext.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED	glext.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	glext.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB /;"	d
GL_GEOMETRY_SUBROUTINE	glext.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	glext.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	glext.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	glext.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	glext.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLEXT_VERSION	glext.h	/^#define GL_GLEXT_VERSION /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	glext.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	glext.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	glext.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	glext.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	glext.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	glext.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	glext.h	/^#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	glext.h	/^#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	glext.h	/^#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX /;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	glext.h	/^#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX /;"	d
GL_GREEN_BIT_ATI	glext.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	glext.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	glext.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	glext.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	glext.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	glext.h	/^#define GL_GREEN_NV /;"	d
GL_GREMEDY_frame_terminator	glext.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	glext.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET	glext.h	/^#define GL_GUILTY_CONTEXT_RESET /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	glext.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_APPLE	glext.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	glext.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	glext.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	glext.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	glext.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	glext.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	glext.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_EXT	glext.h	/^#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT /;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT	glext.h	/^#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT /;"	d
GL_HANDLE_TYPE_D3D12_FENCE_EXT	glext.h	/^#define GL_HANDLE_TYPE_D3D12_FENCE_EXT /;"	d
GL_HANDLE_TYPE_D3D12_RESOURCE_EXT	glext.h	/^#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT /;"	d
GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT	glext.h	/^#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_FD_EXT	glext.h	/^#define GL_HANDLE_TYPE_OPAQUE_FD_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_EXT	glext.h	/^#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT	glext.h	/^#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT /;"	d
GL_HARDLIGHT_KHR	glext.h	/^#define GL_HARDLIGHT_KHR /;"	d
GL_HARDLIGHT_NV	glext.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	glext.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	glext.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	glext.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	glext.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	glext.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	glext.h	/^#define GL_HILO_NV /;"	d
GL_HISTOGRAM	glext.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	glext.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	glext.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	glext.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	glext.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	glext.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	glext.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	glext.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	glext.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	glext.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	glext.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	glext.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	glext.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	glext.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	glext.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	glext.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	glext.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_KHR	glext.h	/^#define GL_HSL_COLOR_KHR /;"	d
GL_HSL_COLOR_NV	glext.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_KHR	glext.h	/^#define GL_HSL_HUE_KHR /;"	d
GL_HSL_HUE_NV	glext.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_KHR	glext.h	/^#define GL_HSL_LUMINOSITY_KHR /;"	d
GL_HSL_LUMINOSITY_NV	glext.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_KHR	glext.h	/^#define GL_HSL_SATURATION_KHR /;"	d
GL_HSL_SATURATION_NV	glext.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	glext.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	glext.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	glext.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	glext.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	glext.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	glext.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	glext.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER_HP	glext.h	/^#define GL_IGNORE_BORDER_HP /;"	d
GL_IMAGE_1D	glext.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	glext.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	glext.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	glext.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	glext.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	glext.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	glext.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	glext.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	glext.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	glext.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	glext.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	glext.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	glext.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	glext.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	glext.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	glext.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	glext.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	glext.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	glext.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	glext.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	glext.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BUFFER	glext.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	glext.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_CLASS_10_10_10_2	glext.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	glext.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	glext.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	glext.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	glext.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	glext.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	glext.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	glext.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	glext.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	glext.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	glext.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	glext.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	glext.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	glext.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	glext.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_MAG_FILTER_HP	glext.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	d
GL_IMAGE_MIN_FILTER_HP	glext.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	d
GL_IMAGE_PIXEL_FORMAT	glext.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	glext.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_ROTATE_ANGLE_HP	glext.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	d
GL_IMAGE_SCALE_X_HP	glext.h	/^#define GL_IMAGE_SCALE_X_HP /;"	d
GL_IMAGE_SCALE_Y_HP	glext.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	d
GL_IMAGE_TEXEL_SIZE	glext.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMAGE_TRANSFORM_2D_HP	glext.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	d
GL_IMAGE_TRANSLATE_X_HP	glext.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	d
GL_IMAGE_TRANSLATE_Y_HP	glext.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCLUSIVE_EXT	glext.h	/^#define GL_INCLUSIVE_EXT /;"	d
GL_INCR_WRAP	glext.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	glext.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	glext.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	glext.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	glext.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	glext.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	glext.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	glext.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER_EXT	glext.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	glext.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE_EXT	glext.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BIT_PGI	glext.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_MATERIAL_EXT	glext.h	/^#define GL_INDEX_MATERIAL_EXT /;"	d
GL_INDEX_MATERIAL_FACE_EXT	glext.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	glext.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	d
GL_INDEX_TEST_EXT	glext.h	/^#define GL_INDEX_TEST_EXT /;"	d
GL_INDEX_TEST_FUNC_EXT	glext.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	d
GL_INDEX_TEST_REF_EXT	glext.h	/^#define GL_INDEX_TEST_REF_EXT /;"	d
GL_INFO_LOG_LENGTH	glext.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_blend_func_separate	glext.h	/^#define GL_INGR_blend_func_separate /;"	d
GL_INGR_color_clamp	glext.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	glext.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET	glext.h	/^#define GL_INNOCENT_CONTEXT_RESET /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	glext.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	glext.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	glext.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	d
GL_INT16_NV	glext.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	glext.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	glext.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	glext.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_ARB	glext.h	/^#define GL_INT64_ARB /;"	d
GL_INT64_NV	glext.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_ARB	glext.h	/^#define GL_INT64_VEC2_ARB /;"	d
GL_INT64_VEC2_NV	glext.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_ARB	glext.h	/^#define GL_INT64_VEC3_ARB /;"	d
GL_INT64_VEC3_NV	glext.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_ARB	glext.h	/^#define GL_INT64_VEC4_ARB /;"	d
GL_INT64_VEC4_NV	glext.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	glext.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	glext.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	glext.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	glext.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_blackhole_render	glext.h	/^#define GL_INTEL_blackhole_render /;"	d
GL_INTEL_conservative_rasterization	glext.h	/^#define GL_INTEL_conservative_rasterization /;"	d
GL_INTEL_fragment_shader_ordering	glext.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_framebuffer_CMAA	glext.h	/^#define GL_INTEL_framebuffer_CMAA /;"	d
GL_INTEL_map_texture	glext.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	glext.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	glext.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTENSITY12_EXT	glext.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16F_ARB	glext.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	glext.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	glext.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	glext.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_SNORM	glext.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	glext.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	glext.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	glext.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4_EXT	glext.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8I_EXT	glext.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	glext.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	glext.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	glext.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	glext.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_FLOAT16_APPLE	glext.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	glext.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	glext.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	glext.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_SNORM	glext.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	glext.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	glext.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	glext.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	glext.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	glext.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	glext.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	glext.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	glext.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	glext.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	glext.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	glext.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	glext.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	glext.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	glext.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	glext.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	glext.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	glext.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	glext.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	glext.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	glext.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	glext.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	glext.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	glext.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	glext.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	glext.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_2_10_10_10_REV	glext.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	glext.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	glext.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	glext.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	glext.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	glext.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	glext.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	glext.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	glext.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	glext.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	glext.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	glext.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_CUBE	glext.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	glext.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D	glext.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	glext.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	glext.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	glext.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	glext.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	glext.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	glext.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	glext.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_CUBE	glext.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	glext.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	glext.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	glext.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	glext.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	glext.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	glext.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	glext.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_INDEX	glext.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVARIANT_DATATYPE_EXT	glext.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	glext.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	glext.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	glext.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	glext.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERTED_SCREEN_W_REND	glext.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	glext.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	glext.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_IR_INSTRUMENT1_SGIX	glext.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	d
GL_ISOLINES	glext.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	glext.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	glext.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	glext.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_IUI_N3F_V2F_EXT	glext.h	/^#define GL_IUI_N3F_V2F_EXT /;"	d
GL_IUI_N3F_V3F_EXT	glext.h	/^#define GL_IUI_N3F_V3F_EXT /;"	d
GL_IUI_V2F_EXT	glext.h	/^#define GL_IUI_V2F_EXT /;"	d
GL_IUI_V3F_EXT	glext.h	/^#define GL_IUI_V3F_EXT /;"	d
GL_KHR_blend_equation_advanced	glext.h	/^#define GL_KHR_blend_equation_advanced /;"	d
GL_KHR_blend_equation_advanced_coherent	glext.h	/^#define GL_KHR_blend_equation_advanced_coherent /;"	d
GL_KHR_context_flush_control	glext.h	/^#define GL_KHR_context_flush_control /;"	d
GL_KHR_debug	glext.h	/^#define GL_KHR_debug /;"	d
GL_KHR_no_error	glext.h	/^#define GL_KHR_no_error /;"	d
GL_KHR_parallel_shader_compile	glext.h	/^#define GL_KHR_parallel_shader_compile /;"	d
GL_KHR_robust_buffer_access_behavior	glext.h	/^#define GL_KHR_robust_buffer_access_behavior /;"	d
GL_KHR_robustness	glext.h	/^#define GL_KHR_robustness /;"	d
GL_KHR_texture_compression_astc_hdr	glext.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	glext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KHR_texture_compression_astc_sliced_3d	glext.h	/^#define GL_KHR_texture_compression_astc_sliced_3d /;"	d
GL_LARGE_CCW_ARC_TO_NV	glext.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	glext.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	glext.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	glext.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYER_NV	glext.h	/^#define GL_LAYER_NV /;"	d
GL_LAYER_PROVOKING_VERTEX	glext.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYOUT_COLOR_ATTACHMENT_EXT	glext.h	/^#define GL_LAYOUT_COLOR_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEFAULT_INTEL	glext.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT	glext.h	/^#define GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT /;"	d
GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT	glext.h	/^#define GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT	glext.h	/^#define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT	glext.h	/^#define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT /;"	d
GL_LAYOUT_GENERAL_EXT	glext.h	/^#define GL_LAYOUT_GENERAL_EXT /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	glext.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	glext.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LAYOUT_SHADER_READ_ONLY_EXT	glext.h	/^#define GL_LAYOUT_SHADER_READ_ONLY_EXT /;"	d
GL_LAYOUT_TRANSFER_DST_EXT	glext.h	/^#define GL_LAYOUT_TRANSFER_DST_EXT /;"	d
GL_LAYOUT_TRANSFER_SRC_EXT	glext.h	/^#define GL_LAYOUT_TRANSFER_SRC_EXT /;"	d
GL_LERP_ATI	glext.h	/^#define GL_LERP_ATI /;"	d
GL_LGPU_SEPARATE_STORAGE_BIT_NVX	glext.h	/^#define GL_LGPU_SEPARATE_STORAGE_BIT_NVX /;"	d
GL_LIGHTEN_KHR	glext.h	/^#define GL_LIGHTEN_KHR /;"	d
GL_LIGHTEN_NV	glext.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHT_ENV_MODE_SGIX	glext.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	glext.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LINEARBURN_NV	glext.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	glext.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	glext.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	glext.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	glext.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	d
GL_LINEAR_DETAIL_SGIS	glext.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	d
GL_LINEAR_SHARPEN_SGIS	glext.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	d
GL_LINEAR_TILING_EXT	glext.h	/^#define GL_LINEAR_TILING_EXT /;"	d
GL_LINES_ADJACENCY	glext.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	glext.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	glext.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINE_STRIP_ADJACENCY	glext.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	glext.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	glext.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_TO_NV	glext.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINE_WIDTH_COMMAND_NV	glext.h	/^#define GL_LINE_WIDTH_COMMAND_NV /;"	d
GL_LINK_STATUS	glext.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_PRIORITY_SGIX	glext.h	/^#define GL_LIST_PRIORITY_SGIX /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	glext.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	glext.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	glext.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	glext.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	glext.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOSE_CONTEXT_ON_RESET	glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	glext.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	glext.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	glext.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	glext.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	glext.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUID_SIZE_EXT	glext.h	/^#define GL_LUID_SIZE_EXT /;"	d
GL_LUMINANCE12_ALPHA12_EXT	glext.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4_EXT	glext.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	glext.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16F_ARB	glext.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16I_EXT	glext.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	glext.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16_EXT	glext.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	glext.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_EXT	glext.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_SNORM	glext.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	glext.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32I_EXT	glext.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	glext.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4_ALPHA4_EXT	glext.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_EXT	glext.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2_EXT	glext.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8I_EXT	glext.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	glext.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	glext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	glext.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	glext.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_SNORM	glext.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA16F_ARB	glext.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	glext.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	glext.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SNORM	glext.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_FLOAT16_APPLE	glext.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	glext.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	glext.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	glext.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_INTEGER_EXT	glext.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SNORM	glext.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	glext.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	glext.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	glext.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	glext.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	glext.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	glext.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_TANGENT_EXT	glext.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	glext.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	glext.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_TANGENT_EXT	glext.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	glext.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	glext.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	glext.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	glext.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	glext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	glext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	glext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	glext.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	glext.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_TESSELLATION_NV	glext.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	glext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	glext.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	glext.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	glext.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	glext.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	glext.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	glext.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	glext.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	glext.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	glext.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	glext.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	glext.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	glext.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	glext.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	glext.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	glext.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	glext.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	glext.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	glext.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	glext.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	glext.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	glext.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	glext.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	glext.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	glext.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	glext.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	glext.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	glext.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	glext.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	glext.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	glext.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	glext.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	glext.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	glext.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	glext.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	glext.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	glext.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	glext.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	glext.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	glext.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	glext.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	glext.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	glext.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	glext.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	glext.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_PALETTE_ARB	glext.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_STRIDE	glext.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	glext.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	glext.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	glext.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	glext.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	glext.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	glext.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	glext.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	glext.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	glext.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	glext.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	glext.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	glext.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	glext.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	glext.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	glext.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	glext.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	glext.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_MAX_CLIP_DISTANCES	glext.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	glext.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	glext.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	glext.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	glext.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	glext.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_CULL_DISTANCES	glext.h	/^#define GL_MAX_CULL_DISTANCES /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	glext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	glext.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	d
GL_MAX_DEPTH	glext.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	glext.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	glext.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	glext.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	glext.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	glext.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	glext.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	glext.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	glext.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	glext.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	glext.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EXT	glext.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	glext.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	glext.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	glext.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	glext.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	glext.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	glext.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	glext.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	glext.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_MAX_GENERAL_COMBINERS_NV	glext.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	glext.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	glext.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_HEIGHT	glext.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	glext.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	glext.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	glext.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	glext.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	glext.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	glext.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	glext.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_LGPU_GPUS_NVX	glext.h	/^#define GL_MAX_LGPU_GPUS_NVX /;"	d
GL_MAX_MAP_TESSELLATION_NV	glext.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	glext.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	glext.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_NAME_LENGTH	glext.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	glext.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	glext.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PATCH_VERTICES	glext.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glext.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glext.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	glext.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	glext.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	glext.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	glext.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	glext.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	glext.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	glext.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	glext.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	glext.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	glext.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	glext.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_RASTER_SAMPLES_EXT	glext.h	/^#define GL_MAX_RASTER_SAMPLES_EXT /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	glext.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RENDERBUFFER_SIZE	glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SAMPLES	glext.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_EXT	glext.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLE_MASK_WORDS	glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	glext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	glext.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	glext.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_ARB /;"	d
GL_MAX_SHADER_COMPILER_THREADS_KHR	glext.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_KHR /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	glext.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHININESS_NV	glext.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPOT_EXPONENT_NV	glext.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	glext.h	/^#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV /;"	d
GL_MAX_SUBROUTINES	glext.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	glext.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	glext.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	glext.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_COORDS	glext.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	glext.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	glext.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY	glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_UNITS	glext.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	glext.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	glext.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	glext.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	glext.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	glext.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	glext.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	glext.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	glext.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	glext.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	glext.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	glext.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	glext.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	glext.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	glext.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	glext.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	glext.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	glext.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	glext.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	glext.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	glext.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	glext.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	glext.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	glext.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	glext.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWS_OVR	glext.h	/^#define GL_MAX_VIEWS_OVR /;"	d
GL_MAX_WIDTH	glext.h	/^#define GL_MAX_WIDTH /;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	glext.h	/^#define GL_MAX_WINDOW_RECTANGLES_EXT /;"	d
GL_MEDIUM_FLOAT	glext.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	glext.h	/^#define GL_MEDIUM_INT /;"	d
GL_MESAX_texture_stack	glext.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_pack_invert	glext.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_program_binary_formats	glext.h	/^#define GL_MESA_program_binary_formats /;"	d
GL_MESA_resize_buffers	glext.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_shader_integer_functions	glext.h	/^#define GL_MESA_shader_integer_functions /;"	d
GL_MESA_tile_raster_order	glext.h	/^#define GL_MESA_tile_raster_order /;"	d
GL_MESA_window_pos	glext.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	glext.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	glext.h	/^#define GL_MIN /;"	d
GL_MINMAX	glext.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	glext.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	glext.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	glext.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	glext.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	glext.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	glext.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	glext.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	glext.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_EXT	glext.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_LOD_WARNING_AMD	glext.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	glext.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SPARSE_LEVEL_AMD	glext.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIPMAP	glext.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	glext.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	glext.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	glext.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	glext.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	glext.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	glext.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MITER_REVERT_NV	glext.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	glext.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	glext.h	/^#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV /;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	glext.h	/^#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV /;"	d
GL_MODELVIEW0_ARB	glext.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	glext.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	glext.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	glext.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	glext.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	glext.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	glext.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	glext.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	glext.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	glext.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	glext.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	glext.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	glext.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	glext.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	glext.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	glext.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	glext.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	glext.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	glext.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	glext.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	glext.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	glext.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	glext.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	glext.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	glext.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	glext.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	glext.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	glext.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	glext.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	glext.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	glext.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	glext.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	glext.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	glext.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	glext.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	glext.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	glext.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	glext.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_PROJECTION_NV	glext.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODULATE_ADD_ATI	glext.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATI	glext.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SUBTRACT_ATI	glext.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MOVE_TO_CONTINUES_NV	glext.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	glext.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	glext.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	glext.h	/^#define GL_MOV_ATI /;"	d
GL_MULTICAST_GPUS_NV	glext.h	/^#define GL_MULTICAST_GPUS_NV /;"	d
GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV	glext.h	/^#define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV /;"	d
GL_MULTIPLY_KHR	glext.h	/^#define GL_MULTIPLY_KHR /;"	d
GL_MULTIPLY_NV	glext.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	glext.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLES_NV	glext.h	/^#define GL_MULTISAMPLES_NV /;"	d
GL_MULTISAMPLE_3DFX	glext.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	glext.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	glext.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	glext.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	glext.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	glext.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	glext.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	glext.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	glext.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	glext.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB /;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	glext.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB /;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	glext.h	/^#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT /;"	d
GL_MULTISAMPLE_SGIS	glext.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MUL_ATI	glext.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	glext.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_NAMED_STRING_LENGTH_ARB	glext.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	glext.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	glext.h	/^#define GL_NAME_LENGTH /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	glext.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	glext.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	glext.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	d
GL_NEGATE_BIT_ATI	glext.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	glext.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_ONE_TO_ONE	glext.h	/^#define GL_NEGATIVE_ONE_TO_ONE /;"	d
GL_NEGATIVE_W_EXT	glext.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	glext.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	glext.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	glext.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEXT_BUFFER_NV	glext.h	/^#define GL_NEXT_BUFFER_NV /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	glext.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NOP_COMMAND_NV	glext.h	/^#define GL_NOP_COMMAND_NV /;"	d
GL_NORMALIZED_RANGE_EXT	glext.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	glext.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	glext.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	glext.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	glext.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	glext.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	glext.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	glext.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	glext.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	glext.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	glext.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	glext.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	glext.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	glext.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NO_RESET_NOTIFICATION	glext.h	/^#define GL_NO_RESET_NOTIFICATION /;"	d
GL_NO_RESET_NOTIFICATION_ARB	glext.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	glext.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	glext.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_DEVICE_UUIDS_EXT	glext.h	/^#define GL_NUM_DEVICE_UUIDS_EXT /;"	d
GL_NUM_EXTENSIONS	glext.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	glext.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	glext.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	glext.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	glext.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	glext.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	glext.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	glext.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	glext.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	glext.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	glext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	glext.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	glext.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	glext.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SPARSE_LEVELS_ARB	glext.h	/^#define GL_NUM_SPARSE_LEVELS_ARB /;"	d
GL_NUM_SPIR_V_EXTENSIONS	glext.h	/^#define GL_NUM_SPIR_V_EXTENSIONS /;"	d
GL_NUM_TILING_TYPES_EXT	glext.h	/^#define GL_NUM_TILING_TYPES_EXT /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	glext.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	glext.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	glext.h	/^#define GL_NUM_WINDOW_RECTANGLES_EXT /;"	d
GL_NVX_blend_equation_advanced_multi_draw_buffers	glext.h	/^#define GL_NVX_blend_equation_advanced_multi_draw_buffers /;"	d
GL_NVX_conditional_render	glext.h	/^#define GL_NVX_conditional_render /;"	d
GL_NVX_gpu_memory_info	glext.h	/^#define GL_NVX_gpu_memory_info /;"	d
GL_NVX_linked_gpu_multicast	glext.h	/^#define GL_NVX_linked_gpu_multicast /;"	d
GL_NV_alpha_to_coverage_dither_control	glext.h	/^#define GL_NV_alpha_to_coverage_dither_control /;"	d
GL_NV_bindless_multi_draw_indirect	glext.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_multi_draw_indirect_count	glext.h	/^#define GL_NV_bindless_multi_draw_indirect_count /;"	d
GL_NV_bindless_texture	glext.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	glext.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	glext.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_minmax_factor	glext.h	/^#define GL_NV_blend_minmax_factor /;"	d
GL_NV_blend_square	glext.h	/^#define GL_NV_blend_square /;"	d
GL_NV_clip_space_w_scaling	glext.h	/^#define GL_NV_clip_space_w_scaling /;"	d
GL_NV_command_list	glext.h	/^#define GL_NV_command_list /;"	d
GL_NV_compute_program5	glext.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_conditional_render	glext.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_conservative_raster	glext.h	/^#define GL_NV_conservative_raster /;"	d
GL_NV_conservative_raster_dilate	glext.h	/^#define GL_NV_conservative_raster_dilate /;"	d
GL_NV_conservative_raster_pre_snap	glext.h	/^#define GL_NV_conservative_raster_pre_snap /;"	d
GL_NV_conservative_raster_pre_snap_triangles	glext.h	/^#define GL_NV_conservative_raster_pre_snap_triangles /;"	d
GL_NV_conservative_raster_underestimation	glext.h	/^#define GL_NV_conservative_raster_underestimation /;"	d
GL_NV_copy_depth_to_color	glext.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	glext.h	/^#define GL_NV_copy_image /;"	d
GL_NV_deep_texture3D	glext.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	glext.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	glext.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_draw_texture	glext.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_draw_vulkan_image	glext.h	/^#define GL_NV_draw_vulkan_image /;"	d
GL_NV_evaluators	glext.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_multisample	glext.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fence	glext.h	/^#define GL_NV_fence /;"	d
GL_NV_fill_rectangle	glext.h	/^#define GL_NV_fill_rectangle /;"	d
GL_NV_float_buffer	glext.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	glext.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_coverage_to_color	glext.h	/^#define GL_NV_fragment_coverage_to_color /;"	d
GL_NV_fragment_program	glext.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	glext.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	glext.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	glext.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_fragment_shader_interlock	glext.h	/^#define GL_NV_fragment_shader_interlock /;"	d
GL_NV_framebuffer_mixed_samples	glext.h	/^#define GL_NV_framebuffer_mixed_samples /;"	d
GL_NV_framebuffer_multisample_coverage	glext.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_geometry_program4	glext.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	glext.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_geometry_shader_passthrough	glext.h	/^#define GL_NV_geometry_shader_passthrough /;"	d
GL_NV_gpu_multicast	glext.h	/^#define GL_NV_gpu_multicast /;"	d
GL_NV_gpu_program4	glext.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	glext.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	glext.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_shader5	glext.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	glext.h	/^#define GL_NV_half_float /;"	d
GL_NV_internalformat_sample_query	glext.h	/^#define GL_NV_internalformat_sample_query /;"	d
GL_NV_light_max_exponent	glext.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_coverage	glext.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	glext.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	glext.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	glext.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_parameter_buffer_object	glext.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	glext.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	glext.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_path_rendering_shared_edge	glext.h	/^#define GL_NV_path_rendering_shared_edge /;"	d
GL_NV_pixel_data_range	glext.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	glext.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_present_video	glext.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	glext.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_query_resource	glext.h	/^#define GL_NV_query_resource /;"	d
GL_NV_query_resource_tag	glext.h	/^#define GL_NV_query_resource_tag /;"	d
GL_NV_register_combiners	glext.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	glext.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_robustness_video_memory_purge	glext.h	/^#define GL_NV_robustness_video_memory_purge /;"	d
GL_NV_sample_locations	glext.h	/^#define GL_NV_sample_locations /;"	d
GL_NV_sample_mask_override_coverage	glext.h	/^#define GL_NV_sample_mask_override_coverage /;"	d
GL_NV_shader_atomic_counters	glext.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	glext.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_atomic_float64	glext.h	/^#define GL_NV_shader_atomic_float64 /;"	d
GL_NV_shader_atomic_fp16_vector	glext.h	/^#define GL_NV_shader_atomic_fp16_vector /;"	d
GL_NV_shader_atomic_int64	glext.h	/^#define GL_NV_shader_atomic_int64 /;"	d
GL_NV_shader_buffer_load	glext.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_buffer_store	glext.h	/^#define GL_NV_shader_buffer_store /;"	d
GL_NV_shader_storage_buffer_object	glext.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_shader_thread_group	glext.h	/^#define GL_NV_shader_thread_group /;"	d
GL_NV_shader_thread_shuffle	glext.h	/^#define GL_NV_shader_thread_shuffle /;"	d
GL_NV_stereo_view_rendering	glext.h	/^#define GL_NV_stereo_view_rendering /;"	d
GL_NV_tessellation_program5	glext.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	glext.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	glext.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_barrier	glext.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_compression_vtc	glext.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	glext.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	glext.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	glext.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_rectangle	glext.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_rectangle_compressed	glext.h	/^#define GL_NV_texture_rectangle_compressed /;"	d
GL_NV_texture_shader	glext.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	glext.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	glext.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	glext.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	glext.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_uniform_buffer_unified_memory	glext.h	/^#define GL_NV_uniform_buffer_unified_memory /;"	d
GL_NV_vdpau_interop	glext.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vertex_array_range	glext.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	glext.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	glext.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	glext.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	glext.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	glext.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	glext.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	glext.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	glext.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	glext.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	glext.h	/^#define GL_NV_video_capture /;"	d
GL_NV_viewport_array2	glext.h	/^#define GL_NV_viewport_array2 /;"	d
GL_NV_viewport_swizzle	glext.h	/^#define GL_NV_viewport_swizzle /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	glext.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	glext.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	glext.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	glext.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	glext.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	glext.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	glext.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	glext.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINEAR_NV	glext.h	/^#define GL_OBJECT_LINEAR_NV /;"	d
GL_OBJECT_LINE_SGIS	glext.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	glext.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_POINT_SGIS	glext.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	glext.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	glext.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	glext.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_ARB	glext.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	glext.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	glext.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OCCLUSION_TEST_HP	glext.h	/^#define GL_OCCLUSION_TEST_HP /;"	d
GL_OCCLUSION_TEST_RESULT_HP	glext.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	d
GL_OES_byte_coordinates	glext.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_paletted_texture	glext.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_fixed_point	glext.h	/^#define GL_OES_fixed_point /;"	d
GL_OES_query_matrix	glext.h	/^#define GL_OES_query_matrix /;"	d
GL_OES_read_format	glext.h	/^#define GL_OES_read_format /;"	d
GL_OES_single_precision	glext.h	/^#define GL_OES_single_precision /;"	d
GL_OFFSET	glext.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	glext.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	glext.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	glext.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	glext.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	glext.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	glext.h	/^#define GL_OML_subsample /;"	d
GL_ONE_EXT	glext.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_SRC1_ALPHA	glext.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	glext.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_OPERAND0_ALPHA	glext.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	glext.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	glext.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	glext.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	glext.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	glext.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	glext.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	glext.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	glext.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	glext.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	glext.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	glext.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	glext.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	glext.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	glext.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	glext.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	glext.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	glext.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	glext.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	glext.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OPTIMAL_TILING_EXT	glext.h	/^#define GL_OPTIMAL_TILING_EXT /;"	d
GL_OP_ADD_EXT	glext.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	glext.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	glext.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	glext.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	glext.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	glext.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	glext.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	glext.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	glext.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	glext.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	glext.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	glext.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	glext.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	glext.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	glext.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	glext.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	glext.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	glext.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	glext.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	glext.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	glext.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	glext.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	glext.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	glext.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OUTPUT_COLOR0_EXT	glext.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	glext.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	glext.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	glext.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	glext.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OVERLAY_KHR	glext.h	/^#define GL_OVERLAY_KHR /;"	d
GL_OVERLAY_NV	glext.h	/^#define GL_OVERLAY_NV /;"	d
GL_OVR_multiview	glext.h	/^#define GL_OVR_multiview /;"	d
GL_OVR_multiview2	glext.h	/^#define GL_OVR_multiview2 /;"	d
GL_PACK_CMYK_HINT_EXT	glext.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_DEPTH_SGIS	glext.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	d
GL_PACK_IMAGE_HEIGHT	glext.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	glext.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	glext.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_RESAMPLE_OML	glext.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	glext.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_ROW_BYTES_APPLE	glext.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_SKIP_IMAGES	glext.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	glext.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_VOLUMES_SGIS	glext.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	glext.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PALETTE4_R5_G6_B5_OES	glext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	glext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	glext.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	glext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	glext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	glext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	glext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	glext.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	glext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	glext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	glext.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER	glext.h	/^#define GL_PARAMETER_BUFFER /;"	d
GL_PARAMETER_BUFFER_ARB	glext.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING	glext.h	/^#define GL_PARAMETER_BUFFER_BINDING /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	glext.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	glext.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	glext.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PATCHES	glext.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	glext.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	glext.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	glext.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	glext.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	glext.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	glext.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	glext.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	glext.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	glext.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	glext.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	glext.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	glext.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	glext.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	glext.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	glext.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	glext.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	glext.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	glext.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	glext.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	glext.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	glext.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	glext.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	glext.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	glext.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	glext.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	glext.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	glext.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	glext.h	/^#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV /;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	glext.h	/^#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV /;"	d
GL_PATH_MITER_LIMIT_NV	glext.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_MODELVIEW_MATRIX_NV	glext.h	/^#define GL_PATH_MODELVIEW_MATRIX_NV /;"	d
GL_PATH_MODELVIEW_NV	glext.h	/^#define GL_PATH_MODELVIEW_NV /;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	glext.h	/^#define GL_PATH_MODELVIEW_STACK_DEPTH_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_PROJECTION_MATRIX_NV	glext.h	/^#define GL_PATH_PROJECTION_MATRIX_NV /;"	d
GL_PATH_PROJECTION_NV	glext.h	/^#define GL_PATH_PROJECTION_NV /;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	glext.h	/^#define GL_PATH_PROJECTION_STACK_DEPTH_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	glext.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	glext.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	glext.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	glext.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	glext.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	glext.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	glext.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	glext.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	glext.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	glext.h	/^#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV /;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	glext.h	/^#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV /;"	d
GL_PERCENTAGE_AMD	glext.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_RESULT_AMD	glext.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	glext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	glext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	glext.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	glext.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	glext.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	glext.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	glext.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	glext.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	glext.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	glext.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	glext.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERTURB_EXT	glext.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_GPU_STORAGE_BIT_NV	glext.h	/^#define GL_PER_GPU_STORAGE_BIT_NV /;"	d
GL_PER_GPU_STORAGE_NV	glext.h	/^#define GL_PER_GPU_STORAGE_NV /;"	d
GL_PER_STAGE_CONSTANTS_NV	glext.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	glext.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	glext.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	glext.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	glext.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	glext.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD	glext.h	/^#define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD /;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD	glext.h	/^#define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	glext.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	glext.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	glext.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	glext.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	glext.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	glext.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	d
GL_PIXEL_GROUP_COLOR_SGIS	glext.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	d
GL_PIXEL_MAG_FILTER_EXT	glext.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MIN_FILTER_EXT	glext.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_PACK_BUFFER	glext.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	glext.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	glext.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	glext.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TEXTURE_SGIS	glext.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	glext.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	d
GL_PIXEL_TEX_GEN_SGIX	glext.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	glext.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	glext.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	glext.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	glext.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_WIDTH_SGIX	glext.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glext.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	glext.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	glext.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	glext.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	glext.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	glext.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glext.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT_DISTANCE_ATTENUATION	glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	d
GL_POINT_SIZE_MAX	glext.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	glext.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	glext.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MAX_SGIS	glext.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	d
GL_POINT_SIZE_MIN	glext.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	glext.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	glext.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_MIN_SGIS	glext.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	d
GL_POINT_SPRITE	glext.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	glext.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	glext.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_NV	glext.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	glext.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	glext.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_CLAMP	glext.h	/^#define GL_POLYGON_OFFSET_CLAMP /;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	glext.h	/^#define GL_POLYGON_OFFSET_CLAMP_EXT /;"	d
GL_POLYGON_OFFSET_COMMAND_NV	glext.h	/^#define GL_POLYGON_OFFSET_COMMAND_NV /;"	d
GL_POLYGON_OFFSET_EXT	glext.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	glext.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	glext.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	glext.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	glext.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	glext.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	glext.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	glext.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	glext.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	glext.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	glext.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	glext.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	glext.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	glext.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	glext.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	glext.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	glext.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	glext.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVES_SUBMITTED	glext.h	/^#define GL_PRIMITIVES_SUBMITTED /;"	d
GL_PRIMITIVES_SUBMITTED_ARB	glext.h	/^#define GL_PRIMITIVES_SUBMITTED_ARB /;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	glext.h	/^#define GL_PRIMITIVE_BOUNDING_BOX_ARB /;"	d
GL_PRIMITIVE_ID_NV	glext.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	glext.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	glext.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	glext.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	glext.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	glext.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	glext.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	glext.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	glext.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	glext.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	glext.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	glext.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_FORMATS	glext.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_FORMAT_MESA	glext.h	/^#define GL_PROGRAM_BINARY_FORMAT_MESA /;"	d
GL_PROGRAM_BINARY_LENGTH	glext.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	glext.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	glext.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	glext.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	glext.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	glext.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	glext.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	glext.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	glext.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	glext.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	glext.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	glext.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	glext.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	glext.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	glext.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	glext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	glext.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	glext.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	glext.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	glext.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	glext.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	glext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	glext.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	glext.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	glext.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	glext.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	glext.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	glext.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_STRING_ARB	glext.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	glext.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	glext.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	glext.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	glext.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	glext.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	glext.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROTECTED_MEMORY_OBJECT_EXT	glext.h	/^#define GL_PROTECTED_MEMORY_OBJECT_EXT /;"	d
GL_PROVOKING_VERTEX	glext.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	glext.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	glext.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	glext.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	glext.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	glext.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	glext.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	glext.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	glext.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	glext.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_4D_SGIS	glext.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	glext.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	glext.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_PURGED_CONTEXT_RESET_NV	glext.h	/^#define GL_PURGED_CONTEXT_RESET_NV /;"	d
GL_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUAD_ALPHA4_SGIS	glext.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	d
GL_QUAD_ALPHA8_SGIS	glext.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	d
GL_QUAD_INTENSITY4_SGIS	glext.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	d
GL_QUAD_INTENSITY8_SGIS	glext.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	d
GL_QUAD_LUMINANCE4_SGIS	glext.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	d
GL_QUAD_LUMINANCE8_SGIS	glext.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	d
GL_QUAD_MESH_SUN	glext.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	glext.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	d
GL_QUARTER_BIT_ATI	glext.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	glext.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	glext.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	glext.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	glext.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	glext.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	glext.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	glext.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	glext.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	glext.h	/^#define GL_QUERY_BY_REGION_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_WAIT_NV	glext.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	glext.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ARB	glext.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_NO_WAIT	glext.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_INVERTED	glext.h	/^#define GL_QUERY_NO_WAIT_INVERTED /;"	d
GL_QUERY_NO_WAIT_NV	glext.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	glext.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	glext.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESOURCE_BUFFEROBJECT_NV	glext.h	/^#define GL_QUERY_RESOURCE_BUFFEROBJECT_NV /;"	d
GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV	glext.h	/^#define GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV /;"	d
GL_QUERY_RESOURCE_RENDERBUFFER_NV	glext.h	/^#define GL_QUERY_RESOURCE_RENDERBUFFER_NV /;"	d
GL_QUERY_RESOURCE_SYS_RESERVED_NV	glext.h	/^#define GL_QUERY_RESOURCE_SYS_RESERVED_NV /;"	d
GL_QUERY_RESOURCE_TEXTURE_NV	glext.h	/^#define GL_QUERY_RESOURCE_TEXTURE_NV /;"	d
GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV	glext.h	/^#define GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV /;"	d
GL_QUERY_RESULT	glext.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ARB	glext.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	glext.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	glext.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_NO_WAIT	glext.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	glext.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	glext.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_TARGET	glext.h	/^#define GL_QUERY_TARGET /;"	d
GL_QUERY_WAIT	glext.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_INVERTED	glext.h	/^#define GL_QUERY_WAIT_INVERTED /;"	d
GL_QUERY_WAIT_NV	glext.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R11F_G11F_B10F	glext.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_EXT	glext.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R16	glext.h	/^#define GL_R16 /;"	d
GL_R16F	glext.h	/^#define GL_R16F /;"	d
GL_R16I	glext.h	/^#define GL_R16I /;"	d
GL_R16UI	glext.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	glext.h	/^#define GL_R16_SNORM /;"	d
GL_R1UI_C3F_V3F_SUN	glext.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	glext.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	glext.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	glext.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	glext.h	/^#define GL_R32F /;"	d
GL_R32I	glext.h	/^#define GL_R32I /;"	d
GL_R32UI	glext.h	/^#define GL_R32UI /;"	d
GL_R8	glext.h	/^#define GL_R8 /;"	d
GL_R8I	glext.h	/^#define GL_R8I /;"	d
GL_R8UI	glext.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	glext.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	glext.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	glext.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	glext.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	glext.h	/^#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT /;"	d
GL_RASTER_MULTISAMPLE_EXT	glext.h	/^#define GL_RASTER_MULTISAMPLE_EXT /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	glext.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_RASTER_SAMPLES_EXT	glext.h	/^#define GL_RASTER_SAMPLES_EXT /;"	d
GL_READ_FRAMEBUFFER	glext.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_EXT	glext.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_ONLY	glext.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	glext.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	glext.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	glext.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	glext.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	glext.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	glext.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	glext.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	glext.h	/^#define GL_RECT_NV /;"	d
GL_REDUCE	glext.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	glext.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIT_ATI	glext.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_INTEGER	glext.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	glext.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	glext.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	glext.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	glext.h	/^#define GL_RED_NV /;"	d
GL_RED_SNORM	glext.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	glext.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	d
GL_REFERENCE_PLANE_SGIX	glext.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	d
GL_REFLECTION_MAP	glext.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	glext.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	glext.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	glext.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGISTER_COMBINERS_NV	glext.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	glext.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_10_ATI	glext.h	/^#define GL_REG_10_ATI /;"	d
GL_REG_11_ATI	glext.h	/^#define GL_REG_11_ATI /;"	d
GL_REG_12_ATI	glext.h	/^#define GL_REG_12_ATI /;"	d
GL_REG_13_ATI	glext.h	/^#define GL_REG_13_ATI /;"	d
GL_REG_14_ATI	glext.h	/^#define GL_REG_14_ATI /;"	d
GL_REG_15_ATI	glext.h	/^#define GL_REG_15_ATI /;"	d
GL_REG_16_ATI	glext.h	/^#define GL_REG_16_ATI /;"	d
GL_REG_17_ATI	glext.h	/^#define GL_REG_17_ATI /;"	d
GL_REG_18_ATI	glext.h	/^#define GL_REG_18_ATI /;"	d
GL_REG_19_ATI	glext.h	/^#define GL_REG_19_ATI /;"	d
GL_REG_1_ATI	glext.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_20_ATI	glext.h	/^#define GL_REG_20_ATI /;"	d
GL_REG_21_ATI	glext.h	/^#define GL_REG_21_ATI /;"	d
GL_REG_22_ATI	glext.h	/^#define GL_REG_22_ATI /;"	d
GL_REG_23_ATI	glext.h	/^#define GL_REG_23_ATI /;"	d
GL_REG_24_ATI	glext.h	/^#define GL_REG_24_ATI /;"	d
GL_REG_25_ATI	glext.h	/^#define GL_REG_25_ATI /;"	d
GL_REG_26_ATI	glext.h	/^#define GL_REG_26_ATI /;"	d
GL_REG_27_ATI	glext.h	/^#define GL_REG_27_ATI /;"	d
GL_REG_28_ATI	glext.h	/^#define GL_REG_28_ATI /;"	d
GL_REG_29_ATI	glext.h	/^#define GL_REG_29_ATI /;"	d
GL_REG_2_ATI	glext.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_30_ATI	glext.h	/^#define GL_REG_30_ATI /;"	d
GL_REG_31_ATI	glext.h	/^#define GL_REG_31_ATI /;"	d
GL_REG_3_ATI	glext.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	glext.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	glext.h	/^#define GL_REG_5_ATI /;"	d
GL_REG_6_ATI	glext.h	/^#define GL_REG_6_ATI /;"	d
GL_REG_7_ATI	glext.h	/^#define GL_REG_7_ATI /;"	d
GL_REG_8_ATI	glext.h	/^#define GL_REG_8_ATI /;"	d
GL_REG_9_ATI	glext.h	/^#define GL_REG_9_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_CONIC_CURVE_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	glext.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_RECT_NV	glext.h	/^#define GL_RELATIVE_RECT_NV /;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	glext.h	/^#define GL_RELATIVE_ROUNDED_RECT2_NV /;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	glext.h	/^#define GL_RELATIVE_ROUNDED_RECT4_NV /;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	glext.h	/^#define GL_RELATIVE_ROUNDED_RECT8_NV /;"	d
GL_RELATIVE_ROUNDED_RECT_NV	glext.h	/^#define GL_RELATIVE_ROUNDED_RECT_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	glext.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	glext.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	glext.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDERBUFFER	glext.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING	glext.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	glext.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE	glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	glext.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	glext.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	glext.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	glext.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT	glext.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	glext.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE	glext.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_SAMPLES	glext.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	glext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH	glext.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	glext.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_RENDER_GPU_MASK_NV	glext.h	/^#define GL_RENDER_GPU_MASK_NV /;"	d
GL_REND_screen_coordinates	glext.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	glext.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	glext.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	glext.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	glext.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	glext.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	glext.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPLICATE_BORDER_HP	glext.h	/^#define GL_REPLICATE_BORDER_HP /;"	d
GL_RESAMPLE_AVERAGE_OML	glext.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	glext.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	glext.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	glext.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	glext.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	glext.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	glext.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	glext.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	glext.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY	glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESTART_PATH_NV	glext.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	glext.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	glext.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RG	glext.h	/^#define GL_RG /;"	d
GL_RG16	glext.h	/^#define GL_RG16 /;"	d
GL_RG16F	glext.h	/^#define GL_RG16F /;"	d
GL_RG16I	glext.h	/^#define GL_RG16I /;"	d
GL_RG16UI	glext.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	glext.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	glext.h	/^#define GL_RG32F /;"	d
GL_RG32I	glext.h	/^#define GL_RG32I /;"	d
GL_RG32UI	glext.h	/^#define GL_RG32UI /;"	d
GL_RG8	glext.h	/^#define GL_RG8 /;"	d
GL_RG8I	glext.h	/^#define GL_RG8I /;"	d
GL_RG8UI	glext.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	glext.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB10_A2UI	glext.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	glext.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	glext.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12_EXT	glext.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16F	glext.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	glext.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16I	glext.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	glext.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	glext.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	glext.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	glext.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_SNORM	glext.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB2_EXT	glext.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	glext.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	glext.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32I	glext.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	glext.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	glext.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	glext.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4_EXT	glext.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	glext.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB565	glext.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1_EXT	glext.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_EXT	glext.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8I	glext.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	glext.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	glext.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	glext.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	glext.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_SNORM	glext.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	glext.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_EXT	glext.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA12_EXT	glext.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16F	glext.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	glext.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16I	glext.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	glext.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	glext.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	glext.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	glext.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_SNORM	glext.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2_EXT	glext.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	glext.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	glext.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32I	glext.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	glext.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	glext.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	glext.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4_DXT5_S3TC	glext.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	glext.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_S3TC	glext.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8I	glext.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	glext.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	glext.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	glext.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	glext.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_SNORM	glext.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	glext.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_FLOAT16_APPLE	glext.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	glext.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	glext.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	glext.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	glext.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_FLOAT_MODE_ATI	glext.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	d
GL_RGBA_INTEGER	glext.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	glext.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	glext.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_S3TC	glext.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	glext.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SNORM	glext.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	glext.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	glext.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_FLOAT16_APPLE	glext.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	glext.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	glext.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	glext.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_INTEGER	glext.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	glext.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	glext.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	glext.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	glext.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	glext.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	glext.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SNORM	glext.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_INTEGER	glext.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	glext.h	/^#define GL_RG_SNORM /;"	d
GL_ROUNDED_RECT2_NV	glext.h	/^#define GL_ROUNDED_RECT2_NV /;"	d
GL_ROUNDED_RECT4_NV	glext.h	/^#define GL_ROUNDED_RECT4_NV /;"	d
GL_ROUNDED_RECT8_NV	glext.h	/^#define GL_ROUNDED_RECT8_NV /;"	d
GL_ROUNDED_RECT_NV	glext.h	/^#define GL_ROUNDED_RECT_NV /;"	d
GL_ROUND_NV	glext.h	/^#define GL_ROUND_NV /;"	d
GL_S3_s3tc	glext.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	glext.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	glext.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	glext.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	glext.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	glext.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	glext.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	glext.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	glext.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	glext.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	glext.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	glext.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_3D	glext.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	glext.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_BINDING	glext.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	glext.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_CUBE	glext.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	glext.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	glext.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	glext.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_OBJECT_AMD	glext.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	glext.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	glext.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	glext.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	glext.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	glext.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	glext.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	glext.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	glext.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	glext.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	glext.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	glext.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	glext.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COVERAGE	glext.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_LOCATION_ARB	glext.h	/^#define GL_SAMPLE_LOCATION_ARB /;"	d
GL_SAMPLE_LOCATION_NV	glext.h	/^#define GL_SAMPLE_LOCATION_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	glext.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	glext.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	glext.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	glext.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	glext.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	glext.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV /;"	d
GL_SAMPLE_MASK	glext.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	glext.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	glext.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	glext.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	glext.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	glext.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	glext.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	glext.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	glext.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	glext.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	glext.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	glext.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	glext.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	glext.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	glext.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	glext.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SATURATE_BIT_ATI	glext.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	glext.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	glext.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	glext.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	glext.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	glext.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	glext.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	glext.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCISSOR_COMMAND_NV	glext.h	/^#define GL_SCISSOR_COMMAND_NV /;"	d
GL_SCREEN_COORDINATES_REND	glext.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_KHR	glext.h	/^#define GL_SCREEN_KHR /;"	d
GL_SCREEN_NV	glext.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_NV	glext.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	glext.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SEPARABLE_2D	glext.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	glext.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	glext.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	glext.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	glext.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET_AMD	glext.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_detail_texture	glext.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	glext.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	glext.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	glext.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	glext.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	glext.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_point_parameters	glext.h	/^#define GL_SGIS_point_parameters /;"	d
GL_SGIS_sharpen_texture	glext.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	glext.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	glext.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_color_mask	glext.h	/^#define GL_SGIS_texture_color_mask /;"	d
GL_SGIS_texture_edge_clamp	glext.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	glext.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	glext.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	glext.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	glext.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	glext.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	glext.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	glext.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_calligraphic_fragment	glext.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	glext.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	glext.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_pass_instrument	glext.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	glext.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	glext.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	glext.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fragment_lighting	glext.h	/^#define GL_SGIX_fragment_lighting /;"	d
GL_SGIX_framezoom	glext.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_igloo_interface	glext.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_instruments	glext.h	/^#define GL_SGIX_instruments /;"	d
GL_SGIX_interlace	glext.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	glext.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	glext.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	glext.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_tiles	glext.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	glext.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_reference_plane	glext.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	glext.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	glext.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	glext.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	glext.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	glext.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subsample	glext.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	glext.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	glext.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	glext.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	glext.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	glext.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_scale_bias	glext.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_vertex_preclip	glext.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_ycrcb	glext.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	glext.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	glext.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_matrix	glext.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	glext.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	glext.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SHADER	glext.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	glext.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V	glext.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	glext.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB /;"	d
GL_SHADER_COMPILER	glext.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	glext.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	glext.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	glext.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	glext.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	glext.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	glext.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_ARB	glext.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	glext.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	glext.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	glext.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	glext.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	glext.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	glext.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	glext.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	glext.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	glext.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	glext.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	glext.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	glext.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_EDGE_NV	glext.h	/^#define GL_SHARED_EDGE_NV /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	glext.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	glext.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_SIGNALED	glext.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_ALPHA8_NV	glext.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	glext.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	glext.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	glext.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	glext.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	glext.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	glext.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	glext.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	glext.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	glext.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	glext.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	glext.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	glext.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	glext.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	glext.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	glext.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	glext.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	glext.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	glext.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	glext.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	glext.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	glext.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_COMPONENTS1_NV	glext.h	/^#define GL_SKIP_COMPONENTS1_NV /;"	d
GL_SKIP_COMPONENTS2_NV	glext.h	/^#define GL_SKIP_COMPONENTS2_NV /;"	d
GL_SKIP_COMPONENTS3_NV	glext.h	/^#define GL_SKIP_COMPONENTS3_NV /;"	d
GL_SKIP_COMPONENTS4_NV	glext.h	/^#define GL_SKIP_COMPONENTS4_NV /;"	d
GL_SKIP_DECODE_EXT	glext.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	glext.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	glext.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLUMINANCE	glext.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	glext.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	glext.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	glext.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_EXT	glext.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE_ALPHA	glext.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	glext.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_EXT	glext.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SMALL_CCW_ARC_TO_NV	glext.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	glext.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	glext.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	glext.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	glext.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	glext.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	glext.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	glext.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SM_COUNT_NV	glext.h	/^#define GL_SM_COUNT_NV /;"	d
GL_SOFTLIGHT_KHR	glext.h	/^#define GL_SOFTLIGHT_KHR /;"	d
GL_SOFTLIGHT_NV	glext.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	glext.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	glext.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	glext.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	glext.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	glext.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	glext.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	glext.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	glext.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	glext.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	glext.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	glext.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	glext.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	glext.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	glext.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	glext.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	glext.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	glext.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	glext.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	glext.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	glext.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	glext.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	glext.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	glext.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	glext.h	/^#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB /;"	d
GL_SPARSE_STORAGE_BIT_ARB	glext.h	/^#define GL_SPARSE_STORAGE_BIT_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	glext.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPIR_V_BINARY	glext.h	/^#define GL_SPIR_V_BINARY /;"	d
GL_SPIR_V_BINARY_ARB	glext.h	/^#define GL_SPIR_V_BINARY_ARB /;"	d
GL_SPIR_V_EXTENSIONS	glext.h	/^#define GL_SPIR_V_EXTENSIONS /;"	d
GL_SPRITE_AXIAL_SGIX	glext.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	d
GL_SPRITE_AXIS_SGIX	glext.h	/^#define GL_SPRITE_AXIS_SGIX /;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	glext.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	d
GL_SPRITE_MODE_SGIX	glext.h	/^#define GL_SPRITE_MODE_SGIX /;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	glext.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	d
GL_SPRITE_SGIX	glext.h	/^#define GL_SPRITE_SGIX /;"	d
GL_SPRITE_TRANSLATION_SGIX	glext.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	d
GL_SQUARE_NV	glext.h	/^#define GL_SQUARE_NV /;"	d
GL_SRC0_ALPHA	glext.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	glext.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	glext.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	glext.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	glext.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	glext.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	glext.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ATOP_NV	glext.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_IN_NV	glext.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	glext.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	glext.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	glext.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRGB	glext.h	/^#define GL_SRGB /;"	d
GL_SRGB8	glext.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	glext.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	glext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	glext.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB_ALPHA	glext.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	glext.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	glext.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	glext.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	glext.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	glext.h	/^#define GL_SRGB_WRITE /;"	d
GL_STANDARD_FONT_FORMAT_NV	glext.h	/^#define GL_STANDARD_FONT_FORMAT_NV /;"	d
GL_STANDARD_FONT_NAME_NV	glext.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATIC_ATI	glext.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	glext.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	glext.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	glext.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	glext.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	glext.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	glext.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	glext.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STENCIL_ATTACHMENT	glext.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	glext.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	glext.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	glext.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	glext.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	glext.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	glext.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	glext.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	glext.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	glext.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	glext.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_COMPONENTS	glext.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_INDEX1	glext.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	glext.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	glext.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	glext.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX4	glext.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	glext.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX8	glext.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	glext.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_OP_VALUE_AMD	glext.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_REF_COMMAND_NV	glext.h	/^#define GL_STENCIL_REF_COMMAND_NV /;"	d
GL_STENCIL_RENDERABLE	glext.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_SAMPLES_NV	glext.h	/^#define GL_STENCIL_SAMPLES_NV /;"	d
GL_STENCIL_TAG_BITS_EXT	glext.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	glext.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STORAGE_CACHED_APPLE	glext.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	glext.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	glext.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	glext.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	glext.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	glext.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	glext.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	glext.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_RASTERIZATION_AMD	glext.h	/^#define GL_STREAM_RASTERIZATION_AMD /;"	d
GL_STREAM_READ	glext.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	glext.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	glext.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	glext.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	glext.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	glext.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV /;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	glext.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	glext.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	glext.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	glext.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	glext.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	glext.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	glext.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	glext.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	glext.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	glext.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_slice_accum	glext.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	glext.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	glext.h	/^#define GL_SUN_vertex /;"	d
GL_SUPERSAMPLE_SCALE_X_NV	glext.h	/^#define GL_SUPERSAMPLE_SCALE_X_NV /;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	glext.h	/^#define GL_SUPERSAMPLE_SCALE_Y_NV /;"	d
GL_SURFACE_MAPPED_NV	glext.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	glext.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	glext.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	glext.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	glext.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	glext.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	glext.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	glext.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	glext.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	glext.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	glext.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	glext.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	glext.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	glext.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	glext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	glext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	glext.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_X11_FENCE_EXT	glext.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	glext.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T2F_IUI_N3F_V2F_EXT	glext.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	d
GL_T2F_IUI_N3F_V3F_EXT	glext.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	d
GL_T2F_IUI_V2F_EXT	glext.h	/^#define GL_T2F_IUI_V2F_EXT /;"	d
GL_T2F_IUI_V3F_EXT	glext.h	/^#define GL_T2F_IUI_V3F_EXT /;"	d
GL_TABLE_TOO_LARGE	glext.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TABLE_TOO_LARGE_EXT	glext.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	d
GL_TANGENT_ARRAY_EXT	glext.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	glext.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	glext.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	glext.h	/^#define GL_TERMINATE_SEQUENCE_COMMAND_NV /;"	d
GL_TESSELLATION_FACTOR_AMD	glext.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	glext.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	glext.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	glext.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	glext.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	glext.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_PATCHES	glext.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES /;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	glext.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES_ARB /;"	d
GL_TESS_CONTROL_SUBROUTINE	glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	glext.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	glext.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	glext.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS	glext.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	glext.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB /;"	d
GL_TESS_EVALUATION_SUBROUTINE	glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	glext.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	glext.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	glext.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	glext.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	glext.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXCOORD1_BIT_PGI	glext.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	glext.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	glext.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	glext.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE0	glext.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	glext.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	glext.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	glext.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	glext.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	glext.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	glext.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	glext.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	glext.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	glext.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	glext.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	glext.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	glext.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	glext.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	glext.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	glext.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	glext.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	glext.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	glext.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	glext.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	glext.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	glext.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	glext.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	glext.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	glext.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	glext.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	glext.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	glext.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	glext.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	glext.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	glext.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	glext.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	glext.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	glext.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	glext.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	glext.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	glext.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	glext.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	glext.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	glext.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	glext.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	glext.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	glext.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	glext.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	glext.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	glext.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	glext.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	glext.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	glext.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	glext.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	glext.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	glext.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	glext.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	glext.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	glext.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	glext.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	glext.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	glext.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	glext.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	glext.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	glext.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	glext.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	glext.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	glext.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D_ARRAY	glext.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	glext.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	glext.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D_ARRAY	glext.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	glext.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	glext.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	glext.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	glext.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	glext.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_4DSIZE_SGIS	glext.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	d
GL_TEXTURE_4D_BINDING_SGIS	glext.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	d
GL_TEXTURE_4D_SGIS	glext.h	/^#define GL_TEXTURE_4D_SGIS /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	glext.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	glext.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	glext.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	glext.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	glext.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	glext.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	glext.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	glext.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	glext.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	glext.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	glext.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER_VALUES_NV	glext.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	glext.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	glext.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET	glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	glext.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	glext.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	glext.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	glext.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	glext.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	glext.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_MODE	glext.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	glext.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	glext.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	glext.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPRESSED	glext.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	glext.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	glext.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	glext.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	glext.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CUBE_MAP	glext.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	glext.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	glext.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEFORMATION_SGIX	glext.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	d
GL_TEXTURE_DEPTH	glext.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	glext.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_SIZE	glext.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	glext.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	glext.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	glext.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	glext.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	glext.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV_BIAS_SGIX	glext.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	glext.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	d
GL_TEXTURE_FILTER_CONTROL	glext.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	glext.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	glext.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	glext.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	glext.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	glext.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	glext.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	glext.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	glext.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	glext.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	glext.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HI_SIZE_NV	glext.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	glext.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	glext.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	glext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	glext.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	glext.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	glext.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	glext.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHTING_MODE_HP	glext.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	d
GL_TEXTURE_LIGHT_EXT	glext.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	glext.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	glext.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	glext.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	d
GL_TEXTURE_LO_SIZE_NV	glext.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	glext.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_SIZE_NV	glext.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	glext.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	glext.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MAX_ANISOTROPY	glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	glext.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	glext.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	glext.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	glext.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	glext.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	glext.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_LOD	glext.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	glext.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	glext.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	glext.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_POST_SPECULAR_HP	glext.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	d
GL_TEXTURE_PRE_SPECULAR_HP	glext.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	d
GL_TEXTURE_PRIORITY_EXT	glext.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	glext.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	glext.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	glext.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	glext.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_NV	glext.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	glext.h	/^#define GL_TEXTURE_REDUCTION_MODE_ARB /;"	d
GL_TEXTURE_REDUCTION_MODE_EXT	glext.h	/^#define GL_TEXTURE_REDUCTION_MODE_EXT /;"	d
GL_TEXTURE_RED_SIZE_EXT	glext.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	glext.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	glext.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	glext.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	glext.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT_EXT	glext.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	glext.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADER_NV	glext.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	glext.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	glext.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	glext.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	glext.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	glext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STENCIL_SIZE	glext.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	glext.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	glext.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	glext.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	glext.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	glext.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	glext.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	glext.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	glext.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TARGET	glext.h	/^#define GL_TEXTURE_TARGET /;"	d
GL_TEXTURE_TILING_EXT	glext.h	/^#define GL_TEXTURE_TILING_EXT /;"	d
GL_TEXTURE_TOO_LARGE_EXT	glext.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	glext.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_VIEW	glext.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	glext.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	glext.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	glext.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	glext.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WRAP_Q_SGIS	glext.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	d
GL_TEXTURE_WRAP_R	glext.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	glext.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	glext.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TILE_RASTER_ORDER_FIXED_MESA	glext.h	/^#define GL_TILE_RASTER_ORDER_FIXED_MESA /;"	d
GL_TILE_RASTER_ORDER_INCREASING_X_MESA	glext.h	/^#define GL_TILE_RASTER_ORDER_INCREASING_X_MESA /;"	d
GL_TILE_RASTER_ORDER_INCREASING_Y_MESA	glext.h	/^#define GL_TILE_RASTER_ORDER_INCREASING_Y_MESA /;"	d
GL_TILING_TYPES_EXT	glext.h	/^#define GL_TILING_TYPES_EXT /;"	d
GL_TIMEOUT_EXPIRED	glext.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	glext.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	glext.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	glext.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_EXT	glext.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	glext.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	glext.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACK_MATRIX_NV	glext.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	glext.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_FEEDBACK	glext.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW	glext.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	glext.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW	glext.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	glext.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	glext.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATE_2D_NV	glext.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	glext.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	glext.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	glext.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	glext.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	glext.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	glext.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	glext.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES_ADJACENCY	glext.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	glext.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	glext.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLE_LIST_SUN	glext.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	glext.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGULAR_NV	glext.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TYPE	glext.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	glext.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	glext.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	glext.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	glext.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	glext.h	/^#define GL_UNIFORM_ADDRESS_COMMAND_NV /;"	d
GL_UNIFORM_ARRAY_STRIDE	glext.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	glext.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	glext.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	glext.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	glext.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	glext.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	glext.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	glext.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	glext.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	glext.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	glext.h	/^#define GL_UNIFORM_BUFFER_ADDRESS_NV /;"	d
GL_UNIFORM_BUFFER_BINDING	glext.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	glext.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	glext.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	glext.h	/^#define GL_UNIFORM_BUFFER_LENGTH_NV /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	glext.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	glext.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	glext.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	glext.h	/^#define GL_UNIFORM_BUFFER_UNIFIED_NV /;"	d
GL_UNIFORM_IS_ROW_MAJOR	glext.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	glext.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	glext.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	glext.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	glext.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	glext.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET	glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	glext.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	glext.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	glext.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	glext.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	d
GL_UNPACK_IMAGE_HEIGHT	glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_RESAMPLE_OML	glext.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	glext.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	glext.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_SKIP_IMAGES	glext.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	glext.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	glext.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	glext.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNSIGNALED	glext.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	glext.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	glext.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT16_NV	glext.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	glext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	glext.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	glext.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_ARB	glext.h	/^#define GL_UNSIGNED_INT64_VEC2_ARB /;"	d
GL_UNSIGNED_INT64_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_ARB	glext.h	/^#define GL_UNSIGNED_INT64_VEC3_ARB /;"	d
GL_UNSIGNED_INT64_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_ARB	glext.h	/^#define GL_UNSIGNED_INT64_VEC4_ARB /;"	d
GL_UNSIGNED_INT64_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	glext.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	glext.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2	glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_24_8	glext.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	glext.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	glext.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	glext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	glext.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	glext.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	glext.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	glext.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	glext.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	glext.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	glext.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	glext.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	glext.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	glext.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	glext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	glext.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	glext.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	glext.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	glext.h	/^#define GL_UTF8_NV /;"	d
GL_UUID_SIZE_EXT	glext.h	/^#define GL_UUID_SIZE_EXT /;"	d
GL_VALIDATE_STATUS	glext.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	glext.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	glext.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	glext.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	glext.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	glext.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	glext.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	glext.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	glext.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	glext.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	glext.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	glext.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	glext.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	glext.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	glext.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	glext.h	/^#define GL_VECTOR_EXT /;"	d
GL_VERSION_1_2	glext.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	glext.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	glext.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	glext.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	glext.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	glext.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	glext.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	glext.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	glext.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	glext.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	glext.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	glext.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	glext.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	glext.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	glext.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERSION_4_5	glext.h	/^#define GL_VERSION_4_5 /;"	d
GL_VERSION_4_6	glext.h	/^#define GL_VERSION_4_6 /;"	d
GL_VERTEX23_BIT_PGI	glext.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	glext.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	glext.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	glext.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	glext.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	glext.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	glext.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	glext.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	glext.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	glext.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	glext.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	glext.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	glext.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	glext.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	glext.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	glext.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	glext.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	glext.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	glext.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	glext.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	glext.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	glext.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	glext.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	glext.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	glext.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	glext.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	glext.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	glext.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	glext.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	glext.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	glext.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	glext.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	glext.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	glext.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	glext.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_EXT	glext.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	glext.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_INVOCATIONS	glext.h	/^#define GL_VERTEX_SHADER_INVOCATIONS /;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	glext.h	/^#define GL_VERTEX_SHADER_INVOCATIONS_ARB /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	glext.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	glext.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	glext.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	glext.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	glext.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	glext.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	glext.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	glext.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	glext.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	glext.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	glext.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	glext.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	glext.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	glext.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	glext.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	glext.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	glext.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	glext.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VERTICES_SUBMITTED	glext.h	/^#define GL_VERTICES_SUBMITTED /;"	d
GL_VERTICES_SUBMITTED_ARB	glext.h	/^#define GL_VERTICES_SUBMITTED_ARB /;"	d
GL_VIBRANCE_BIAS_NV	glext.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	glext.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	glext.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	glext.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	glext.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	glext.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	glext.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	glext.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIEWPORT_BOUNDS_RANGE	glext.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_COMMAND_NV	glext.h	/^#define GL_VIEWPORT_COMMAND_NV /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	glext.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	glext.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	glext.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	glext.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	glext.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_W_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_X_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	glext.h	/^#define GL_VIEWPORT_SWIZZLE_Z_NV /;"	d
GL_VIEW_CLASS_128_BITS	glext.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	glext.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	glext.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	glext.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	glext.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	glext.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	glext.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	glext.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	glext.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	glext.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	glext.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	glext.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	glext.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	glext.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VOLATILE_APPLE	glext.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	glext.h	/^#define GL_WAIT_FAILED /;"	d
GL_WARPS_PER_SM_NV	glext.h	/^#define GL_WARPS_PER_SM_NV /;"	d
GL_WARP_SIZE_NV	glext.h	/^#define GL_WARP_SIZE_NV /;"	d
GL_WEIGHTED_AVERAGE_ARB	glext.h	/^#define GL_WEIGHTED_AVERAGE_ARB /;"	d
GL_WEIGHTED_AVERAGE_EXT	glext.h	/^#define GL_WEIGHTED_AVERAGE_EXT /;"	d
GL_WEIGHT_ARRAY_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	glext.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	glext.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	glext.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WINDOW_RECTANGLE_EXT	glext.h	/^#define GL_WINDOW_RECTANGLE_EXT /;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	glext.h	/^#define GL_WINDOW_RECTANGLE_MODE_EXT /;"	d
GL_WIN_phong_shading	glext.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	glext.h	/^#define GL_WIN_specular_fog /;"	d
GL_WRAP_BORDER_SUN	glext.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITE_DISCARD_NV	glext.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	glext.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	glext.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	glext.h	/^#define GL_W_EXT /;"	d
GL_XOR_NV	glext.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	glext.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	glext.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	glext.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	glext.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	glext.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_YCRCBA_SGIX	glext.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_422_SGIX	glext.h	/^#define GL_YCRCB_422_SGIX /;"	d
GL_YCRCB_444_SGIX	glext.h	/^#define GL_YCRCB_444_SGIX /;"	d
GL_YCRCB_SGIX	glext.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	glext.h	/^#define GL_Y_EXT /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	glext.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	glext.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	glext.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO_EXT	glext.h	/^#define GL_ZERO_EXT /;"	d
GL_ZERO_TO_ONE	glext.h	/^#define GL_ZERO_TO_ONE /;"	d
GL_Z_EXT	glext.h	/^#define GL_Z_EXT /;"	d
GLchar	glext.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	glext.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLeglClientBufferEXT	glext.h	/^typedef void *GLeglClientBufferEXT;$/;"	t	typeref:typename:void *
GLeglImageOES	glext.h	/^typedef void *GLeglImageOES;$/;"	t	typeref:typename:void *
GLfixed	glext.h	/^typedef GLint GLfixed;$/;"	t	typeref:typename:GLint
GLhalf	glext.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	glext.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	glext.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	glext.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	glext.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint64	glext.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64EXT	glext.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLuint64	glext.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLvdpauSurfaceNV	glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GameUpdateAndRender	game.cpp	/^GameUpdateAndRender(game_memory *GameMemory, game_input *GameInput)$/;"	f	typeref:typename:internal void
Gigabyte	platform.h	/^#define Gigabyte(/;"	d
HalfTransitionCount	platform.h	/^	u32 HalfTransitionCount;$/;"	m	struct:game_button	typeref:typename:u32
Handle	texture.h	/^	u32 Handle;$/;"	m	struct:texture	typeref:typename:u32
HasSkeleton	asset.h	/^	b32 HasSkeleton;$/;"	m	struct:asset_model_header	typeref:typename:b32
HasSkeleton	mesh.h	/^	b32 HasSkeleton;$/;"	m	struct:model	typeref:typename:b32
Height	texture.h	/^	s32 Width, Height;$/;"	m	struct:texture	typeref:typename:s32
IBO	mesh.h	/^	u32 IBO[2];$/;"	m	struct:model	typeref:typename:u32[2]
ID	animation.h	/^	animation_id ID;$/;"	m	struct:animation	typeref:typename:animation_id
INTRINSICS_H	intrinsics.h	/^#define INTRINSICS_H$/;"	d
Indices	mesh.h	/^	u32 *Indices;$/;"	m	struct:mesh	typeref:typename:u32 *
IndicesCount	asset.h	/^	u32 IndicesCount;$/;"	m	struct:asset_mesh_info	typeref:typename:u32
IndicesCount	mesh.h	/^	u32 IndicesCount;$/;"	m	struct:mesh	typeref:typename:u32
Info	animation.h	/^	animation_info *Info;$/;"	m	struct:animation	typeref:typename:animation_info *
InvBindTransforms	mesh.h	/^	mat4 *InvBindTransforms;$/;"	m	struct:mesh	typeref:typename:mat4 *
IsInitialized	animation.h	/^	b32 IsInitialized;$/;"	m	struct:animation_player	typeref:typename:b32
IsInitialized	platform.h	/^	b32 IsInitialized;$/;"	m	struct:game_memory	typeref:typename:b32
IsNewLine	strings.cpp	/^IsNewLine(char *S)$/;"	f	typeref:typename:b32
IsNewLine	strings.cpp	/^IsNewLine(u8 *S)$/;"	f	typeref:typename:b32
IsSpace	strings.cpp	/^IsSpace(u8 *S)$/;"	f	typeref:typename:b32
JointCount	animation.h	/^	u32 JointCount;$/;"	m	struct:animation_info	typeref:typename:u32
JointCount	asset.h	/^	u32 JointCount;$/;"	m	struct:asset_animation_header	typeref:typename:u32
JointCount	asset.h	/^	u32 JointCount;$/;"	m	struct:asset_mesh_info	typeref:typename:u32
JointCount	mesh.h	/^	u32 JointCount;$/;"	m	struct:mesh	typeref:typename:u32
JointIndex	mesh.h	/^	u32 JointIndex[3];$/;"	m	struct:joint_info	typeref:typename:u32[3]
JointIndexGet	mesh.cpp	/^JointIndexGet(string *JointNames, u32 JointCount, string JointName)$/;"	f	typeref:typename:internal s32
JointInfo	mesh.h	/^	joint_info JointInfo;$/;"	m	struct:vertex	typeref:typename:joint_info
JointNames	animation.h	/^	string *JointNames;$/;"	m	struct:animation_info	typeref:typename:string *
JointTransformFromSQT	animation.cpp	/^JointTransformFromSQT(sqt SQT)$/;"	f	typeref:typename:mat4
JointTransformInterpolatedSQT	animation.cpp	/^JointTransformInterpolatedSQT(key_frame *Current, f32 t, key_frame *Next, u32 JointIndex)$/;"	f	typeref:typename:sqt
JointTransforms	mesh.h	/^	mat4 *JointTransforms;$/;"	m	struct:mesh	typeref:typename:mat4 *
Joints	mesh.h	/^	joint *Joints;$/;"	m	struct:mesh	typeref:typename:joint *
KeyFrameCount	animation.h	/^	u32 KeyFrameCount;$/;"	m	struct:animation_info	typeref:typename:u32
KeyFrameCount	asset.h	/^	u32 KeyFrameCount;$/;"	m	struct:asset_animation_header	typeref:typename:u32
KeyFrameIndex	asset.h	/^	u32 KeyFrameIndex;$/;"	m	struct:asset_animation_header	typeref:typename:u32
KeyFrames	animation.h	/^	key_frame *KeyFrames;$/;"	m	struct:animation_info	typeref:typename:key_frame *
Key_A	platform.h	/^	Key_A,$/;"	e	enum:__anon7b2964200103
Key_Count	platform.h	/^	Key_Count$/;"	e	enum:__anon7b2964200103
Key_D	platform.h	/^	Key_D,$/;"	e	enum:__anon7b2964200103
Key_E	platform.h	/^	Key_E,$/;"	e	enum:__anon7b2964200103
Key_S	platform.h	/^	Key_S,$/;"	e	enum:__anon7b2964200103
Key_Shift	platform.h	/^	Key_Shift,$/;"	e	enum:__anon7b2964200103
Key_Space	platform.h	/^	Key_Space,$/;"	e	enum:__anon7b2964200103
Key_W	platform.h	/^	Key_W,$/;"	e	enum:__anon7b2964200103
Keyboard	platform.h	/^	game_keyboard Keyboard;$/;"	m	struct:game_input	typeref:typename:game_keyboard
Kilobyte	platform.h	/^#define Kilobyte(/;"	d
Last	strings.h	/^	string_node *Last;$/;"	m	struct:string_list	typeref:typename:string_node *
Length	math.h	/^Length(v3 V)$/;"	f	typeref:typename:f32
Lerp	math.h	/^Lerp(f32 A, f32 t, f32 B)$/;"	f	typeref:typename:f32
Lerp	math.h	/^Lerp(quaternion A, f32 t, quaternion B)$/;"	f	typeref:typename:quaternion
Lerp	math.h	/^Lerp(v3 A, f32 t, v3 B)$/;"	f	typeref:typename:v3
LerpShortest	math.h	/^LerpShortest(quaternion A, f32 t, quaternion B)$/;"	f	typeref:typename:quaternion
Looping	animation.cpp	/^Looping(animation *Animation)$/;"	f	typeref:typename:b32
MATH_UTIL_H	math.h	/^#define MATH_UTIL_H /;"	d
MESH_H	mesh.h	/^#define MESH_H$/;"	d
MODEL_FILE_MAGIC_NUMBER	asset.h	/^#define MODEL_FILE_MAGIC_NUMBER /;"	d
MODEL_FILE_VERSION	asset.h	/^#define MODEL_FILE_VERSION /;"	d
MagicNumber	asset.h	/^	u32 MagicNumber;$/;"	m	struct:asset_animation_header	typeref:typename:u32
MagicNumber	asset.h	/^	u32 MagicNumber;$/;"	m	struct:asset_model_header	typeref:typename:u32
MainFS	opengl.cpp	/^char *MainFS= R"($/;"	v	typeref:typename:char *
MainFile	build.bat	/^set MainFile=win32_main.cpp$/;"	v
MainVS	opengl.cpp	/^char *MainVS = R"($/;"	v	typeref:typename:char *
Mat3	math.h	/^Mat3(v3 X, v3 Y, v3 Z)$/;"	f	typeref:typename:mat3
Mat4	math.h	/^Mat4(v3 X, v3 Y, v3 Z)$/;"	f	typeref:typename:mat4
Mat4	math.h	/^Mat4(v3 X, v3 Y, v3 Z, v3 W)$/;"	f	typeref:typename:mat4
Mat4Add	math.h	/^Mat4Add(mat4 A, mat4 B)$/;"	f	typeref:typename:mat4
Mat4AffineDecomposition	math.h	/^Mat4AffineDecomposition(mat4 M)$/;"	f	typeref:typename:affine_decomposition
Mat4Camera	math.h	/^Mat4Camera(v3 P, v3 Target)$/;"	f	typeref:typename:mat4
Mat4ColumnGet	math.h	/^Mat4ColumnGet(mat4 M, u32 ColIndex)$/;"	f	typeref:typename:v3
Mat4ColumnSet	math.h	/^Mat4ColumnSet(mat4 M, v4 V, u32 ColIndex)$/;"	f	typeref:typename:mat4
Mat4Identity	math.h	/^Mat4Identity()$/;"	f	typeref:typename:mat4
Mat4Multiply	math.h	/^Mat4Multiply(mat4 A, mat4 B)$/;"	f	typeref:typename:mat4
Mat4OrthographicProjection	math.h	/^Mat4OrthographicProjection(f32 l, f32 r, f32 b, f32 t, f32 n, f32 f)$/;"	f	typeref:typename:mat4
Mat4Perspective	math.h	/^Mat4Perspective(f32 FOV, f32 AspectRatio, f32 ZNear, f32 ZFar)$/;"	f	typeref:typename:mat4
Mat4Scale	math.h	/^Mat4Scale(f32 C)$/;"	f	typeref:typename:mat4
Mat4Scale	math.h	/^Mat4Scale(v3 V)$/;"	f	typeref:typename:mat4
Mat4Transform	math.h	/^Mat4Transform(mat4 T, v4 V)$/;"	f	typeref:typename:v4
Mat4Translate	math.h	/^Mat4Translate(v3 V)$/;"	f	typeref:typename:mat4
Mat4Transpose	math.h	/^Mat4Transpose(mat4 T)$/;"	f	typeref:typename:mat4
Mat4TransposeMat3	math.h	/^Mat4TransposeMat3(mat4 T)$/;"	f	typeref:typename:mat4
Mat4XRotation	math.h	/^Mat4XRotation(f32 Angle)$/;"	f	typeref:typename:mat4
Mat4YRotation	math.h	/^Mat4YRotation(f32 Angle)$/;"	f	typeref:typename:mat4
MaterialSpec	asset.h	/^	material_spec MaterialSpec;$/;"	m	struct:asset_mesh_info	typeref:typename:material_spec
MaterialSpec	mesh.h	/^	material_spec MaterialSpec;$/;"	m	struct:mesh	typeref:typename:material_spec
Max	intrinsics.h	/^Max(f32 X, f32 Y)$/;"	f	typeref:typename:f32
Max3	intrinsics.h	/^Max3(f32 X, f32 Y, f32 Z)$/;"	f	typeref:typename:f32
Megabyte	platform.h	/^#define Megabyte(/;"	d
Memory	texture.h	/^	u8 *Memory;$/;"	m	struct:texture	typeref:typename:u8 *
MemoryCopy	game.h	/^MemoryCopy(memory_index Size, void *SrcInit, void *DestInit)$/;"	f	typeref:typename:internal void *
MemorySet	platform.h	/^#define MemorySet(/;"	d
MemoryZero	game.h	/^MemoryZero(memory_index Size, void *Src)$/;"	f	typeref:typename:internal void
MeshCount	asset.h	/^	u32 MeshCount;$/;"	m	struct:asset_model_header	typeref:typename:u32
MeshCount	mesh.h	/^	u32 MeshCount;$/;"	m	struct:model	typeref:typename:u32
Meshes	mesh.h	/^	mesh *Meshes;$/;"	m	struct:model	typeref:typename:mesh *
Model	animation.h	/^	model *Model; $/;"	m	struct:animation_player	typeref:typename:model *
ModelLoad	asset.cpp	/^ModelLoad(memory_arena *Arena, char *FileName)$/;"	f	typeref:typename:internal model
ModelSpaceTransforms	mesh.h	/^	mat4 *ModelSpaceTransforms;$/;"	m	struct:mesh	typeref:typename:mat4 *
ModelTransformFromBasis	math.h	/^ModelTransformFromBasis(basis *B)$/;"	f	typeref:typename:mat4
ModelUpdate	animation.cpp	/^ModelUpdate(animation_player *AnimationPlayer)$/;"	f	typeref:typename:internal void
MovementState	game.h	/^	movement_state MovementState;$/;"	m	struct:entity	typeref:typename:movement_state
MovementState_Idle	game.h	/^	MovementState_Idle,$/;"	e	enum:movement_state
MovementState_Sprinting	game.h	/^	MovementState_Sprinting,$/;"	e	enum:movement_state
MovementState_Walking	game.h	/^	MovementState_Walking,$/;"	e	enum:movement_state
N	game.h	/^	v3 N;$/;"	m	struct:quad_vertex	typeref:typename:v3
N	mesh.h	/^	v3 N;$/;"	m	struct:vertex	typeref:typename:v3
Name	asset.h	/^	u8 Name[32];$/;"	m	struct:asset_joint_info	typeref:typename:u8[32]
Name	asset.h	/^	u8 Name[32];$/;"	m	struct:asset_mesh_info	typeref:typename:u8[32]
Name	asset.h	/^	u8 Name[64];$/;"	m	struct:asset_joint_name	typeref:typename:u8[64]
Name	mesh.h	/^	string Name;$/;"	m	struct:joint	typeref:typename:string
Name	mesh.h	/^	string Name;$/;"	m	struct:mesh	typeref:typename:string
Next	animation.h	/^	animation *Next;$/;"	m	struct:animation	typeref:typename:animation *
Next	strings.h	/^	string_node *Next;$/;"	m	struct:string_node	typeref:typename:string_node *
Normalize	math.h	/^Normalize(quaternion Q)$/;"	f	typeref:typename:quaternion
Normalize	math.h	/^Normalize(v3 V)$/;"	f	typeref:typename:v3
NormalizeOrIdentity	math.h	/^NormalizeOrIdentity(quaternion Q)$/;"	f	typeref:typename:quaternion
O	math.h	/^	v3 O;$/;"	m	struct:basis	typeref:typename:v3
OPENGL_H	opengl.h	/^#define OPENGL_H$/;"	d
OffsetToAnimationInfo	asset.h	/^	u64 OffsetToAnimationInfo;$/;"	m	struct:asset_animation_header	typeref:typename:u64
OffsetToIndices	asset.h	/^	u64 OffsetToIndices;$/;"	m	struct:asset_mesh_info	typeref:typename:u64
OffsetToInvBindXForms	asset.h	/^	u64 OffsetToInvBindXForms;$/;"	m	struct:asset_mesh_info	typeref:typename:u64
OffsetToJoints	asset.h	/^	u64 OffsetToJoints;$/;"	m	struct:asset_mesh_info	typeref:typename:u64
OffsetToMeshInfo	asset.h	/^	u64 OffsetToMeshInfo;$/;"	m	struct:asset_model_header	typeref:typename:u64
OffsetToNames	asset.h	/^	u64 OffsetToNames;$/;"	m	struct:asset_animation_header	typeref:typename:u64
OffsetToPositions	asset.h	/^	u64 OffsetToPositions;$/;"	m	struct:asset_animation_info	typeref:typename:u64
OffsetToQuaternions	asset.h	/^	u64 OffsetToQuaternions;$/;"	m	struct:asset_animation_info	typeref:typename:u64
OffsetToScales	asset.h	/^	u64 OffsetToScales;$/;"	m	struct:asset_animation_info	typeref:typename:u64
OffsetToTimes	asset.h	/^	u64 OffsetToTimes;$/;"	m	struct:asset_animation_header	typeref:typename:u64
OffsetToVertices	asset.h	/^	u64 OffsetToVertices;$/;"	m	struct:asset_mesh_info	typeref:typename:u64
OldTime	animation.h	/^	f32 OldTime; $/;"	m	struct:animation	typeref:typename:f32
OpenGLAllocateAnimatedModel	opengl.cpp	/^OpenGLAllocateAnimatedModel(model *Model, u32 ShaderProgram)$/;"	f	typeref:typename:internal void
OpenGLAllocateModel	opengl.cpp	/^OpenGLAllocateModel(model *Model, u32 ShaderProgram)$/;"	f	typeref:typename:internal void
OpenGLAllocateQuad	opengl.cpp	/^OpenGLAllocateQuad(quad *Quad, u32 ShaderProgram)$/;"	f	typeref:typename:internal void
OpenGLAllocateTexture	opengl.cpp	/^OpenGLAllocateTexture(texture *Texture)$/;"	f	typeref:typename:internal void
OpenGLAttribList	win32_opengl.cpp	/^int OpenGLAttribList[] =$/;"	v	typeref:typename:int[]
OpenGLDrawAnimatedModel	opengl.cpp	/^OpenGLDrawAnimatedModel(model *Model, u32 ShaderProgram, mat4 Transform)$/;"	f	typeref:typename:internal void
OpenGLDrawModel	opengl.cpp	/^OpenGLDrawModel(model *Model, u32 ShaderProgram, mat4 Transform)$/;"	f	typeref:typename:internal void
OpenGLDrawQuad	opengl.cpp	/^OpenGLDrawQuad(quad *Quad, u32 ShaderProgram, mat4 Transform, u32 TextureHandle)$/;"	f	typeref:typename:internal void
OpenGLProc	win32_opengl.cpp	/^#define OpenGLProc(/;"	d	file:
OpenGLProc	win32_opengl.cpp	/^OpenGLProc(glGenBuffers, GLGENBUFFERS)$/;"	f
Orientation	game.h	/^	quaternion Orientation;$/;"	m	struct:entity	typeref:typename:quaternion
Orientation	math.h	/^	quaternion Orientation;$/;"	m	struct:sqt	typeref:typename:quaternion
Orientations	animation.h	/^	quaternion *Orientations;$/;"	m	struct:key_frame	typeref:typename:quaternion *
OrthographicTransform	game.h	/^	mat4 OrthographicTransform;$/;"	m	struct:game_state	typeref:typename:mat4
P	game.h	/^	v3 P;$/;"	m	struct:camera	typeref:typename:v3
P	game.h	/^	v3 P;$/;"	m	struct:entity	typeref:typename:v3
P	game.h	/^	v3 P;$/;"	m	struct:quad_vertex	typeref:typename:v3
P	math.h	/^	v3 P;$/;"	m	struct:affine_decomposition	typeref:typename:v3
P	mesh.h	/^	v3 P;$/;"	m	struct:vertex	typeref:typename:v3
PFNGLACCUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLfixed value)
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key, G/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint memory,GLuint64 key,GLuint timeout)
PFNGLACTIVEPROGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLALPHAFRAGMENTOP1ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLfixed ref)
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLAPPLYTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDTEXTUREUNITPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMAL3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLBITMAPXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
PFNGLBLENDBARRIERKHRPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDBARRIERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLBLENDEQUATIONEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITNAMEDFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFrame/;"	t	typeref:typename:void (APIENTRYP)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPAGECOMMITMENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLBUFFERPARAMETERIAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERSTORAGEEXTERNALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEEXTERNALEXTPROC) (GLenum target, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)
PFNGLBUFFERSTORAGEMEMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEMEMEXTPROC) (GLenum target, GLsizeiptr size, GLuint me/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,GLuint memory,GLuint64 offset)
PFNGLBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCALLCOMMANDLISTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum targ/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alp/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARDEPTHDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPCONTROLPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum origin,GLenum depth)
PFNGLCLIPPLANEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue)
PFNGLCOLOR3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLOR4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLORFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **poin/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLEPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMMANDLISTSEGMENTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLuint segments)
PFNGLCOMPILECOMMANDLISTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list)
PFNGLCOMPILESHADERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat value)
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCONVOLUTIONFILTER1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLCONVOLUTIONPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLCOPYBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint sr/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERAGEMODULATIONNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum components)
PFNGLCOVERAGEMODULATIONTABLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * v)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLCREATECOMMANDLISTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * lists)
PFNGLCREATEFRAMEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLCREATEMEMORYOBJECTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEMEMORYOBJECTSEXTPROC) (GLsizei n, GLuint *memoryObjects);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * memoryObjects)
PFNGLCREATEPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPIPELINESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLCREATEPROGRAMPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATEQUERIESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,GLuint * ids)
PFNGLCREATERENDERBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLCREATESAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * samplers)
PFNGLCREATESHADEROBJECTARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESTATESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * states)
PFNGLCREATESYNCFROMCLEVENTARBPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCREATETEXTURESPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,GLuint * textures)
PFNGLCREATETRANSFORMFEEDBACKSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLCREATEVERTEXARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLCULLPARAMETERDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMATIONMAP3DSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETECOMMANDLISTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * lists)
PFNGLDELETEFENCESAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEMEMORYOBJECTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEMEMORYOBJECTSEXTPROC) (GLsizei n, const GLuint *memoryObjects/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * memoryObjects)
PFNGLDELETENAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *n/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERYRESOURCETAGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERYRESOURCETAGNVPROC) (GLsizei n, const GLint *tagIds);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLint * tagIds)
PFNGLDELETERENDERBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESEMAPHORESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESEMAPHORESEXTPROC) (GLsizei n, const GLuint *semaphores);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * semaphores)
PFNGLDELETESHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESTATESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * states)
PFNGLDELETESYNCPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed n,GLfixed f)
PFNGLDETACHOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYATTRIBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWCOMMANDSADDRESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *i/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode,const GLuint64 * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode,GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint64 * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWCOMMANDSSTATESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWMESHARRAYSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLDRAWVKIMAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkImage,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLEDGEFLAGFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointe/;"	t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES imag/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image,const GLint * attrib_list)
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOES/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLeglImageOES image,const GLint * attrib_list)
PFNGLELEMENTPOINTERAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYATTRIBPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDFRAGMENTSHADERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVERTEXSHADEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVIDEOCAPTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLEVALCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u)
PFNGLEVALCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u,GLfixed v)
PFNGLEVALCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALMAPSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEVALUATEDEPTHVALUESARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLEXECUTEPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTRACTCOMPONENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLFEEDBACKBUFFERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buf/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLenum type,const GLfixed * buffer)
PFNGLFENCESYNCPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHSTATICDATAIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *poin/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFOGXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLFOGXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTCOVERAGECOLORNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint color)
PFNGLFRAGMENTLIGHTFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEBUFFERPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLenum target, GLuint numsamp/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint numsamples,GLuint pixelindex,const GLfloat * values)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachme/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)
PFNGLFRAMEBUFFERTEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEZOOMSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLGENASYNCMARKERSSGIXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENERATETEXTUREMIPMAPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLGENFENCESAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERYRESOURCETAGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENQUERYRESOURCETAGNVPROC) (GLsizei n, GLint *tagIds);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLint * tagIds)
PFNGLGENRENDERBUFFERSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSEMAPHORESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENSEMAPHORESEXTPROC) (GLsizei n, GLuint *semaphores);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * semaphores)
PFNGLGENSYMBOLSEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfixed * equation)
PFNGLGETCOLORTABLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMMANDHEADERNVPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum tokenID,GLuint size)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *im/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLsizei bufSize,void * pixels)
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels)
PFNGLGETCONVOLUTIONFILTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufsize,GLfloat * v)
PFNGLGETDEBUGMESSAGELOGAMDPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETFENCEIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFIXEDVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) (GLenum target, GLenum pname, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat * values)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETGRAPHICSRESETSTATUSPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETHANDLEARBPROC	glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLISTPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMAPXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLfixed * v)
PFNGLGETMATERIALXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint memoryObject,GLenum pname,GLint * params)
PFNGLGETMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint64 * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERPOINTERVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat * values)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETNAMEDPROGRAMIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOLORTABLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * pixels)
PFNGLGETNCONVOLUTIONFILTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNCONVOLUTIONFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMAPIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *val/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPIXELMAPUSVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNPOLYGONSTIPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNSEPARABLEFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNTEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETNUNIFORMDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint64 * params)
PFNGLGETNUNIFORMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint64 * params)
PFNGLGETNUNIFORMUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETNUNIFORMUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *va/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,void * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELMAPXVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,GLfixed * values)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPROGRAMBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLfloat * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * param)
PFNGLGETQUERYBUFFEROBJECTI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYINDEXEDIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLenum pname,GLuint64 * params)
PFNGLGETSEPARABLEFILTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETSTAGEINDEXNVPROC	glext.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t	typeref:typename:GLushort (APIENTRYP)(GLenum shadertype)
PFNGLGETSTRINGIPROC	glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXLEVELPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTUREIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTURELEVELPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTRACKMATRIXIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint in/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param)
PFNGLGETTRANSFORMFEEDBACKIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLint * param)
PFNGLGETTRANSFORMFEEDBACKI_VPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLuint index,GLint * param)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 * params)
PFNGLGETUNIFORMI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 * params)
PFNGLGETUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNSIGNEDBYTEI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEI_VEXTPROC) (GLenum target, GLuint index, GLubyte *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLubyte * data)
PFNGLGETUNSIGNEDBYTEVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEVEXTPROC) (GLenum pname, GLubyte *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLubyte * data)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINDEXED64IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param)
PFNGLGETVERTEXARRAYINDEXEDIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGETVKPROCADDRNVPROC	glext.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t	typeref:typename:GLVULKANPROCNV (APIENTRYP)(const GLchar * name)
PFNGLGLOBALALPHAFACTORBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const void * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTMEMORYFDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYFDEXTPROC) (GLuint memory, GLuint64 size, GLenum handle/;"	t	typeref:typename:void (APIENTRYP)(GLuint memory,GLuint64 size,GLenum handleType,GLint fd)
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) (GLuint memory, GLuint64 size, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint memory,GLuint64 size,GLenum handleType,void * handle)
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) (GLuint memory, GLuint64 size, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint memory,GLuint64 size,GLenum handleType,const void * name)
PFNGLIMPORTSEMAPHOREFDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREFDEXTPROC) (GLuint semaphore, GLenum handleType, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLenum handleType,GLint fd)
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) (GLuint semaphore, GLenum handle/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLenum handleType,void * handle)
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) (GLuint semaphore, GLenum handleTy/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLenum handleType,const void * name)
PFNGLIMPORTSYNCEXTPROC	glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINDEXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed component)
PFNGLINDEXXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * component)
PFNGLINSERTCOMPONENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSTRUMENTSBUFFERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLINTERPOLATEPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei nu/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISCOMMANDLISTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint list)
PFNGLISENABLEDINDEXEDEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISFENCEAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISMEMORYOBJECTEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISMEMORYOBJECTEXTPROC) (GLuint memoryObject);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint memoryObject)
PFNGLISNAMEAMDPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPIPELINEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSEMAPHOREEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSEMAPHOREEXTPROC) (GLuint semaphore);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint semaphore)
PFNGLISSHADERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSTATENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint state)
PFNGLISSYNCPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLGPUCOPYIMAGESUBDATANVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLGPUCOPYIMAGESUBDATANVXPROC) (GLuint sourceGpu, GLbitfield destinat/;"	t	typeref:typename:void (APIENTRYP)(GLuint sourceGpu,GLbitfield destinationGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srxY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLLGPUINTERLOCKNVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLGPUINTERLOCKNVXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC) (GLbitfield gpuMask, GLuint buffer, /;"	t	typeref:typename:void (APIENTRYP)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLLIGHTENVISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLIGHTMODELXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLLIGHTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLuint segment,const void ** indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLLISTPARAMETERFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOCKARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAP1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
PFNGLMAP2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
PFNGLMAPBUFFERARBPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPGRID1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2)
PFNGLMAPGRID2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
PFNGLMAPNAMEDBUFFEREXTPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPNAMEDBUFFERRANGEPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeip/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield ac/;"	t	typeref:typename:void * (APIENTRYP)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfixed * param)
PFNGLMATRIXFRUSTUMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXINDEXPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMATRIXLOAD3X2FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOAD3X3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULT3X2FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULT3X3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint count)
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC	glext.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint count)
PFNGLMEMORYBARRIERBYREGIONPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLuint memoryObject,GLenum pname,const GLint * params)
PFNGLMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTICASTBARRIERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) (GLuint srcGpu, GLuint dstGpu, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcGpu,GLuint dstGpu,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLMULTICASTBUFFERSUBDATANVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBUFFERSUBDATANVPROC) (GLbitfield gpuMask, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) (GLuint readGpu, GLbitfield write/;"	t	typeref:typename:void (APIENTRYP)(GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) (GLuint srcGpu, GLbitfield dstGpuM/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint gpu, GLuint fr/;"	t	typeref:typename:void (APIENTRYP)(GLuint gpu,GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) (GLuint gpu, GLuint id, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint gpu,GLuint id,GLenum pname,GLint64 * params)
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) (GLuint gpu, GLuint id, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint gpu,GLuint id,GLenum pname,GLint * params)
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) (GLuint gpu, GLuint id, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint gpu,GLuint id,GLenum pname,GLuint64 * params)
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) (GLuint gpu, GLuint id, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint gpu,GLuint id,GLenum pname,GLuint * params)
PFNGLMULTICASTWAITSYNCNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTWAITSYNCNVPROC) (GLuint signalGpu, GLbitfield waitGpuMask)/;"	t	typeref:typename:void (APIENTRYP)(GLuint signalGpu,GLbitfield waitGpuMask)
PFNGLMULTIDRAWARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirec/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s)
PFNGLMULTITEXCOORD1BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s)
PFNGLMULTITEXCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t)
PFNGLMULTITEXCOORD2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t)
PFNGLMULTITEXCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
PFNGLMULTITEXCOORD3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
PFNGLMULTITEXCOORD3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLMULTITEXCOORD4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORD4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORDP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLNAMEDBUFFERDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) (GLuint buffer, GLintptr offset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) (GLuint buffer, GLsizeiptr size, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,GLuint memory,GLuint64 offset)
PFNGLNAMEDBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDBUFFERSUBDATAPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buf)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum src)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLuint framebuffer, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLuint numsamples,GLuint pixelindex,const GLfloat * values)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWOBJECTBUFFERATIPROC	glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenu/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMAL3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMAL3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLNORMALFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLen/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLPASSTEXCOORDATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPASSTHROUGHXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed token)
PFNGLPATCHPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorForm/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum genMode)
PFNGLPATHGLYPHINDEXARRAYNVPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarg/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHINDEXRANGENVPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontNa/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint baseAndCount[2])
PFNGLPATHGLYPHRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fo/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void * fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint compon/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELDATARANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLPIXELMAPXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,const GLfixed * values)
PFNGLPIXELSTOREXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELZOOMXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed xfactor,GLfixed yfactor)
PFNGLPNTRIANGLESFATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETCLAMPEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETCLAMPPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat cla/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresent/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat m/;"	t	typeref:typename:void (APIENTRYP)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)
PFNGLPRIMITIVERESTARTINDEXNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZETEXTURESXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, con/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLfixed * priorities)
PFNGLPROGRAMBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingInde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingInd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERIARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPROGRAMSTRINGARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei count,const GLuint * params)
PFNGLPROGRAMUNIFORM1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x)
PFNGLPROGRAMUNIFORM1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x)
PFNGLPROGRAMUNIFORM1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y)
PFNGLPROGRAMUNIFORM2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y)
PFNGLPROGRAMUNIFORM2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLPROGRAMUNIFORM3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLPROGRAMUNIFORM3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLPROGRAMUNIFORM4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLPROGRAMUNIFORM4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYMATRIXXOESPROC	glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t	typeref:typename:GLbitfield (APIENTRYP)(GLfixed * mantissa,GLint * exponent)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLQUERYRESOURCENVPROC	glext.h	/^typedef GLint (APIENTRYP PFNGLQUERYRESOURCENVPROC) (GLenum queryType, GLint tagId, GLuint bufSiz/;"	t	typeref:typename:GLint (APIENTRYP)(GLenum queryType,GLint tagId,GLuint bufSize,GLint * buffer)
PFNGLQUERYRESOURCETAGNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLQUERYRESOURCETAGNVPROC) (GLint tagId, const GLchar *tagString);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tagId,const GLchar * tagString)
PFNGLRASTERPOS2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLRASTERPOS2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLRASTERPOS3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
PFNGLRASTERPOS4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERSAMPLESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocatio/;"	t	typeref:typename:void (APIENTRYP)(GLuint samples,GLboolean fixedsamplelocations)
PFNGLREADINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREADNPIXELSARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSPROC	glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, /;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLRECTXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
PFNGLRECTXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * v1,const GLfixed * v2)
PFNGLREFERENCEPLANESGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint memory,GLuint64 key)
PFNGLRELEASESHADERCOMPILERPROC	glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERGPUMASKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRENDERGPUMASKNVPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESOLVEDEPTHVALUESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLROTATEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLenum pname,const GLuint64 * params)
PFNGLSEPARABLEFILTER2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSIGNALSEMAPHOREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSIGNALSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers/;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLuint numBufferBarriers,const GLuint * buffers,GLuint numTextureBarriers,const GLuint * textures,const GLenum * dstLayouts)
PFNGLSIGNALVKFENCENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkFence)
PFNGLSIGNALVKSEMAPHORENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkSemaphore)
PFNGLSPECIALIZESHADERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint,/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSPECIALIZESHADERPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSPRITEPARAMETERFSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTATECAPTURENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint state,GLenum mode)
PFNGLSTENCILCLEARTAGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClea/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stencilTagBits,GLuint stencilClearTag)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode)
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask,GLenum coverMode)
PFNGLSTOPINSTRUMENTSSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei len,const void * string)
PFNGLSUBPIXELPRECISIONBIASNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint xbits,GLuint ybits)
PFNGLSWIZZLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLTBUFFERMASK3DFXPROC	glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s)
PFNGLTEXCOORD1BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD1XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s)
PFNGLTEXCOORD1XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t)
PFNGLTEXCOORD2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t)
PFNGLTEXCOORD2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r)
PFNGLTEXCOORD3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r)
PFNGLTEXCOORD3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLTEXCOORD4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLTEXCOORD4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORDFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLTEXSTORAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGEMEM1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM1DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGESPARSEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBARRIERPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURECOLORMASKSGISPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTUREIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXTUREPARAMETERFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLint * param)
PFNGLTEXTURERANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGEMEM1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM1DEXTPROC) (GLuint texture, GLsizei levels, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DEXTPROC) (GLuint texture, GLsizei levels, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei sam/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DEXTPROC) (GLuint texture, GLsizei levels, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei sam/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGESPARSEAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLsizei count, const GLint *attrib/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLuint index,GLuint buffer)
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x)
PFNGLUNIFORM1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x)
PFNGLUNIFORM1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y)
PFNGLUNIFORM2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y)
PFNGLUNIFORM2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLUNIFORM3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLUNIFORM3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLUNIFORM4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLUNIFORM4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPNAMEDBUFFERPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const void * addr)
PFNGLVARIANTSVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVDPAUFININVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress/;"	t	typeref:typename:void (APIENTRYP)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceN/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurfa/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurfac/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access)/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurface/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x, GLbyte y);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y)
PFNGLVERTEX2BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX2XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x)
PFNGLVERTEX2XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX3BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z)
PFNGLVERTEX3BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLVERTEX3XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX4BOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z, GLbyte w);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z,GLbyte w)
PFNGLVERTEX4BVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4XOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLVERTEX4XVOESPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEXARRAYATTRIBBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYATTRIBFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBIFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBLFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYBINDINGDIVISORPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYELEMENTBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXBUFFERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **poi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIDEOCAPTURENVPROC	glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTPOSITIONWSCALENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat xcoeff,GLfloat ycoeff)
PFNGLVIEWPORTSWIZZLENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizz/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew)
PFNGLWAITSEMAPHOREEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLWAITSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers, /;"	t	typeref:typename:void (APIENTRYP)(GLuint semaphore,GLuint numBufferBarriers,const GLuint * buffers,GLuint numTextureBarriers,const GLuint * textures,const GLenum * srcLayouts)
PFNGLWAITSYNCPROC	glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITVKSEMAPHORENVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkSemaphore)
PFNGLWEIGHTBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPATHSNVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWEIGHTPOINTERARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLWEIGHTSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWRECTANGLESEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,const GLint * box)
PFNGLWRITEMASKEXTPROC	glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNWGLALLOCATEMEMORYNVPROC	wglext.h	/^    typedef void *(WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat/;"	t	typeref:typename:void * (WINAPI *)(GLsizei size,GLfloat readfreq,GLfloat writefreq,GLfloat priority)
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEve/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const HANDLE * pEvent,const LPVOID * pAddress,const DWORD * pSize,UINT count)
PFNWGLBEGINFRAMETRACKINGI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	wglext.h	/^    typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLBINDSWAPBARRIERNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);$/;"	t	typeref:typename:BOOL (WINAPI *)(GLuint group,GLuint barrier)
PFNWGLBINDTEXIMAGEARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLBINDVIDEOCAPTUREDEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVI/;"	t	typeref:typename:BOOL (WINAPI *)(UINT uVideoSlot,HVIDEOINPUTDEVICENV hDevice)
PFNWGLBINDVIDEODEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDC, unsigned int uVideoSlot, HVIDE/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,unsigned int uVideoSlot,HVIDEOOUTPUTDEVICENV hVideoDevice,const int * piAttribList)
PFNWGLBINDVIDEOIMAGENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPb/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice,HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC	wglext.h	/^    typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLin/;"	t	typeref:typename:VOID (WINAPI *)(HGLRC dstCtx,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNWGLCHOOSEPIXELFORMATARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, c/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCHOOSEPIXELFORMATEXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, c/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCOPYIMAGESUBDATANVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum s/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hSrcRC,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,HGLRC hDstRC,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNWGLCREATEAFFINITYDCNVPROC	wglext.h	/^    typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);$/;"	t	typeref:typename:HDC (WINAPI *)(const HGPUNV * phGpuList)
PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC	wglext.h	/^    typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);$/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id)
PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	wglext.h	/^    typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareC/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEBUFFERREGIONARBPROC	wglext.h	/^    typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uT/;"	t	typeref:typename:HANDLE (WINAPI *)(HDC hDC,int iLayerPlane,UINT uType)
PFNWGLCREATECONTEXTATTRIBSARBPROC	wglext.h	/^    typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, co/;"	t	typeref:typename:HGLRC (WINAPI *)(HDC hDC,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	wglext.h	/^    typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLCREATEIMAGEBUFFERI3DPROC	wglext.h	/^    typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags/;"	t	typeref:typename:LPVOID (WINAPI *)(HDC hDC,DWORD dwSize,UINT uFlags)
PFNWGLCREATEPBUFFERARBPROC	wglext.h	/^    typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iW/;"	t	typeref:typename:HPBUFFERARB (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLCREATEPBUFFEREXTPROC	wglext.h	/^    typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iW/;"	t	typeref:typename:HPBUFFEREXT (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLDELAYBEFORESWAPNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLfloat seconds)
PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLDELETEBUFFERREGIONARBPROC	wglext.h	/^    typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t	typeref:typename:VOID (WINAPI *)(HANDLE hRegion)
PFNWGLDELETEDCNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc)
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	wglext.h	/^    typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:VOID (WINAPI *)(GLushort id)
PFNWGLDESTROYIMAGEBUFFERI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,LPVOID pAddress)
PFNWGLDESTROYPBUFFERARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLDESTROYPBUFFEREXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLDISABLEFRAMELOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLDISABLEGENLOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLDXCLOSEDEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice)
PFNWGLDXLOCKOBJECTSNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObj/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXOBJECTACCESSNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hObject,GLenum access)
PFNWGLDXOPENDEVICENVPROC	wglext.h	/^    typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void *dxDevice);$/;"	t	typeref:typename:HANDLE (WINAPI *)(void * dxDevice)
PFNWGLDXREGISTEROBJECTNVPROC	wglext.h	/^    typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLui/;"	t	typeref:typename:HANDLE (WINAPI *)(HANDLE hDevice,void * dxObject,GLuint name,GLenum type,GLenum access)
PFNWGLDXSETRESOURCESHAREHANDLENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHa/;"	t	typeref:typename:BOOL (WINAPI *)(void * dxObject,HANDLE shareHandle)
PFNWGLDXUNLOCKOBJECTSNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hO/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXUNREGISTEROBJECTNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,HANDLE hObject)
PFNWGLENABLEFRAMELOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENABLEGENLOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLENDFRAMETRACKINGI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC	wglext.h	/^    typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICE/;"	t	typeref:typename:UINT (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV * phDeviceList)
PFNWGLENUMERATEVIDEODEVICESNVPROC	wglext.h	/^    typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDC, HVIDEOOUTPUTDEVICENV *phD/;"	t	typeref:typename:int (WINAPI *)(HDC hDC,HVIDEOOUTPUTDEVICENV * phDeviceList)
PFNWGLENUMGPUDEVICESNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEV/;"	t	typeref:typename:BOOL (WINAPI *)(HGPUNV hGpu,UINT iDeviceIndex,PGPU_DEVICE lpGpuDevice)
PFNWGLENUMGPUSFROMAFFINITYDCNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex,/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hAffinityDC,UINT iGpuIndex,HGPUNV * hGpu)
PFNWGLENUMGPUSNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);$/;"	t	typeref:typename:BOOL (WINAPI *)(UINT iGpuIndex,HGPUNV * phGpu)
PFNWGLFREEMEMORYNVPROC	wglext.h	/^    typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t	typeref:typename:void (WINAPI *)(void * pointer)
PFNWGLGENLOCKSAMPLERATEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uRate)
PFNWGLGENLOCKSOURCEDELAYI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uDelay)
PFNWGLGENLOCKSOURCEEDGEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uEdge)
PFNWGLGENLOCKSOURCEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uSource)
PFNWGLGETCONTEXTGPUIDAMDPROC	wglext.h	/^    typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:UINT (WINAPI *)(HGLRC hglrc)
PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC	wglext.h	/^    typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t	typeref:typename:HGLRC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCARBPROC	wglext.h	/^    typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCEXTPROC	wglext.h	/^    typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETEXTENSIONSSTRINGARBPROC	wglext.h	/^    typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t	typeref:typename:const char * (WINAPI *)(HDC hdc)
PFNWGLGETEXTENSIONSSTRINGEXTPROC	wglext.h	/^    typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t	typeref:typename:const char * (WINAPI *)(void)
PFNWGLGETFRAMEUSAGEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t	typeref:typename:BOOL (WINAPI *)(float * pUsage)
PFNWGLGETGAMMATABLEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, US/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,USHORT * puRed,USHORT * puGreen,USHORT * puBlue)
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int */;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uRate)
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uDelay)
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uEdge)
PFNWGLGETGENLOCKSOURCEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uSource)
PFNWGLGETGPUIDSAMDPROC	wglext.h	/^    typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT *ids);$/;"	t	typeref:typename:UINT (WINAPI *)(UINT maxCount,UINT * ids)
PFNWGLGETGPUINFOAMDPROC	wglext.h	/^    typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, int property, GLenum dataType, UINT/;"	t	typeref:typename:INT (WINAPI *)(UINT id,int property,GLenum dataType,UINT size,void * data)
PFNWGLGETMSCRATEOMLPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominat/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT32 * numerator,INT32 * denominator)
PFNWGLGETPBUFFERDCARBPROC	wglext.h	/^    typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLGETPBUFFERDCEXTPROC	wglext.h	/^    typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,int * piValues)
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,int * piValues)
PFNWGLGETSWAPINTERVALEXTPROC	wglext.h	/^    typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t	typeref:typename:int (WINAPI *)(void)
PFNWGLGETSYNCVALUESOMLPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 */;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLGETVIDEODEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV *hVi/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int numDevices,HPVIDEODEV * hVideoDevice)
PFNWGLGETVIDEOINFONVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long *p/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hpVideoDevice,unsigned long * pulCounterOutputPbuffer,unsigned long * pulCounterOutputVideo)
PFNWGLISENABLEDFRAMELOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLISENABLEDGENLOCKI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,BOOL * pFlag)
PFNWGLJOINSWAPGROUPNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint group)
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	wglext.h	/^    typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLui/;"	t	typeref:typename:GLboolean (WINAPI *)(const GLushort * table,GLuint length)
PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDe/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hgl/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTEXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hgl/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLQUERYCURRENTCONTEXTNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int *piValue);$/;"	t	typeref:typename:BOOL (WINAPI *)(int iAttribute,int * piValue)
PFNWGLQUERYFRAMECOUNTNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint *count);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * count)
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLQUERYFRAMETRACKINGI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedF/;"	t	typeref:typename:BOOL (WINAPI *)(DWORD * pFrameCount,DWORD * pMissedFrames,float * pLastMissedUsage)
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDela/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uMaxLineDelay,UINT * uMaxPixelDelay)
PFNWGLQUERYMAXSWAPGROUPSNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint *maxGroups, GLuint */;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * maxGroups,GLuint * maxBarriers)
PFNWGLQUERYPBUFFERARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYPBUFFEREXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYSWAPGROUPNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint *group, GLuint *barrier)/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * group,GLuint * barrier)
PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hD/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice,int iAttribute,int * piValue)
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddre/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const LPVOID * pAddress,UINT count)
PFNWGLRELEASEPBUFFERDCARBPROC	wglext.h	/^    typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFERARB hPbuffer,HDC hDC)
PFNWGLRELEASEPBUFFERDCEXTPROC	wglext.h	/^    typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFEREXT hPbuffer,HDC hDC)
PFNWGLRELEASETEXIMAGEARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLRELEASEVIDEODEVICENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice)
PFNWGLRELEASEVIDEOIMAGENVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffe/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLRESETFRAMECOUNTNVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLRESTOREBUFFERREGIONARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int /;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height,int xSrc,int ySrc)
PFNWGLSAVEBUFFERREGIONARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int wid/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height)
PFNWGLSENDPBUFFERTOVIDEONVPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferTyp/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBufferType,unsigned long * pulCounterPbuffer,BOOL bBlock)
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, con/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETGAMMATABLEI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puR/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,const USHORT * puRed,const USHORT * puGreen,const USHORT * puBlue)
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETPBUFFERATTRIBARBPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAt/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,const int * piAttribList)
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uState)
PFNWGLSWAPBUFFERSMSCOMLPROC	wglext.h	/^    typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divis/;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLSWAPINTERVALEXTPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t	typeref:typename:BOOL (WINAPI *)(int interval)
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	wglext.h	/^    typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 targ/;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,int fuPlanes,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLWAITFORMSCOMLPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, I/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLWAITFORSBCOMLPROC	wglext.h	/^    typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT6/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_sbc,INT64 * ust,INT64 * msc,INT64 * sbc)
PGPU_DEVICE	wglext.h	/^    typedef struct _GPU_DEVICE *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE *
PLATFORM_H	platform.h	/^#define PLATFORM_H$/;"	d
ParentIndex	asset.h	/^	s32 ParentIndex;$/;"	m	struct:asset_joint_info	typeref:typename:s32
ParentIndex	mesh.h	/^	s32 ParentIndex;$/;"	m	struct:joint	typeref:typename:s32
ParseF32Array	strings.cpp	/^ParseF32Array(f32 *Dest, u32 DestCount, string Str)$/;"	f	typeref:typename:internal void
ParseF32Array	strings.cpp	/^ParseF32Array(memory_arena *Arena, f32 *Dest, u32 DestCount, string Str)$/;"	f	typeref:typename:internal void
ParseStringArray	strings.cpp	/^ParseStringArray(memory_arena *Arena, string *Dest, u32 DestCount, string Str)$/;"	f	typeref:typename:internal void
ParseU32Array	strings.cpp	/^ParseU32Array(u32 *Dest, u32 DestCount, string Str)$/;"	f	typeref:typename:internal void
PermanentStorage	platform.h	/^	void *PermanentStorage;$/;"	m	struct:game_memory	typeref:typename:void *
PermanentStorageSize	platform.h	/^	u64 PermanentStorageSize;$/;"	m	struct:game_memory	typeref:typename:u64
PerspectiveTransform	game.h	/^	mat4 PerspectiveTransform;$/;"	m	struct:game_state	typeref:typename:mat4
PerspectiveTransformUpdate	game.cpp	/^PerspectiveTransformUpdate(game_state *GameState)$/;"	f	typeref:typename:internal void
Pi32	platform.h	/^#define Pi32 /;"	d
PlayerAdd	game.cpp	/^PlayerAdd(game_state *GameState)$/;"	f	typeref:typename:internal void
PlayerEntityIndex	game.h	/^	u32 PlayerEntityIndex;$/;"	m	struct:game_state	typeref:typename:u32
PlayingCount	animation.h	/^	u32 PlayingCount;$/;"	m	struct:animation_player	typeref:typename:u32
Position	math.h	/^	v3 Position;$/;"	m	struct:sqt	typeref:typename:v3
Positions	animation.h	/^	v3 *Positions;$/;"	m	struct:key_frame	typeref:typename:v3 *
PrintString	game.cpp	/^PrintString(char *String)$/;"	f	typeref:typename:internal void
PushArray	platform.h	/^#define PushArray(/;"	d
PushSize_	game.h	/^PushSize_(memory_arena *Arena, memory_index Size)$/;"	f	typeref:typename:internal void *
PushStruct	platform.h	/^#define PushStruct(/;"	d
Quad	game.h	/^	quad Quad;$/;"	m	struct:game_state	typeref:typename:quad
QuadDefault	game.cpp	/^QuadDefault(void)$/;"	f	typeref:typename:internal quad
Quaternion	math.h	/^Quaternion()$/;"	f	typeref:typename:quaternion
Quaternion	math.h	/^Quaternion(v3 Axis, f32 Angle)$/;"	f	typeref:typename:quaternion
Quaternion	math.h	/^Quaternion(v3 V)$/;"	f	typeref:typename:quaternion
QuaternionToMat4	math.h	/^QuaternionToMat4(quaternion Q)$/;"	f	typeref:typename:mat4
R	math.h	/^	mat4 R;$/;"	m	struct:affine_decomposition	typeref:typename:mat4
Rand01	intrinsics.h	/^Rand01(void)$/;"	f	typeref:typename:f32
RandBetween	intrinsics.h	/^RandBetween(f32 A, f32 B)$/;"	f	typeref:typename:f32
RandInit	intrinsics.h	/^RandInit(u32 Seed)$/;"	f	typeref:typename:void
RemoveLocomotion	animation.cpp	/^RemoveLocomotion(animation *Animation)$/;"	f	typeref:typename:b32
Renderer	opengl.h	/^	char *Renderer;$/;"	m	struct:opengl_info	typeref:typename:char *
RetiredCount	animation.h	/^	u32 RetiredCount;$/;"	m	struct:animation_player	typeref:typename:u32
Rotate	math.h	/^Rotate(v3 V, quaternion Q)$/;"	f	typeref:typename:v3
Rotate	math.h	/^Rotate(v4 V, quaternion Q)$/;"	f	typeref:typename:v4
RotateTowards	math.h	/^RotateTowards(quaternion Current, quaternion Target, f32 dt, f32 AngularSpeed)$/;"	f	typeref:typename:quaternion
RotationToQuaternion	math.h	/^RotationToQuaternion(mat4 Mat)$/;"	f	typeref:typename:quaternion
S	platform.h	/^			game_button S;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
S32FromASCII	strings.cpp	/^S32FromASCII(u8 *S)$/;"	f	typeref:typename:s32
SLLQueuePush	platform.h	/^#define SLLQueuePush(/;"	d
SLLQueuePush_N	platform.h	/^#define SLLQueuePush_N(/;"	d
SQT	math.h	/^SQT(v3 Scale, quaternion Orientation, v3 Position)$/;"	f	typeref:typename:sqt
STBIDEF	stb_image.h	/^#define STBIDEF /;"	d
STBI_ASSERT	stb_image.h	/^#define STBI_ASSERT(/;"	d
STBI_EXTERN	stb_image.h	/^#define STBI_EXTERN /;"	d
STBI_FREE	stb_image.h	/^#define STBI_FREE(/;"	d
STBI_HAS_LROTL	stb_image.h	/^#define STBI_HAS_LROTL$/;"	d
STBI_INCLUDE_STB_IMAGE_H	stb_image.h	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d
STBI_MALLOC	stb_image.h	/^#define STBI_MALLOC(/;"	d
STBI_MAX_DIMENSIONS	stb_image.h	/^#define STBI_MAX_DIMENSIONS /;"	d
STBI_NOTUSED	stb_image.h	/^#define STBI_NOTUSED(/;"	d
STBI_NO_BMP	stb_image.h	/^   #define STBI_NO_BMP$/;"	d
STBI_NO_GIF	stb_image.h	/^   #define STBI_NO_GIF$/;"	d
STBI_NO_HDR	stb_image.h	/^   #define STBI_NO_HDR$/;"	d
STBI_NO_JPEG	stb_image.h	/^   #define STBI_NO_JPEG$/;"	d
STBI_NO_PIC	stb_image.h	/^   #define STBI_NO_PIC$/;"	d
STBI_NO_PNG	stb_image.h	/^   #define STBI_NO_PNG$/;"	d
STBI_NO_PNM	stb_image.h	/^   #define STBI_NO_PNM$/;"	d
STBI_NO_PSD	stb_image.h	/^   #define STBI_NO_PSD$/;"	d
STBI_NO_SIMD	stb_image.h	/^#define STBI_NO_SIMD$/;"	d
STBI_NO_TGA	stb_image.h	/^   #define STBI_NO_TGA$/;"	d
STBI_NO_ZLIB	stb_image.h	/^#define STBI_NO_ZLIB$/;"	d
STBI_ORDER_BGR	stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anon84e4e8860403
STBI_ORDER_RGB	stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anon84e4e8860403
STBI_REALLOC	stb_image.h	/^#define STBI_REALLOC(/;"	d
STBI_REALLOC_SIZED	stb_image.h	/^#define STBI_REALLOC_SIZED(/;"	d
STBI_SIMD_ALIGN	stb_image.h	/^#define STBI_SIMD_ALIGN(/;"	d
STBI_SSE2	stb_image.h	/^#define STBI_SSE2$/;"	d
STBI_THREAD_LOCAL	stb_image.h	/^        #define STBI_THREAD_LOCAL /;"	d
STBI_THREAD_LOCAL	stb_image.h	/^      #define STBI_THREAD_LOCAL /;"	d
STBI_VERSION	stb_image.h	/^#define STBI_VERSION /;"	d
STBI__BYTECAST	stb_image.h	/^#define STBI__BYTECAST(/;"	d
STBI__CASE	stb_image.h	/^      #define STBI__CASE(/;"	d
STBI__COMBO	stb_image.h	/^      #define STBI__COMBO(/;"	d
STBI__F_avg	stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon84e4e8860f03
STBI__F_avg_first	stb_image.h	/^   STBI__F_avg_first$/;"	e	enum:__anon84e4e8860f03
STBI__F_none	stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon84e4e8860f03
STBI__F_paeth	stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon84e4e8860f03
STBI__F_sub	stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon84e4e8860f03
STBI__F_up	stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon84e4e8860f03
STBI__HDR_BUFLEN	stb_image.h	/^#define STBI__HDR_BUFLEN /;"	d
STBI__IDCT_1D	stb_image.h	/^#define STBI__IDCT_1D(/;"	d
STBI__MARKER_none	stb_image.h	/^#define STBI__MARKER_none /;"	d
STBI__PNG_TYPE	stb_image.h	/^#define STBI__PNG_TYPE(/;"	d
STBI__RESTART	stb_image.h	/^#define STBI__RESTART(/;"	d
STBI__SCAN_header	stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon84e4e8860603
STBI__SCAN_load	stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon84e4e8860603
STBI__SCAN_type	stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon84e4e8860603
STBI__X64_TARGET	stb_image.h	/^#define STBI__X64_TARGET$/;"	d
STBI__X86_TARGET	stb_image.h	/^#define STBI__X86_TARGET$/;"	d
STBI__ZFAST_BITS	stb_image.h	/^#define STBI__ZFAST_BITS /;"	d
STBI__ZFAST_MASK	stb_image.h	/^#define STBI__ZFAST_MASK /;"	d
STBI__ZNSYMS	stb_image.h	/^#define STBI__ZNSYMS /;"	d
STBI_default	stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anon84e4e8860103
STBI_grey	stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon84e4e8860103
STBI_grey_alpha	stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon84e4e8860103
STBI_rgb	stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon84e4e8860103
STBI_rgb_alpha	stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon84e4e8860103
STBTT_DEF	stb_truetype.h	/^#define STBTT_DEF /;"	d
STBTT_FIX	stb_truetype.h	/^#define STBTT_FIX /;"	d
STBTT_FIXMASK	stb_truetype.h	/^#define STBTT_FIXMASK /;"	d
STBTT_FIXSHIFT	stb_truetype.h	/^#define STBTT_FIXSHIFT /;"	d
STBTT_GPOS_TODO_assert	stb_truetype.h	/^#define STBTT_GPOS_TODO_assert(/;"	d
STBTT_MACSTYLE_BOLD	stb_truetype.h	/^#define STBTT_MACSTYLE_BOLD /;"	d
STBTT_MACSTYLE_DONTCARE	stb_truetype.h	/^#define STBTT_MACSTYLE_DONTCARE /;"	d
STBTT_MACSTYLE_ITALIC	stb_truetype.h	/^#define STBTT_MACSTYLE_ITALIC /;"	d
STBTT_MACSTYLE_NONE	stb_truetype.h	/^#define STBTT_MACSTYLE_NONE /;"	d
STBTT_MACSTYLE_UNDERSCORE	stb_truetype.h	/^#define STBTT_MACSTYLE_UNDERSCORE /;"	d
STBTT_MAC_EID_ARABIC	stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_CHINESE_TRAD	stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_GREEK	stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_HEBREW	stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_JAPANESE	stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_KOREAN	stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_ROMAN	stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_EID_RUSSIAN	stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon0048a2850c03
STBTT_MAC_LANG_ARABIC	stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_CHINESE_TRAD	stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_DUTCH	stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_ENGLISH	stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_FRENCH	stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_GERMAN	stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_HEBREW	stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_ITALIAN	stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_JAPANESE	stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_KOREAN	stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_RUSSIAN	stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_SPANISH	stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon0048a2850e03
STBTT_MAC_LANG_SWEDISH	stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon0048a2850e03
STBTT_MAX_OVERSAMPLE	stb_truetype.h	/^#define STBTT_MAX_OVERSAMPLE /;"	d
STBTT_MS_EID_SHIFTJIS	stb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon0048a2850b03
STBTT_MS_EID_SYMBOL	stb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon0048a2850b03
STBTT_MS_EID_UNICODE_BMP	stb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon0048a2850b03
STBTT_MS_EID_UNICODE_FULL	stb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon0048a2850b03
STBTT_MS_LANG_CHINESE	stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_DUTCH	stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_ENGLISH	stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_FRENCH	stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_GERMAN	stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_HEBREW	stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_ITALIAN	stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_JAPANESE	stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_KOREAN	stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_RUSSIAN	stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_SPANISH	stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon0048a2850d03
STBTT_MS_LANG_SWEDISH	stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon0048a2850d03
STBTT_PLATFORM_ID_ISO	stb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon0048a2850903
STBTT_PLATFORM_ID_MAC	stb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon0048a2850903
STBTT_PLATFORM_ID_MICROSOFT	stb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon0048a2850903
STBTT_PLATFORM_ID_UNICODE	stb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon0048a2850903
STBTT_POINT_SIZE	stb_truetype.h	/^#define STBTT_POINT_SIZE(/;"	d
STBTT_RASTERIZER_VERSION	stb_truetype.h	/^#define STBTT_RASTERIZER_VERSION /;"	d
STBTT_UNICODE_EID_ISO_10646	stb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon0048a2850a03
STBTT_UNICODE_EID_UNICODE_1_0	stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon0048a2850a03
STBTT_UNICODE_EID_UNICODE_1_1	stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon0048a2850a03
STBTT_UNICODE_EID_UNICODE_2_0_BMP	stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon0048a2850a03
STBTT_UNICODE_EID_UNICODE_2_0_FULL	stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon0048a2850a03
STBTT__COMPARE	stb_truetype.h	/^#define STBTT__COMPARE(/;"	d
STBTT__CSCTX_INIT	stb_truetype.h	/^#define STBTT__CSCTX_INIT(/;"	d
STBTT__CSERR	stb_truetype.h	/^#define STBTT__CSERR(/;"	d
STBTT__NOTUSED	stb_truetype.h	/^#define STBTT__NOTUSED(/;"	d
STBTT__OVER_MASK	stb_truetype.h	/^#define STBTT__OVER_MASK /;"	d
STBTT_acos	stb_truetype.h	/^   #define STBTT_acos(/;"	d
STBTT_assert	stb_truetype.h	/^   #define STBTT_assert(/;"	d
STBTT_cos	stb_truetype.h	/^   #define STBTT_cos(/;"	d
STBTT_fabs	stb_truetype.h	/^   #define STBTT_fabs(/;"	d
STBTT_fmod	stb_truetype.h	/^   #define STBTT_fmod(/;"	d
STBTT_free	stb_truetype.h	/^   #define STBTT_free(/;"	d
STBTT_iceil	stb_truetype.h	/^   #define STBTT_iceil(/;"	d
STBTT_ifloor	stb_truetype.h	/^   #define STBTT_ifloor(/;"	d
STBTT_malloc	stb_truetype.h	/^   #define STBTT_malloc(/;"	d
STBTT_max	stb_truetype.h	/^#define STBTT_max(/;"	d
STBTT_memcpy	stb_truetype.h	/^   #define STBTT_memcpy /;"	d
STBTT_memset	stb_truetype.h	/^   #define STBTT_memset /;"	d
STBTT_min	stb_truetype.h	/^#define STBTT_min(/;"	d
STBTT_pow	stb_truetype.h	/^   #define STBTT_pow(/;"	d
STBTT_sqrt	stb_truetype.h	/^   #define STBTT_sqrt(/;"	d
STBTT_strlen	stb_truetype.h	/^   #define STBTT_strlen(/;"	d
STBTT_vcubic	stb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anon0048a2850603
STBTT_vcurve	stb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anon0048a2850603
STBTT_vline	stb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anon0048a2850603
STBTT_vmove	stb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anon0048a2850603
STB_IMAGE_IMPLEMENTATION	texture.cpp	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	font.h	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d
STRINGS_H	strings.h	/^#define STRINGS_H$/;"	d
Scale	math.h	/^	v3 Scale;$/;"	m	struct:sqt	typeref:typename:v3
Scales	animation.h	/^	v3 *Scales;$/;"	m	struct:key_frame	typeref:typename:v3 *
Shaders	game.h	/^	u32 Shaders[3];$/;"	m	struct:game_state	typeref:typename:u32[3]
ShadingLanguageVersion	opengl.h	/^	char *ShadingLanguageVersion;$/;"	m	struct:opengl_info	typeref:typename:char *
Shift	platform.h	/^			game_button Shift;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
Shininess	mesh.h	/^	f32 Shininess;$/;"	m	struct:material_spec	typeref:typename:f32
Sin	intrinsics.h	/^Sin(f32 X)$/;"	f	typeref:typename:f32
Size	game.h	/^	memory_index Size;$/;"	m	struct:memory_arena	typeref:typename:memory_index
Size	platform.h	/^	u64 Size;$/;"	m	struct:debug_file	typeref:typename:u64
Size	strings.h	/^	u64 Size;$/;"	m	struct:string	typeref:typename:u64
Size	strings.h	/^	u64 Size;$/;"	m	struct:string_list	typeref:typename:u64
SmallNumber	platform.h	/^#define SmallNumber /;"	d
Space	platform.h	/^			game_button Space;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
Specular	mesh.h	/^	v4 Specular;$/;"	m	struct:material_spec	typeref:typename:v4
Sphere	game.h	/^	model *Sphere;$/;"	m	struct:game_state	typeref:typename:model *
Sqrt	intrinsics.h	/^Sqrt(f32 X)$/;"	f	typeref:typename:f32
Square	math.h	/^Square(f32 C)$/;"	f	typeref:typename:f32
SrcFormat	texture.h	/^	GLenum SrcFormat;$/;"	m	struct:texture	typeref:typename:GLenum
State	animation.h	/^	animation_state State;$/;"	m	struct:animation_player	typeref:typename:animation_state
StoredFormat	texture.h	/^	GLint StoredFormat;$/;"	m	struct:texture	typeref:typename:GLint
String	strings.cpp	/^String(u8 *Cstr)$/;"	f	typeref:typename:internal string
String	strings.h	/^	string String;$/;"	m	struct:string_node	typeref:typename:string
StringAllocAndCopy	strings.cpp	/^StringAllocAndCopy(memory_arena *Arena, char *Cstr)$/;"	f	typeref:typename:internal string
StringAllocAndCopy	strings.cpp	/^StringAllocAndCopy(memory_arena *Arena, string Str)$/;"	f	typeref:typename:internal string
StringAllocAndCopy	strings.cpp	/^StringAllocAndCopy(memory_arena *Arena, u8 *Str)$/;"	f	typeref:typename:internal string
StringEndsWith	strings.cpp	/^StringEndsWith(string S, char C)$/;"	f	typeref:typename:internal b32
StringFromRange	strings.cpp	/^StringFromRange(u8 *First, u8 *Last)$/;"	f	typeref:typename:internal string
StringLen	strings.cpp	/^StringLen(char *S)$/;"	f	typeref:typename:internal u32
StringListPush	strings.cpp	/^StringListPush(memory_arena *Arena, string_list *List, string String)$/;"	f	typeref:typename:internal void
StringListPushExplicit	strings.cpp	/^StringListPushExplicit(string_list *List, string String, string_node *Node)$/;"	f	typeref:typename:internal void
StringSearchFor	strings.cpp	/^StringSearchFor(string S, char C)$/;"	f	typeref:typename:internal string
StringSplit	strings.cpp	/^StringSplit(memory_arena *Arena, string String, u8 *Splits, u32 Count)$/;"	f	typeref:typename:internal string_list
StringSplitIntoArray	strings.cpp	/^StringSplitIntoArray(memory_arena *Arena, string Str, u8 *Delimeters, u32 DelimCount)$/;"	f	typeref:typename:internal string_array
Strings	strings.h	/^	string *Strings;$/;"	m	struct:string_array	typeref:typename:string *
StringsAreSame	strings.cpp	/^StringsAreSame(char *S1, u8 *S2)$/;"	f	typeref:typename:internal b32
StringsAreSame	strings.cpp	/^StringsAreSame(char *Str1, char *Str2)$/;"	f	typeref:typename:internal b32
StringsAreSame	strings.cpp	/^StringsAreSame(string S1, char *Str2)$/;"	f	typeref:typename:internal b32
StringsAreSame	strings.cpp	/^StringsAreSame(string S1, string S2)$/;"	f	typeref:typename:internal b32
StringsAreSame	strings.cpp	/^StringsAreSame(u8 *S1, char *S2)$/;"	f	typeref:typename:internal b32
SubStringExists	strings.cpp	/^SubStringExists(char *HayStack, char *Needle)$/;"	f	typeref:typename:internal b32
SubStringExists	strings.cpp	/^SubStringExists(string HayStack, char *Needle)$/;"	f	typeref:typename:internal b32
TEXTURE_H	texture.h	/^#define TEXTURE_H$/;"	d
TempArena	game.h	/^	memory_arena TempArena;$/;"	m	struct:game_state	typeref:typename:memory_arena
TempCount	game.h	/^	s32 TempCount;$/;"	m	struct:memory_arena	typeref:typename:s32
TemporaryMemoryBegin	game.h	/^TemporaryMemoryBegin(memory_arena *Arena)$/;"	f	typeref:typename:temporary_memory
TemporaryMemoryEnd	game.h	/^TemporaryMemoryEnd(temporary_memory TempMemory)$/;"	f	typeref:typename:void
TemporaryStorage	platform.h	/^	void *TemporaryStorage;$/;"	m	struct:game_memory	typeref:typename:void *
TemporaryStorageSize	platform.h	/^	u64 TemporaryStorageSize;$/;"	m	struct:game_memory	typeref:typename:u64
Texture	game.h	/^	u32 Texture;$/;"	m	struct:quad	typeref:typename:u32
TextureHandle	mesh.h	/^	u32 TextureHandle;$/;"	m	struct:mesh	typeref:typename:u32
TextureLoad	texture.cpp	/^TextureLoad(char *FileName)$/;"	f	typeref:typename:internal texture
Textures	game.h	/^	texture Textures[32];$/;"	m	struct:game_state	typeref:typename:texture[32]
TimeCount	asset.h	/^	u32 TimeCount;$/;"	m	struct:asset_animation_header	typeref:typename:u32
TimeInCurrentState	animation.h	/^	f32 TimeInCurrentState;$/;"	m	struct:animation_player	typeref:typename:f32
TimeScale	animation.h	/^	f32 TimeScale; $/;"	m	struct:animation	typeref:typename:f32
Trace	math.h	/^Trace(mat3 M)$/;"	f	typeref:typename:f32
Transform	asset.h	/^	mat4 Transform;$/;"	m	struct:asset_joint_info	typeref:typename:mat4
Transform	mesh.h	/^	mat4 Transform;$/;"	m	struct:joint	typeref:typename:mat4
Type	game.h	/^	entity_type Type;$/;"	m	struct:entity	typeref:typename:entity_type
U32ArraySum	game.h	/^U32ArraySum(u32 *A, u32 Count)$/;"	f	typeref:typename:internal u32
U32FromASCII	strings.cpp	/^U32FromASCII(string S)$/;"	f	typeref:typename:u32
U32FromASCII	strings.cpp	/^U32FromASCII(u8 *S)$/;"	f	typeref:typename:u32
U64TruncateToU32	platform.h	/^U64TruncateToU32(u64 U64)$/;"	f	typeref:typename:u32
UV	game.h	/^	v2 UV;$/;"	m	struct:quad_vertex	typeref:typename:v2
UV	mesh.h	/^	v2 UV;$/;"	m	struct:vertex	typeref:typename:v2
UniformBoolSet	opengl.cpp	/^UniformBoolSet(u32 ShaderProgram, char *UniformName, b32 B32)$/;"	f	typeref:typename:internal void
UniformF32Set	opengl.cpp	/^UniformF32Set(u32 ShaderProgram, char *UniformName, f32 F32)$/;"	f	typeref:typename:internal void
UniformMatrixArraySet	opengl.cpp	/^UniformMatrixArraySet(u32 ShaderProgram, char *UniformName, mat4 *M, u32 Count)$/;"	f	typeref:typename:internal void
UniformMatrixSet	opengl.cpp	/^UniformMatrixSet(u32 ShaderProgram, char *UniformName, mat4 M)$/;"	f	typeref:typename:internal void
UniformU32Set	opengl.cpp	/^UniformU32Set(u32 ShaderProgram, char *UniformName, u32 U32)$/;"	f	typeref:typename:internal void
UniformV3Set	opengl.cpp	/^UniformV3Set(u32 ShaderProgram, char *UniformName, v3 V)$/;"	f	typeref:typename:internal void
UniformV4Set	opengl.cpp	/^UniformV4Set(u32 ShaderProgram, char *UniformName, v4 V)$/;"	f	typeref:typename:internal void
Used	game.h	/^	memory_index Used;$/;"	m	struct:memory_arena	typeref:typename:memory_index
Used	game.h	/^	memory_index Used;$/;"	m	struct:temporary_memory	typeref:typename:memory_index
V2	math.h	/^V2(f32 X)$/;"	f	typeref:typename:v2
V2	math.h	/^V2(f32 X, f32 Y)$/;"	f	typeref:typename:v2
V3	math.h	/^V3(f32 C)$/;"	f	typeref:typename:v3
V3	math.h	/^V3(f32 X, f32 Y, f32 Z)$/;"	f	typeref:typename:v3
V4	math.h	/^V4(f32 C)$/;"	f	typeref:typename:v4
V4	math.h	/^V4(f32 X, f32 Y, f32 Z)$/;"	f	typeref:typename:v4
V4	math.h	/^V4(f32 X, f32 Y, f32 Z, f32 W)$/;"	f	typeref:typename:v4
V4	math.h	/^V4(v3 V, f32 C)$/;"	f	typeref:typename:v4
VA	game.h	/^	u32 VA;$/;"	m	struct:quad	typeref:typename:u32
VA	mesh.h	/^	u32 VA[2];$/;"	m	struct:model	typeref:typename:u32[2]
VB	game.h	/^	u32 VB;$/;"	m	struct:quad	typeref:typename:u32
VB	mesh.h	/^	u32 VB[2];$/;"	m	struct:model	typeref:typename:u32[2]
Value	animation.h	/^	u32 Value;$/;"	m	struct:animation_id	typeref:typename:u32
Vendor	opengl.h	/^	char *Vendor;$/;"	m	struct:opengl_info	typeref:typename:char *
Version	asset.h	/^	u32 Version;$/;"	m	struct:asset_animation_header	typeref:typename:u32
Version	asset.h	/^	u32 Version;$/;"	m	struct:asset_model_header	typeref:typename:u32
Version	opengl.h	/^	char *Version;$/;"	m	struct:opengl_info	typeref:typename:char *
VertexCount	asset.h	/^	u32 VertexCount;$/;"	m	struct:asset_mesh_info	typeref:typename:u32
VertexCount	mesh.h	/^	u32 VertexCount;$/;"	m	struct:mesh	typeref:typename:u32
Vertices	game.h	/^	quad_vertex Vertices[6];$/;"	m	struct:quad	typeref:typename:quad_vertex[6]
Vertices	mesh.h	/^	vertex *Vertices;$/;"	m	struct:mesh	typeref:typename:vertex *
W	platform.h	/^			game_button W;$/;"	m	struct:game_keyboard::__anon7b296420020a::__anon7b2964200308	typeref:typename:game_button
WGL_3DFX_multisample	wglext.h	/^#define WGL_3DFX_multisample /;"	d
WGL_3DL_stereo_control	wglext.h	/^#define WGL_3DL_stereo_control /;"	d
WGL_ACCELERATION_ARB	wglext.h	/^#define WGL_ACCELERATION_ARB /;"	d
WGL_ACCELERATION_EXT	wglext.h	/^#define WGL_ACCELERATION_EXT /;"	d
WGL_ACCESS_READ_ONLY_NV	wglext.h	/^#define WGL_ACCESS_READ_ONLY_NV /;"	d
WGL_ACCESS_READ_WRITE_NV	wglext.h	/^#define WGL_ACCESS_READ_WRITE_NV /;"	d
WGL_ACCESS_WRITE_DISCARD_NV	wglext.h	/^#define WGL_ACCESS_WRITE_DISCARD_NV /;"	d
WGL_ACCUM_ALPHA_BITS_ARB	wglext.h	/^#define WGL_ACCUM_ALPHA_BITS_ARB /;"	d
WGL_ACCUM_ALPHA_BITS_EXT	wglext.h	/^#define WGL_ACCUM_ALPHA_BITS_EXT /;"	d
WGL_ACCUM_BITS_ARB	wglext.h	/^#define WGL_ACCUM_BITS_ARB /;"	d
WGL_ACCUM_BITS_EXT	wglext.h	/^#define WGL_ACCUM_BITS_EXT /;"	d
WGL_ACCUM_BLUE_BITS_ARB	wglext.h	/^#define WGL_ACCUM_BLUE_BITS_ARB /;"	d
WGL_ACCUM_BLUE_BITS_EXT	wglext.h	/^#define WGL_ACCUM_BLUE_BITS_EXT /;"	d
WGL_ACCUM_GREEN_BITS_ARB	wglext.h	/^#define WGL_ACCUM_GREEN_BITS_ARB /;"	d
WGL_ACCUM_GREEN_BITS_EXT	wglext.h	/^#define WGL_ACCUM_GREEN_BITS_EXT /;"	d
WGL_ACCUM_RED_BITS_ARB	wglext.h	/^#define WGL_ACCUM_RED_BITS_ARB /;"	d
WGL_ACCUM_RED_BITS_EXT	wglext.h	/^#define WGL_ACCUM_RED_BITS_EXT /;"	d
WGL_ALPHA_BITS_ARB	wglext.h	/^#define WGL_ALPHA_BITS_ARB /;"	d
WGL_ALPHA_BITS_EXT	wglext.h	/^#define WGL_ALPHA_BITS_EXT /;"	d
WGL_ALPHA_SHIFT_ARB	wglext.h	/^#define WGL_ALPHA_SHIFT_ARB /;"	d
WGL_ALPHA_SHIFT_EXT	wglext.h	/^#define WGL_ALPHA_SHIFT_EXT /;"	d
WGL_AMD_gpu_association	wglext.h	/^#define WGL_AMD_gpu_association /;"	d
WGL_ARB_buffer_region	wglext.h	/^#define WGL_ARB_buffer_region /;"	d
WGL_ARB_context_flush_control	wglext.h	/^#define WGL_ARB_context_flush_control /;"	d
WGL_ARB_create_context	wglext.h	/^#define WGL_ARB_create_context /;"	d
WGL_ARB_create_context_no_error	wglext.h	/^#define WGL_ARB_create_context_no_error /;"	d
WGL_ARB_create_context_profile	wglext.h	/^#define WGL_ARB_create_context_profile /;"	d
WGL_ARB_create_context_robustness	wglext.h	/^#define WGL_ARB_create_context_robustness /;"	d
WGL_ARB_extensions_string	wglext.h	/^#define WGL_ARB_extensions_string /;"	d
WGL_ARB_framebuffer_sRGB	wglext.h	/^#define WGL_ARB_framebuffer_sRGB /;"	d
WGL_ARB_make_current_read	wglext.h	/^#define WGL_ARB_make_current_read /;"	d
WGL_ARB_multisample	wglext.h	/^#define WGL_ARB_multisample /;"	d
WGL_ARB_pbuffer	wglext.h	/^#define WGL_ARB_pbuffer /;"	d
WGL_ARB_pixel_format	wglext.h	/^#define WGL_ARB_pixel_format /;"	d
WGL_ARB_pixel_format_float	wglext.h	/^#define WGL_ARB_pixel_format_float /;"	d
WGL_ARB_render_texture	wglext.h	/^#define WGL_ARB_render_texture /;"	d
WGL_ARB_robustness_application_isolation	wglext.h	/^#define WGL_ARB_robustness_application_isolation /;"	d
WGL_ARB_robustness_share_group_isolation	wglext.h	/^#define WGL_ARB_robustness_share_group_isolation /;"	d
WGL_ATI_pixel_format_float	wglext.h	/^#define WGL_ATI_pixel_format_float /;"	d
WGL_AUX0_ARB	wglext.h	/^#define WGL_AUX0_ARB /;"	d
WGL_AUX1_ARB	wglext.h	/^#define WGL_AUX1_ARB /;"	d
WGL_AUX2_ARB	wglext.h	/^#define WGL_AUX2_ARB /;"	d
WGL_AUX3_ARB	wglext.h	/^#define WGL_AUX3_ARB /;"	d
WGL_AUX4_ARB	wglext.h	/^#define WGL_AUX4_ARB /;"	d
WGL_AUX5_ARB	wglext.h	/^#define WGL_AUX5_ARB /;"	d
WGL_AUX6_ARB	wglext.h	/^#define WGL_AUX6_ARB /;"	d
WGL_AUX7_ARB	wglext.h	/^#define WGL_AUX7_ARB /;"	d
WGL_AUX8_ARB	wglext.h	/^#define WGL_AUX8_ARB /;"	d
WGL_AUX9_ARB	wglext.h	/^#define WGL_AUX9_ARB /;"	d
WGL_AUX_BUFFERS_ARB	wglext.h	/^#define WGL_AUX_BUFFERS_ARB /;"	d
WGL_AUX_BUFFERS_EXT	wglext.h	/^#define WGL_AUX_BUFFERS_EXT /;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	wglext.h	/^#define WGL_BACK_COLOR_BUFFER_BIT_ARB /;"	d
WGL_BACK_LEFT_ARB	wglext.h	/^#define WGL_BACK_LEFT_ARB /;"	d
WGL_BACK_RIGHT_ARB	wglext.h	/^#define WGL_BACK_RIGHT_ARB /;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RGBA_ARB /;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	wglext.h	/^#define WGL_BIND_TO_TEXTURE_RGB_ARB /;"	d
WGL_BIND_TO_VIDEO_RGBA_NV	wglext.h	/^#define WGL_BIND_TO_VIDEO_RGBA_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV	wglext.h	/^#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_NV	wglext.h	/^#define WGL_BIND_TO_VIDEO_RGB_NV /;"	d
WGL_BLUE_BITS_ARB	wglext.h	/^#define WGL_BLUE_BITS_ARB /;"	d
WGL_BLUE_BITS_EXT	wglext.h	/^#define WGL_BLUE_BITS_EXT /;"	d
WGL_BLUE_SHIFT_ARB	wglext.h	/^#define WGL_BLUE_SHIFT_ARB /;"	d
WGL_BLUE_SHIFT_EXT	wglext.h	/^#define WGL_BLUE_SHIFT_EXT /;"	d
WGL_COLORSPACE_EXT	wglext.h	/^#define WGL_COLORSPACE_EXT /;"	d
WGL_COLORSPACE_LINEAR_EXT	wglext.h	/^#define WGL_COLORSPACE_LINEAR_EXT /;"	d
WGL_COLORSPACE_SRGB_EXT	wglext.h	/^#define WGL_COLORSPACE_SRGB_EXT /;"	d
WGL_COLOR_BITS_ARB	wglext.h	/^#define WGL_COLOR_BITS_ARB /;"	d
WGL_COLOR_BITS_EXT	wglext.h	/^#define WGL_COLOR_BITS_EXT /;"	d
WGL_COLOR_SAMPLES_NV	wglext.h	/^#define WGL_COLOR_SAMPLES_NV /;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	wglext.h	/^#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_ES_PROFILE_BIT_EXT	wglext.h	/^#define WGL_CONTEXT_ES_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_FLAGS_ARB	wglext.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	wglext.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	wglext.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	wglext.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	wglext.h	/^#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	wglext.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
WGL_CONTEXT_RESET_ISOLATION_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB /;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	wglext.h	/^#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	wglext.h	/^#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
WGL_COVERAGE_SAMPLES_NV	wglext.h	/^#define WGL_COVERAGE_SAMPLES_NV /;"	d
WGL_CUBE_MAP_FACE_ARB	wglext.h	/^#define WGL_CUBE_MAP_FACE_ARB /;"	d
WGL_DEPTH_BITS_ARB	wglext.h	/^#define WGL_DEPTH_BITS_ARB /;"	d
WGL_DEPTH_BITS_EXT	wglext.h	/^#define WGL_DEPTH_BITS_EXT /;"	d
WGL_DEPTH_BUFFER_BIT_ARB	wglext.h	/^#define WGL_DEPTH_BUFFER_BIT_ARB /;"	d
WGL_DEPTH_COMPONENT_NV	wglext.h	/^#define WGL_DEPTH_COMPONENT_NV /;"	d
WGL_DEPTH_FLOAT_EXT	wglext.h	/^#define WGL_DEPTH_FLOAT_EXT /;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	wglext.h	/^#define WGL_DEPTH_TEXTURE_FORMAT_NV /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D /;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	wglext.h	/^#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D /;"	d
WGL_DOUBLE_BUFFER_ARB	wglext.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d
WGL_DOUBLE_BUFFER_EXT	wglext.h	/^#define WGL_DOUBLE_BUFFER_EXT /;"	d
WGL_DRAW_TO_BITMAP_ARB	wglext.h	/^#define WGL_DRAW_TO_BITMAP_ARB /;"	d
WGL_DRAW_TO_BITMAP_EXT	wglext.h	/^#define WGL_DRAW_TO_BITMAP_EXT /;"	d
WGL_DRAW_TO_PBUFFER_ARB	wglext.h	/^#define WGL_DRAW_TO_PBUFFER_ARB /;"	d
WGL_DRAW_TO_PBUFFER_EXT	wglext.h	/^#define WGL_DRAW_TO_PBUFFER_EXT /;"	d
WGL_DRAW_TO_WINDOW_ARB	wglext.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d
WGL_DRAW_TO_WINDOW_EXT	wglext.h	/^#define WGL_DRAW_TO_WINDOW_EXT /;"	d
WGL_EXT_colorspace	wglext.h	/^#define WGL_EXT_colorspace /;"	d
WGL_EXT_create_context_es2_profile	wglext.h	/^#define WGL_EXT_create_context_es2_profile /;"	d
WGL_EXT_create_context_es_profile	wglext.h	/^#define WGL_EXT_create_context_es_profile /;"	d
WGL_EXT_depth_float	wglext.h	/^#define WGL_EXT_depth_float /;"	d
WGL_EXT_display_color_table	wglext.h	/^#define WGL_EXT_display_color_table /;"	d
WGL_EXT_extensions_string	wglext.h	/^#define WGL_EXT_extensions_string /;"	d
WGL_EXT_framebuffer_sRGB	wglext.h	/^#define WGL_EXT_framebuffer_sRGB /;"	d
WGL_EXT_make_current_read	wglext.h	/^#define WGL_EXT_make_current_read /;"	d
WGL_EXT_multisample	wglext.h	/^#define WGL_EXT_multisample /;"	d
WGL_EXT_pbuffer	wglext.h	/^#define WGL_EXT_pbuffer /;"	d
WGL_EXT_pixel_format	wglext.h	/^#define WGL_EXT_pixel_format /;"	d
WGL_EXT_pixel_format_packed_float	wglext.h	/^#define WGL_EXT_pixel_format_packed_float /;"	d
WGL_EXT_swap_control	wglext.h	/^#define WGL_EXT_swap_control /;"	d
WGL_EXT_swap_control_tear	wglext.h	/^#define WGL_EXT_swap_control_tear /;"	d
WGL_FLOAT_COMPONENTS_NV	wglext.h	/^#define WGL_FLOAT_COMPONENTS_NV /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	wglext.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT	wglext.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	wglext.h	/^#define WGL_FRONT_COLOR_BUFFER_BIT_ARB /;"	d
WGL_FRONT_LEFT_ARB	wglext.h	/^#define WGL_FRONT_LEFT_ARB /;"	d
WGL_FRONT_RIGHT_ARB	wglext.h	/^#define WGL_FRONT_RIGHT_ARB /;"	d
WGL_FULL_ACCELERATION_ARB	wglext.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d
WGL_FULL_ACCELERATION_EXT	wglext.h	/^#define WGL_FULL_ACCELERATION_EXT /;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	wglext.h	/^#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D /;"	d
WGL_GAMMA_TABLE_SIZE_I3D	wglext.h	/^#define WGL_GAMMA_TABLE_SIZE_I3D /;"	d
WGL_GENERIC_ACCELERATION_ARB	wglext.h	/^#define WGL_GENERIC_ACCELERATION_ARB /;"	d
WGL_GENERIC_ACCELERATION_EXT	wglext.h	/^#define WGL_GENERIC_ACCELERATION_EXT /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D /;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	wglext.h	/^#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D /;"	d
WGL_GPU_CLOCK_AMD	wglext.h	/^#define WGL_GPU_CLOCK_AMD /;"	d
WGL_GPU_FASTEST_TARGET_GPUS_AMD	wglext.h	/^#define WGL_GPU_FASTEST_TARGET_GPUS_AMD /;"	d
WGL_GPU_NUM_PIPES_AMD	wglext.h	/^#define WGL_GPU_NUM_PIPES_AMD /;"	d
WGL_GPU_NUM_RB_AMD	wglext.h	/^#define WGL_GPU_NUM_RB_AMD /;"	d
WGL_GPU_NUM_SIMD_AMD	wglext.h	/^#define WGL_GPU_NUM_SIMD_AMD /;"	d
WGL_GPU_NUM_SPI_AMD	wglext.h	/^#define WGL_GPU_NUM_SPI_AMD /;"	d
WGL_GPU_OPENGL_VERSION_STRING_AMD	wglext.h	/^#define WGL_GPU_OPENGL_VERSION_STRING_AMD /;"	d
WGL_GPU_RAM_AMD	wglext.h	/^#define WGL_GPU_RAM_AMD /;"	d
WGL_GPU_RENDERER_STRING_AMD	wglext.h	/^#define WGL_GPU_RENDERER_STRING_AMD /;"	d
WGL_GPU_VENDOR_AMD	wglext.h	/^#define WGL_GPU_VENDOR_AMD /;"	d
WGL_GREEN_BITS_ARB	wglext.h	/^#define WGL_GREEN_BITS_ARB /;"	d
WGL_GREEN_BITS_EXT	wglext.h	/^#define WGL_GREEN_BITS_EXT /;"	d
WGL_GREEN_SHIFT_ARB	wglext.h	/^#define WGL_GREEN_SHIFT_ARB /;"	d
WGL_GREEN_SHIFT_EXT	wglext.h	/^#define WGL_GREEN_SHIFT_EXT /;"	d
WGL_I3D_digital_video_control	wglext.h	/^#define WGL_I3D_digital_video_control /;"	d
WGL_I3D_gamma	wglext.h	/^#define WGL_I3D_gamma /;"	d
WGL_I3D_genlock	wglext.h	/^#define WGL_I3D_genlock /;"	d
WGL_I3D_image_buffer	wglext.h	/^#define WGL_I3D_image_buffer /;"	d
WGL_I3D_swap_frame_lock	wglext.h	/^#define WGL_I3D_swap_frame_lock /;"	d
WGL_I3D_swap_frame_usage	wglext.h	/^#define WGL_I3D_swap_frame_usage /;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	wglext.h	/^#define WGL_IMAGE_BUFFER_LOCK_I3D /;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	wglext.h	/^#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D /;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	wglext.h	/^#define WGL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	wglext.h	/^#define WGL_MAX_PBUFFER_HEIGHT_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	wglext.h	/^#define WGL_MAX_PBUFFER_HEIGHT_EXT /;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	wglext.h	/^#define WGL_MAX_PBUFFER_PIXELS_ARB /;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	wglext.h	/^#define WGL_MAX_PBUFFER_PIXELS_EXT /;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	wglext.h	/^#define WGL_MAX_PBUFFER_WIDTH_ARB /;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	wglext.h	/^#define WGL_MAX_PBUFFER_WIDTH_EXT /;"	d
WGL_MIPMAP_LEVEL_ARB	wglext.h	/^#define WGL_MIPMAP_LEVEL_ARB /;"	d
WGL_MIPMAP_TEXTURE_ARB	wglext.h	/^#define WGL_MIPMAP_TEXTURE_ARB /;"	d
WGL_NEED_PALETTE_ARB	wglext.h	/^#define WGL_NEED_PALETTE_ARB /;"	d
WGL_NEED_PALETTE_EXT	wglext.h	/^#define WGL_NEED_PALETTE_EXT /;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	wglext.h	/^#define WGL_NEED_SYSTEM_PALETTE_ARB /;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	wglext.h	/^#define WGL_NEED_SYSTEM_PALETTE_EXT /;"	d
WGL_NO_ACCELERATION_ARB	wglext.h	/^#define WGL_NO_ACCELERATION_ARB /;"	d
WGL_NO_ACCELERATION_EXT	wglext.h	/^#define WGL_NO_ACCELERATION_EXT /;"	d
WGL_NO_RESET_NOTIFICATION_ARB	wglext.h	/^#define WGL_NO_RESET_NOTIFICATION_ARB /;"	d
WGL_NO_TEXTURE_ARB	wglext.h	/^#define WGL_NO_TEXTURE_ARB /;"	d
WGL_NUMBER_OVERLAYS_ARB	wglext.h	/^#define WGL_NUMBER_OVERLAYS_ARB /;"	d
WGL_NUMBER_OVERLAYS_EXT	wglext.h	/^#define WGL_NUMBER_OVERLAYS_EXT /;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	wglext.h	/^#define WGL_NUMBER_PIXEL_FORMATS_ARB /;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	wglext.h	/^#define WGL_NUMBER_PIXEL_FORMATS_EXT /;"	d
WGL_NUMBER_UNDERLAYS_ARB	wglext.h	/^#define WGL_NUMBER_UNDERLAYS_ARB /;"	d
WGL_NUMBER_UNDERLAYS_EXT	wglext.h	/^#define WGL_NUMBER_UNDERLAYS_EXT /;"	d
WGL_NUM_VIDEO_CAPTURE_SLOTS_NV	wglext.h	/^#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV /;"	d
WGL_NUM_VIDEO_SLOTS_NV	wglext.h	/^#define WGL_NUM_VIDEO_SLOTS_NV /;"	d
WGL_NV_DX_interop	wglext.h	/^#define WGL_NV_DX_interop /;"	d
WGL_NV_DX_interop2	wglext.h	/^#define WGL_NV_DX_interop2 /;"	d
WGL_NV_copy_image	wglext.h	/^#define WGL_NV_copy_image /;"	d
WGL_NV_delay_before_swap	wglext.h	/^#define WGL_NV_delay_before_swap /;"	d
WGL_NV_float_buffer	wglext.h	/^#define WGL_NV_float_buffer /;"	d
WGL_NV_gpu_affinity	wglext.h	/^#define WGL_NV_gpu_affinity /;"	d
WGL_NV_multisample_coverage	wglext.h	/^#define WGL_NV_multisample_coverage /;"	d
WGL_NV_present_video	wglext.h	/^#define WGL_NV_present_video /;"	d
WGL_NV_render_depth_texture	wglext.h	/^#define WGL_NV_render_depth_texture /;"	d
WGL_NV_render_texture_rectangle	wglext.h	/^#define WGL_NV_render_texture_rectangle /;"	d
WGL_NV_swap_group	wglext.h	/^#define WGL_NV_swap_group /;"	d
WGL_NV_vertex_array_range	wglext.h	/^#define WGL_NV_vertex_array_range /;"	d
WGL_NV_video_capture	wglext.h	/^#define WGL_NV_video_capture /;"	d
WGL_NV_video_output	wglext.h	/^#define WGL_NV_video_output /;"	d
WGL_OML_sync_control	wglext.h	/^#define WGL_OML_sync_control /;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	wglext.h	/^#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT /;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	wglext.h	/^#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT /;"	d
WGL_PBUFFER_HEIGHT_ARB	wglext.h	/^#define WGL_PBUFFER_HEIGHT_ARB /;"	d
WGL_PBUFFER_HEIGHT_EXT	wglext.h	/^#define WGL_PBUFFER_HEIGHT_EXT /;"	d
WGL_PBUFFER_LARGEST_ARB	wglext.h	/^#define WGL_PBUFFER_LARGEST_ARB /;"	d
WGL_PBUFFER_LARGEST_EXT	wglext.h	/^#define WGL_PBUFFER_LARGEST_EXT /;"	d
WGL_PBUFFER_LOST_ARB	wglext.h	/^#define WGL_PBUFFER_LOST_ARB /;"	d
WGL_PBUFFER_WIDTH_ARB	wglext.h	/^#define WGL_PBUFFER_WIDTH_ARB /;"	d
WGL_PBUFFER_WIDTH_EXT	wglext.h	/^#define WGL_PBUFFER_WIDTH_EXT /;"	d
WGL_PIXEL_TYPE_ARB	wglext.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d
WGL_PIXEL_TYPE_EXT	wglext.h	/^#define WGL_PIXEL_TYPE_EXT /;"	d
WGL_RED_BITS_ARB	wglext.h	/^#define WGL_RED_BITS_ARB /;"	d
WGL_RED_BITS_EXT	wglext.h	/^#define WGL_RED_BITS_EXT /;"	d
WGL_RED_SHIFT_ARB	wglext.h	/^#define WGL_RED_SHIFT_ARB /;"	d
WGL_RED_SHIFT_EXT	wglext.h	/^#define WGL_RED_SHIFT_EXT /;"	d
WGL_SAMPLES_3DFX	wglext.h	/^#define WGL_SAMPLES_3DFX /;"	d
WGL_SAMPLES_ARB	wglext.h	/^#define WGL_SAMPLES_ARB /;"	d
WGL_SAMPLES_EXT	wglext.h	/^#define WGL_SAMPLES_EXT /;"	d
WGL_SAMPLE_BUFFERS_3DFX	wglext.h	/^#define WGL_SAMPLE_BUFFERS_3DFX /;"	d
WGL_SAMPLE_BUFFERS_ARB	wglext.h	/^#define WGL_SAMPLE_BUFFERS_ARB /;"	d
WGL_SAMPLE_BUFFERS_EXT	wglext.h	/^#define WGL_SAMPLE_BUFFERS_EXT /;"	d
WGL_SHARE_ACCUM_ARB	wglext.h	/^#define WGL_SHARE_ACCUM_ARB /;"	d
WGL_SHARE_ACCUM_EXT	wglext.h	/^#define WGL_SHARE_ACCUM_EXT /;"	d
WGL_SHARE_DEPTH_ARB	wglext.h	/^#define WGL_SHARE_DEPTH_ARB /;"	d
WGL_SHARE_DEPTH_EXT	wglext.h	/^#define WGL_SHARE_DEPTH_EXT /;"	d
WGL_SHARE_STENCIL_ARB	wglext.h	/^#define WGL_SHARE_STENCIL_ARB /;"	d
WGL_SHARE_STENCIL_EXT	wglext.h	/^#define WGL_SHARE_STENCIL_EXT /;"	d
WGL_STENCIL_BITS_ARB	wglext.h	/^#define WGL_STENCIL_BITS_ARB /;"	d
WGL_STENCIL_BITS_EXT	wglext.h	/^#define WGL_STENCIL_BITS_EXT /;"	d
WGL_STENCIL_BUFFER_BIT_ARB	wglext.h	/^#define WGL_STENCIL_BUFFER_BIT_ARB /;"	d
WGL_STEREO_ARB	wglext.h	/^#define WGL_STEREO_ARB /;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	wglext.h	/^#define WGL_STEREO_EMITTER_DISABLE_3DL /;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	wglext.h	/^#define WGL_STEREO_EMITTER_ENABLE_3DL /;"	d
WGL_STEREO_EXT	wglext.h	/^#define WGL_STEREO_EXT /;"	d
WGL_STEREO_POLARITY_INVERT_3DL	wglext.h	/^#define WGL_STEREO_POLARITY_INVERT_3DL /;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	wglext.h	/^#define WGL_STEREO_POLARITY_NORMAL_3DL /;"	d
WGL_SUPPORT_GDI_ARB	wglext.h	/^#define WGL_SUPPORT_GDI_ARB /;"	d
WGL_SUPPORT_GDI_EXT	wglext.h	/^#define WGL_SUPPORT_GDI_EXT /;"	d
WGL_SUPPORT_OPENGL_ARB	wglext.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d
WGL_SUPPORT_OPENGL_EXT	wglext.h	/^#define WGL_SUPPORT_OPENGL_EXT /;"	d
WGL_SWAP_COPY_ARB	wglext.h	/^#define WGL_SWAP_COPY_ARB /;"	d
WGL_SWAP_COPY_EXT	wglext.h	/^#define WGL_SWAP_COPY_EXT /;"	d
WGL_SWAP_EXCHANGE_ARB	wglext.h	/^#define WGL_SWAP_EXCHANGE_ARB /;"	d
WGL_SWAP_EXCHANGE_EXT	wglext.h	/^#define WGL_SWAP_EXCHANGE_EXT /;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	wglext.h	/^#define WGL_SWAP_LAYER_BUFFERS_ARB /;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	wglext.h	/^#define WGL_SWAP_LAYER_BUFFERS_EXT /;"	d
WGL_SWAP_METHOD_ARB	wglext.h	/^#define WGL_SWAP_METHOD_ARB /;"	d
WGL_SWAP_METHOD_EXT	wglext.h	/^#define WGL_SWAP_METHOD_EXT /;"	d
WGL_SWAP_UNDEFINED_ARB	wglext.h	/^#define WGL_SWAP_UNDEFINED_ARB /;"	d
WGL_SWAP_UNDEFINED_EXT	wglext.h	/^#define WGL_SWAP_UNDEFINED_EXT /;"	d
WGL_TEXTURE_1D_ARB	wglext.h	/^#define WGL_TEXTURE_1D_ARB /;"	d
WGL_TEXTURE_2D_ARB	wglext.h	/^#define WGL_TEXTURE_2D_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	wglext.h	/^#define WGL_TEXTURE_DEPTH_COMPONENT_NV /;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	wglext.h	/^#define WGL_TEXTURE_FLOAT_RGBA_NV /;"	d
WGL_TEXTURE_FLOAT_RGB_NV	wglext.h	/^#define WGL_TEXTURE_FLOAT_RGB_NV /;"	d
WGL_TEXTURE_FLOAT_RG_NV	wglext.h	/^#define WGL_TEXTURE_FLOAT_RG_NV /;"	d
WGL_TEXTURE_FLOAT_R_NV	wglext.h	/^#define WGL_TEXTURE_FLOAT_R_NV /;"	d
WGL_TEXTURE_FORMAT_ARB	wglext.h	/^#define WGL_TEXTURE_FORMAT_ARB /;"	d
WGL_TEXTURE_RECTANGLE_NV	wglext.h	/^#define WGL_TEXTURE_RECTANGLE_NV /;"	d
WGL_TEXTURE_RGBA_ARB	wglext.h	/^#define WGL_TEXTURE_RGBA_ARB /;"	d
WGL_TEXTURE_RGB_ARB	wglext.h	/^#define WGL_TEXTURE_RGB_ARB /;"	d
WGL_TEXTURE_TARGET_ARB	wglext.h	/^#define WGL_TEXTURE_TARGET_ARB /;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	wglext.h	/^#define WGL_TRANSPARENT_ALPHA_VALUE_ARB /;"	d
WGL_TRANSPARENT_ARB	wglext.h	/^#define WGL_TRANSPARENT_ARB /;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	wglext.h	/^#define WGL_TRANSPARENT_BLUE_VALUE_ARB /;"	d
WGL_TRANSPARENT_EXT	wglext.h	/^#define WGL_TRANSPARENT_EXT /;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	wglext.h	/^#define WGL_TRANSPARENT_GREEN_VALUE_ARB /;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	wglext.h	/^#define WGL_TRANSPARENT_INDEX_VALUE_ARB /;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	wglext.h	/^#define WGL_TRANSPARENT_RED_VALUE_ARB /;"	d
WGL_TRANSPARENT_VALUE_EXT	wglext.h	/^#define WGL_TRANSPARENT_VALUE_EXT /;"	d
WGL_TYPE_COLORINDEX_ARB	wglext.h	/^#define WGL_TYPE_COLORINDEX_ARB /;"	d
WGL_TYPE_COLORINDEX_EXT	wglext.h	/^#define WGL_TYPE_COLORINDEX_EXT /;"	d
WGL_TYPE_RGBA_ARB	wglext.h	/^#define WGL_TYPE_RGBA_ARB /;"	d
WGL_TYPE_RGBA_EXT	wglext.h	/^#define WGL_TYPE_RGBA_EXT /;"	d
WGL_TYPE_RGBA_FLOAT_ARB	wglext.h	/^#define WGL_TYPE_RGBA_FLOAT_ARB /;"	d
WGL_TYPE_RGBA_FLOAT_ATI	wglext.h	/^#define WGL_TYPE_RGBA_FLOAT_ATI /;"	d
WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT	wglext.h	/^#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT /;"	d
WGL_UNIQUE_ID_NV	wglext.h	/^#define WGL_UNIQUE_ID_NV /;"	d
WGL_VIDEO_OUT_ALPHA_NV	wglext.h	/^#define WGL_VIDEO_OUT_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV	wglext.h	/^#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV	wglext.h	/^#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV /;"	d
WGL_VIDEO_OUT_COLOR_NV	wglext.h	/^#define WGL_VIDEO_OUT_COLOR_NV /;"	d
WGL_VIDEO_OUT_DEPTH_NV	wglext.h	/^#define WGL_VIDEO_OUT_DEPTH_NV /;"	d
WGL_VIDEO_OUT_FIELD_1	wglext.h	/^#define WGL_VIDEO_OUT_FIELD_1 /;"	d
WGL_VIDEO_OUT_FIELD_2	wglext.h	/^#define WGL_VIDEO_OUT_FIELD_2 /;"	d
WGL_VIDEO_OUT_FRAME	wglext.h	/^#define WGL_VIDEO_OUT_FRAME /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_1_2	wglext.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2 /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_2_1	wglext.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1 /;"	d
WGL_WGLEXT_VERSION	wglext.h	/^#define WGL_WGLEXT_VERSION /;"	d
WIN32_LEAN_AND_MEAN	glext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	wglext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_MAIN_H	win32_main.h	/^#define WIN32_MAIN_H$/;"	d
Weights	mesh.h	/^	f32 Weights[3];$/;"	m	struct:joint_info	typeref:typename:f32[3]
Width	texture.h	/^	s32 Width, Height;$/;"	m	struct:texture	typeref:typename:s32
Win32FileFree	win32_file_io.cpp	/^Win32FileFree(void *Memory)$/;"	f	typeref:typename:internal void
Win32FileReadEntire	win32_file_io.cpp	/^Win32FileReadEntire(char *FileName)$/;"	f	typeref:typename:internal debug_file
Win32GlobalRunning	win32_main.cpp	/^global_varible b32 Win32GlobalRunning;$/;"	v	typeref:typename:global_varible b32
Win32GlobalTicksPerSecond	win32_main.cpp	/^global_varible s64 Win32GlobalTicksPerSecond;$/;"	v	typeref:typename:global_varible s64
Win32GlobalWindowHeight	win32_main.cpp	/^global_varible int Win32GlobalWindowHeight;$/;"	v	typeref:typename:global_varible int
Win32GlobalWindowWidth	win32_main.cpp	/^global_varible int Win32GlobalWindowWidth;$/;"	v	typeref:typename:global_varible int
Win32LoadOpenGLProcedure	win32_opengl.cpp	/^Win32LoadOpenGLProcedure(char *Name)$/;"	f	typeref:typename:internal void *
Win32LoadWGLProcedures	win32_opengl.cpp	/^Win32LoadWGLProcedures(HINSTANCE Instance)$/;"	f	typeref:typename:internal void
Win32OpenGLInit	win32_opengl.cpp	/^Win32OpenGLInit(HDC WindowDC)$/;"	f	typeref:typename:internal HGLRC
Win32PixelFormatSet	win32_opengl.cpp	/^Win32PixelFormatSet(HDC WindowDC)$/;"	f	typeref:typename:internal void
Win32WGLExtensionsLoad	win32_opengl.cpp	/^Win32WGLExtensionsLoad(void)$/;"	f	typeref:typename:internal void
Win32WindowCallBack	win32_main.cpp	/^Win32WindowCallBack(HWND Window, UINT Message, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT CALLBACK
WinMain	win32_main.cpp	/^WinMain(HINSTANCE Instance, HINSTANCE PrevInstance, LPSTR CmdLine, int CmdShow)$/;"	f	typeref:typename:int WINAPI
X	math.h	/^	v3 X;$/;"	m	struct:basis	typeref:typename:v3
XAxis	math.h	/^XAxis()$/;"	f	typeref:typename:v3
XBot	game.h	/^	model *XBot;$/;"	m	struct:game_state	typeref:typename:model *
XFormBind	asset.h	/^	mat4 XFormBind;$/;"	m	struct:asset_mesh_info	typeref:typename:mat4
Y	math.h	/^	v3 Y;$/;"	m	struct:basis	typeref:typename:v3
YAxis	math.h	/^YAxis()$/;"	f	typeref:typename:v3
YCbCr_to_RGB_kernel	stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc/;"	m	struct:__anon84e4e8860808	typeref:typename:void (*)(stbi_uc * out,const stbi_uc * y,const stbi_uc * pcb,const stbi_uc * pcr,int count,int step)
Z	math.h	/^	v3 Z;$/;"	m	struct:basis	typeref:typename:v3
ZAxis	math.h	/^ZAxis()$/;"	f	typeref:typename:v3
ZFar	game.h	/^	f32 ZFar;$/;"	m	struct:game_state	typeref:typename:f32
ZNear	game.h	/^	f32 ZNear;$/;"	m	struct:game_state	typeref:typename:f32
_GPU_DEVICE	wglext.h	/^    struct _GPU_DEVICE {$/;"	s
__STB_INCLUDE_STB_TRUETYPE_H__	stb_truetype.h	/^#define __STB_INCLUDE_STB_TRUETYPE_H__$/;"	d
__VSCMD_ARG_NO_LOGO	build.bat	/^REM   set __VSCMD_ARG_NO_LOGO=1$/;"	v
__anon0048a2850108	stb_truetype.h	/^{$/;"	s
__anon0048a2850208	stb_truetype.h	/^{$/;"	s
__anon0048a2850308	stb_truetype.h	/^{$/;"	s
__anon0048a2850408	stb_truetype.h	/^{$/;"	s
__anon0048a2850508	stb_truetype.h	/^{$/;"	s
__anon0048a2850603	stb_truetype.h	/^   enum {$/;"	g
__anon0048a2850708	stb_truetype.h	/^   {$/;"	s
__anon0048a2850808	stb_truetype.h	/^{$/;"	s
__anon0048a2850903	stb_truetype.h	/^enum { \/\/ platformID$/;"	g
__anon0048a2850a03	stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_UNICODE$/;"	g
__anon0048a2850b03	stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MICROSOFT$/;"	g
__anon0048a2850c03	stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes$/;"	g
__anon0048a2850d03	stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...$/;"	g
__anon0048a2850e03	stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MAC$/;"	g
__anon0048a2850f08	stb_truetype.h	/^{$/;"	s
__anon0048a2851008	stb_truetype.h	/^{$/;"	s
__anon0048a2851108	stb_truetype.h	/^{$/;"	s
__anon0048a2851208	stb_truetype.h	/^{$/;"	s
__anon0d3df6e50108	math.h	/^	{$/;"	s	union:v2
__anon0d3df6e50208	math.h	/^	{$/;"	s	union:v3
__anon0d3df6e50308	math.h	/^	{$/;"	s	union:v3
__anon0d3df6e50408	math.h	/^	{$/;"	s	union:v4
__anon0d3df6e50508	math.h	/^	{$/;"	s	union:v4
__anon0d3df6e5060a	math.h	/^		{$/;"	u	struct:v4::__anon0d3df6e50508
__anon0d3df6e50708	math.h	/^			{$/;"	s	union:v4::__anon0d3df6e50508::__anon0d3df6e5060a
__anon0d3df6e50808	math.h	/^	{$/;"	s	union:quaternion
__anon7b2964200103	platform.h	/^{$/;"	g
__anon7b296420020a	platform.h	/^	{$/;"	u	struct:game_keyboard
__anon7b2964200308	platform.h	/^		{$/;"	s	union:game_keyboard::__anon7b296420020a
__anon84e4e8860103	stb_image.h	/^{$/;"	g
__anon84e4e8860208	stb_image.h	/^{$/;"	s
__anon84e4e8860308	stb_image.h	/^{$/;"	s
__anon84e4e8860403	stb_image.h	/^{$/;"	g
__anon84e4e8860508	stb_image.h	/^{$/;"	s
__anon84e4e8860603	stb_image.h	/^{$/;"	g
__anon84e4e8860708	stb_image.h	/^{$/;"	s
__anon84e4e8860808	stb_image.h	/^{$/;"	s
__anon84e4e8860908	stb_image.h	/^   {$/;"	s	struct:__anon84e4e8860808
__anon84e4e8860a08	stb_image.h	/^{$/;"	s
__anon84e4e8860b08	stb_image.h	/^{$/;"	s
__anon84e4e8860c08	stb_image.h	/^{$/;"	s
__anon84e4e8860d08	stb_image.h	/^{$/;"	s
__anon84e4e8860e08	stb_image.h	/^{$/;"	s
__anon84e4e8860f03	stb_image.h	/^enum {$/;"	g
__anon84e4e8861008	stb_image.h	/^{$/;"	s
__anon84e4e8861108	stb_image.h	/^{$/;"	s
__anon84e4e8861208	stb_image.h	/^{$/;"	s
__anon84e4e8861308	stb_image.h	/^{$/;"	s
__gl_glext_h_	glext.h	/^#define __gl_glext_h_ /;"	d
__wgl_wglext_h_	wglext.h	/^#define __wgl_wglext_h_ /;"	d
advance	stb_truetype.h	/^   int advance;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
affine_decomposition	math.h	/^struct affine_decomposition$/;"	s
all_a	stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon84e4e8861008	typeref:typename:unsigned int
animation	animation.h	/^struct animation$/;"	s
animation_flags	animation.h	/^enum animation_flags$/;"	g
animation_id	animation.h	/^struct animation_id$/;"	s
animation_info	animation.h	/^struct animation_info$/;"	s
animation_name	animation.h	/^enum animation_name$/;"	g
animation_player	animation.h	/^struct animation_player$/;"	s
animation_state	animation.h	/^enum animation_state$/;"	g
app14_color_transform	stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
array_of_unicode_codepoints	stb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode co/;"	m	struct:__anon0048a2850508	typeref:typename:int *
asset_animation_header	asset.h	/^struct asset_animation_header$/;"	s
asset_animation_info	asset.h	/^struct asset_animation_info$/;"	s
asset_joint_info	asset.h	/^struct asset_joint_info$/;"	s
asset_joint_name	asset.h	/^struct asset_joint_name$/;"	s
asset_mesh_info	asset.h	/^struct asset_mesh_info$/;"	s
asset_model_header	asset.h	/^struct asset_model_header$/;"	s
b32	platform.h	/^typedef s32		 b32;$/;"	t	typeref:typename:s32
background	stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc *
basis	math.h	/^struct basis$/;"	s
bgindex	stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
bits_per_channel	stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon84e4e8860508	typeref:typename:int
bottom_y	stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon0048a2851108	typeref:typename:int
bounds	stb_truetype.h	/^   int bounds;$/;"	m	struct:__anon0048a2850f08	typeref:typename:int
bpp	stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon84e4e8861008	typeref:typename:int
buffer_start	stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_uc[128]
buflen	stb_image.h	/^   int buflen;$/;"	m	struct:__anon84e4e8860308	typeref:typename:int
callback_already_read	stb_image.h	/^   int callback_already_read;$/;"	m	struct:__anon84e4e8860308	typeref:typename:int
camera	game.h	/^struct camera$/;"	s
cb	wglext.h	/^        DWORD  cb;$/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
cff	stb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
channel	stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon84e4e8861108	typeref:typename:stbi_uc
channel_order	stb_image.h	/^   int channel_order;$/;"	m	struct:__anon84e4e8860508	typeref:typename:int
chardata_for_range	stb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anon0048a2850508	typeref:typename:stbtt_packedchar *
charstrings	stb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
code	stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon84e4e8860708	typeref:typename:stbi__uint16[256]
code_bits	stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
code_buffer	stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__uint32
code_buffer	stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:stbi__uint32
codes	stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi__gif_lzw[8192]
coeff	stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:short *
coeff_h	stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
coeff_w	stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
color_table	stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc *
cur_x	stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
cur_y	stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
cursor	stb_truetype.h	/^   int cursor;$/;"	m	struct:__anon0048a2850108	typeref:typename:int
cx	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
cx1	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
cy	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
cy1	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
dP	game.h	/^	v3 dP;$/;"	m	struct:entity	typeref:typename:v3
data	stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:stbi_uc *
data	stb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo	typeref:typename:unsigned char *
data	stb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anon0048a2850108	typeref:typename:unsigned char *
dc_pred	stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
dct_bfly32o	stb_image.h	/^   #define dct_bfly32o(/;"	d
dct_bfly32o	stb_image.h	/^#define dct_bfly32o(/;"	d
dct_const	stb_image.h	/^   #define dct_const(/;"	d
dct_interleave16	stb_image.h	/^   #define dct_interleave16(/;"	d
dct_interleave8	stb_image.h	/^   #define dct_interleave8(/;"	d
dct_long_mac	stb_image.h	/^#define dct_long_mac(/;"	d
dct_long_mul	stb_image.h	/^#define dct_long_mul(/;"	d
dct_pass	stb_image.h	/^   #define dct_pass(/;"	d
dct_pass	stb_image.h	/^#define dct_pass(/;"	d
dct_rot	stb_image.h	/^   #define dct_rot(/;"	d
dct_trn16	stb_image.h	/^#define dct_trn16(/;"	d
dct_trn32	stb_image.h	/^#define dct_trn32(/;"	d
dct_trn64	stb_image.h	/^#define dct_trn64(/;"	d
dct_trn8_16	stb_image.h	/^#define dct_trn8_16(/;"	d
dct_trn8_32	stb_image.h	/^#define dct_trn8_32(/;"	d
dct_trn8_8	stb_image.h	/^#define dct_trn8_8(/;"	d
dct_wadd	stb_image.h	/^   #define dct_wadd(/;"	d
dct_wadd	stb_image.h	/^#define dct_wadd(/;"	d
dct_widen	stb_image.h	/^   #define dct_widen(/;"	d
dct_widen	stb_image.h	/^#define dct_widen(/;"	d
dct_wsub	stb_image.h	/^   #define dct_wsub(/;"	d
dct_wsub	stb_image.h	/^#define dct_wsub(/;"	d
ddP	game.h	/^	v3 ddP;$/;"	m	struct:entity	typeref:typename:v3
debug_file	platform.h	/^struct debug_file$/;"	s
delay	stb_image.h	/^   int delay;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
delta	stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon84e4e8860708	typeref:typename:int[17]
depth	stb_image.h	/^   int depth;$/;"	m	struct:__anon84e4e8860e08	typeref:typename:int
dequant	stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__uint16[4][64]
direction	stb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
direction	stb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
dt	animation.h	/^	f32 dt;$/;"	m	struct:animation_player	typeref:typename:f32
dx	stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
eflags	stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
entity	game.h	/^struct entity$/;"	s
entity_type	game.h	/^enum entity_type$/;"	g
eob_run	stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
eof	stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anon84e4e8860208	typeref:typename:int (*)(void * user)
equal	stb_truetype.h	/^static int equal(float *a, float *b)$/;"	f	typeref:typename:int
expanded	stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon84e4e8860e08	typeref:typename:stbi_uc *
extra_read	stb_image.h	/^   int extra_read;$/;"	m	struct:__anon84e4e8861008	typeref:typename:int
ey	stb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
f32	platform.h	/^typedef float	 f32;$/;"	t	typeref:typename:float
f64	platform.h	/^typedef double	 f64;$/;"	t	typeref:typename:double
fast	stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:stbi__uint16[]
fast	stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon84e4e8860708	typeref:typename:stbi_uc[]
fast_ac	stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__int16[4][]
fdselect	stb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fdx	stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fdy	stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
first	stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon84e4e8861208	typeref:typename:stbi_uc
first_free	stb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap	typeref:typename:void *
first_row_filter	stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v	typeref:typename:stbi_uc[5]
first_unicode_codepoint_in_range	stb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and t/;"	m	struct:__anon0048a2850508	typeref:typename:int
first_x	stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:float
first_y	stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:float
firstcode	stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:stbi__uint16[16]
firstsymbol	stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:stbi__uint16[16]
flags	stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
font_size	stb_truetype.h	/^   float font_size;$/;"	m	struct:__anon0048a2850508	typeref:typename:float
fontdicts	stb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fontstart	stb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
fx	stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
game_button	platform.h	/^struct game_button$/;"	s
game_input	platform.h	/^struct game_input$/;"	s
game_keyboard	platform.h	/^struct game_keyboard$/;"	s
game_memory	platform.h	/^struct game_memory$/;"	s
game_state	game.h	/^struct game_state$/;"	s
global_varible	platform.h	/^#define global_varible	/;"	d
glyf	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
glyph1	stb_truetype.h	/^   int glyph1; \/\/ use stbtt_FindGlyphIndex$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
glyph2	stb_truetype.h	/^   int glyph2;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
gpos	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
gsubrs	stb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
h	stb_image.h	/^      int h,v;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
h	stb_image.h	/^   int w,h;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
h	stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
h	stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon0048a2850808	typeref:typename:int
h2	stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
h_oversample	stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon0048a2850508	typeref:typename:unsigned char
h_oversample	stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
ha	stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
hd	stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
head	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
head	stb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap_chunk *
height	stb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
height	stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon0048a2851108	typeref:typename:int
hhea	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
history	stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc *
hit_zeof_once	stb_image.h	/^   int hit_zeof_once;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:int
hmtx	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
hs	stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon84e4e8860a08	typeref:typename:int
hsz	stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon84e4e8861008	typeref:typename:int
huff_ac	stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__huffman[4]
huff_dc	stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__huffman[4]
id	stb_image.h	/^      int id;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
id	stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
idata	stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon84e4e8860e08	typeref:typename:stbi_uc *
idct_block_kernel	stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon84e4e8860808	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64])
img_buffer	stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_uc *
img_buffer_end	stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_uc *
img_buffer_original	stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_uc *
img_buffer_original_end	stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_uc *
img_comp	stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon84e4e8860808	typeref:struct:__anon84e4e8860808::__anon84e4e8860908[4]
img_h_max	stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_mcu_h	stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_mcu_w	stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_mcu_x	stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_mcu_y	stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_n	stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon84e4e8860308	typeref:typename:int
img_out_n	stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon84e4e8860308	typeref:typename:int
img_v_max	stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
img_x	stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi__uint32
img_y	stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi__uint32
indexToLocFormat	stb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
index_map	stb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
int32_t	glext.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	glext.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	glext.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	glext.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	glext.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
internal	platform.h	/^#define internal	/;"	d
invert	stb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge	typeref:typename:int
io	stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon84e4e8860308	typeref:typename:stbi_io_callbacks
io_user_data	stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon84e4e8860308	typeref:typename:void *
jfif	stb_image.h	/^   int            jfif;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
joint	mesh.h	/^struct joint$/;"	s
joint_info	mesh.h	/^struct joint_info$/;"	s
kern	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
key_frame	animation.h	/^struct key_frame$/;"	s
length	stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon84e4e8860d08	typeref:typename:stbi__uint32
lflags	stb_image.h	/^   int lflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
line0	stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon84e4e8860a08	typeref:typename:stbi_uc *
line1	stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon84e4e8860a08	typeref:typename:stbi_uc *
line_size	stb_image.h	/^   int line_size;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
linebuf	stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:stbi_uc *
load_jpeg_image	stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
loca	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
local_persist	platform.h	/^#define local_persist	/;"	d
lpal	stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc[256][4]
ma	stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon84e4e8861008	typeref:typename:unsigned int
marker	stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon84e4e8860808	typeref:typename:unsigned char
mat3	math.h	/^struct mat3$/;"	s
mat4	math.h	/^struct mat4$/;"	s
material_spec	mesh.h	/^struct material_spec$/;"	s
max_x	stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
max_x	stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:stbtt_int32
max_y	stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
max_y	stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:stbtt_int32
maxcode	stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:int[17]
maxcode	stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon84e4e8860708	typeref:typename:unsigned int[18]
mb	stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon84e4e8861008	typeref:typename:unsigned int
memory_arena	game.h	/^struct memory_arena$/;"	s
memory_index	platform.h	/^typedef size_t	 memory_index;$/;"	t	typeref:typename:size_t
mesh	mesh.h	/^struct mesh$/;"	s
mg	stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon84e4e8861008	typeref:typename:unsigned int
min_x	stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:stbtt_int32
min_y	stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:stbtt_int32
model	mesh.h	/^struct model$/;"	s
movement_state	game.h	/^enum movement_state$/;"	g
mr	stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon84e4e8861008	typeref:typename:unsigned int
next	stb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge *
next	stb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk *
nodes	stb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
nomore	stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
numGlyphs	stb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
num_bits	stb_image.h	/^   int num_bits;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:int
num_channels	stb_image.h	/^   int num_channels;$/;"	m	struct:__anon84e4e8860508	typeref:typename:int
num_chars	stb_truetype.h	/^   int num_chars;$/;"	m	struct:__anon0048a2850508	typeref:typename:int
num_remaining_in_head_chunk	stb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap	typeref:typename:int
num_vertices	stb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anon0048a2850f08	typeref:typename:int
offset	stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon84e4e8861008	typeref:typename:int
opengl_info	opengl.h	/^struct opengl_info$/;"	s
operator *	math.h	/^operator *(f32 C, v3 V)$/;"	f	typeref:typename:v3
operator *	math.h	/^operator *(v3 V, f32 C)$/;"	f	typeref:typename:v3
operator *	math.h	/^operator*(f32 C, quaternion Q)$/;"	f	typeref:typename:quaternion
operator *	math.h	/^operator*(f32 C, v4 A)$/;"	f	typeref:typename:v4
operator *	math.h	/^operator*(mat4 A, mat4 B)$/;"	f	typeref:typename:mat4
operator *	math.h	/^operator*(mat4 T, v3 V)$/;"	f	typeref:typename:v3
operator *	math.h	/^operator*(quaternion Q1, quaternion Q2)$/;"	f	typeref:typename:quaternion
operator *	math.h	/^operator*(v4 A, f32 C)$/;"	f	typeref:typename:v4
operator *=	math.h	/^operator *=(v3 &V, f32 C)$/;"	f	typeref:typename:v3 &
operator *=	math.h	/^operator*=(quaternion &Q, f32 C)$/;"	f	typeref:typename:void
operator *=	math.h	/^operator*=(quaternion &Q1, quaternion Q2)$/;"	f	typeref:typename:void
operator +	math.h	/^operator +(v3 A, v3 B)$/;"	f	typeref:typename:v3
operator +	math.h	/^operator+(mat4 A, mat4 B)$/;"	f	typeref:typename:mat4
operator +	math.h	/^operator+(quaternion Q1, quaternion Q2)$/;"	f	typeref:typename:quaternion
operator +	math.h	/^operator+(v4 A, v4 B)$/;"	f	typeref:typename:v4
operator +=	math.h	/^operator +=(v3 &A, v3 B)$/;"	f	typeref:typename:v3 &
operator +=	math.h	/^operator+=(quaternion &Q1, quaternion Q2)$/;"	f	typeref:typename:void
operator +=	math.h	/^operator+=(v4 &A, v4 &B)$/;"	f	typeref:typename:void
operator -	math.h	/^operator -(v3 A, v3 B)$/;"	f	typeref:typename:v3
operator -	math.h	/^operator-(v4 A, v4 B)$/;"	f	typeref:typename:v4
order	stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon84e4e8860808	typeref:typename:int[4]
out	stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon84e4e8860e08	typeref:typename:stbi_uc *
out	stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc *
pack_info	stb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
padding	stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon0048a2850708	typeref:typename:unsigned char
padding	stb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
pal	stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon84e4e8861308	typeref:typename:stbi_uc[256][4]
parse	stb_image.h	/^   int parse, step;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
pitch	math.h	/^		f32 pitch, yaw, roll;$/;"	m	struct:v3::__anon0d3df6e50308	typeref:typename:f32
pixels	stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anon0048a2850808	typeref:typename:unsigned char *
pixels	stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned char *
prefix	stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon84e4e8861208	typeref:typename:stbi__int16
progressive	stb_image.h	/^   int            progressive;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
pvertices	stb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anon0048a2850f08	typeref:typename:stbtt_vertex *
quad	game.h	/^struct quad$/;"	s
quad_vertex	game.h	/^struct quad_vertex$/;"	s
quaternion	math.h	/^union quaternion$/;"	u
ratio	stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
raw_coeff	stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:void *
raw_data	stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:void *
rcVirtualScreen	wglext.h	/^        RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE	typeref:typename:RECT
read	stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anon84e4e8860208	typeref:typename:int (*)(void * user,char * data,int size)
read_from_callbacks	stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon84e4e8860308	typeref:typename:int
resample	stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon84e4e8860a08	typeref:typename:resample_row_func
resample_row_1	stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	typeref:typename:stbi_uc *
resample_row_func	stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in0,stbi_uc * in1,int w,int hs)
resample_row_hv_2_kernel	stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	m	struct:__anon84e4e8860808	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in_near,stbi_uc * in_far,int w,int hs)
restart_interval	stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
rgb	stb_image.h	/^   int            rgb;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
roll	math.h	/^		f32 pitch, yaw, roll;$/;"	m	struct:v3::__anon0d3df6e50308	typeref:typename:f32
s	stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon84e4e8860808	typeref:typename:stbi__context *
s	stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon84e4e8860e08	typeref:typename:stbi__context *
s0	stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon0048a2850308	typeref:typename:float
s1	stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon0048a2850308	typeref:typename:float
s16	platform.h	/^typedef int16_t  s16;$/;"	t	typeref:typename:int16_t
s32	platform.h	/^typedef int32_t  s32;$/;"	t	typeref:typename:int32_t
s64	platform.h	/^typedef int64_t  s64;$/;"	t	typeref:typename:int64_t
s8	platform.h	/^typedef int8_t	 s8;$/;"	t	typeref:typename:int8_t
scan_n	stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
size	stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon84e4e8860708	typeref:typename:stbi_uc[257]
size	stb_image.h	/^   stbi_uc  size[STBI__ZNSYMS];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:stbi_uc[]
size	stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon84e4e8861108	typeref:typename:stbi_uc
size	stb_truetype.h	/^   int size;$/;"	m	struct:__anon0048a2850108	typeref:typename:int
skip	stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anon84e4e8860208	typeref:typename:void (*)(void * user,int n)
skip_missing	stb_truetype.h	/^   int   skip_missing;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
spec_end	stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
spec_start	stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
sqt	math.h	/^struct sqt$/;"	s
start_x	stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
start_y	stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
started	stb_truetype.h	/^   int started;$/;"	m	struct:__anon0048a2850f08	typeref:typename:int
stbi__DNL	stb_image.h	/^#define stbi__DNL(/;"	d
stbi__EOI	stb_image.h	/^#define stbi__EOI(/;"	d
stbi__SOF	stb_image.h	/^#define stbi__SOF(/;"	d
stbi__SOF_progressive	stb_image.h	/^#define stbi__SOF_progressive(/;"	d
stbi__SOI	stb_image.h	/^#define stbi__SOI(/;"	d
stbi__SOS	stb_image.h	/^#define stbi__SOS(/;"	d
stbi__YCbCr_to_RGB_row	stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stb/;"	f	typeref:typename:void
stbi__YCbCr_to_RGB_simd	stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc /;"	f	typeref:typename:void
stbi__addints_valid	stb_image.h	/^static int stbi__addints_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__addsizes_valid	stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__at_eof	stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	typeref:typename:stbi_inline int
stbi__bit_reverse	stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int
stbi__bitcount	stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	typeref:typename:int
stbi__bitreverse16	stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int
stbi__blinn_8x8	stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	typeref:typename:stbi_uc
stbi__bmask	stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,1638/;"	v	typeref:typename:const stbi__uint32[17]
stbi__bmp_data	stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon84e4e8861008
stbi__bmp_info	stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__bmp_load	stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__bmp_parse_header	stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	typeref:typename:void *
stbi__bmp_set_mask_defaults	stb_image.h	/^static int stbi__bmp_set_mask_defaults(stbi__bmp_data *info, int compress)$/;"	f	typeref:typename:int
stbi__bmp_test	stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__bmp_test_raw	stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__build_fast_ac	stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	typeref:typename:void
stbi__build_huffman	stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	typeref:typename:int
stbi__check_png_header	stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	typeref:typename:int
stbi__clamp	stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__cleanup_jpeg	stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__compute_huffman_codes	stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__compute_transparency	stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_transparency16	stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_y	stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi_uc
stbi__compute_y_16	stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	typeref:typename:stbi__uint16
stbi__context	stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon84e4e8860308
stbi__convert_16_to_8	stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi_uc *
stbi__convert_8_to_16	stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi__uint16 *
stbi__convert_format	stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:unsigned char *
stbi__convert_format16	stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:stbi__uint16 *
stbi__copyval	stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void
stbi__cpuid3	stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	typeref:typename:int
stbi__create_png_alpha_expand8	stb_image.h	/^static void stbi__create_png_alpha_expand8(stbi_uc *dest, stbi_uc *src, stbi__uint32 x, int img_/;"	f	typeref:typename:void
stbi__create_png_image	stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len/;"	f	typeref:typename:int
stbi__create_png_image_raw	stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_/;"	f	typeref:typename:int
stbi__de_iphone	stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	typeref:typename:void
stbi__de_iphone_flag	stb_image.h	/^#define stbi__de_iphone_flag /;"	d
stbi__de_iphone_flag_global	stb_image.h	/^static int stbi__de_iphone_flag_global = 0;$/;"	v	typeref:typename:int
stbi__de_iphone_flag_local	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__de_iphone_flag_set	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__decode_jpeg_header	stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__decode_jpeg_image	stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__depth_scale_table	stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v	typeref:typename:const stbi_uc[9]
stbi__div16	stb_image.h	/^#define stbi__div16(/;"	d
stbi__div4	stb_image.h	/^#define stbi__div4(/;"	d
stbi__do_png	stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info /;"	f	typeref:typename:void *
stbi__do_zlib	stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int
stbi__err	stb_image.h	/^   #define stbi__err(/;"	d
stbi__err	stb_image.h	/^static int stbi__err(const char *str)$/;"	f	typeref:typename:int
stbi__errpf	stb_image.h	/^#define stbi__errpf(/;"	d
stbi__errpuc	stb_image.h	/^#define stbi__errpuc(/;"	d
stbi__expand_png_palette	stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int
stbi__extend_receive	stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__f2f	stb_image.h	/^#define stbi__f2f(/;"	d
stbi__fill_bits	stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	typeref:typename:void
stbi__float2fixed	stb_image.h	/^#define stbi__float2fixed(/;"	d
stbi__float2int	stb_image.h	/^#define stbi__float2int(/;"	d
stbi__float_postprocess	stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:void
stbi__fopen	stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbi__free_jpeg_components	stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	typeref:typename:int
stbi__fsh	stb_image.h	/^#define stbi__fsh(/;"	d
stbi__g_failure_reason	stb_image.h	/^const char *stbi__g_failure_reason;$/;"	v	typeref:typename:STBI_THREAD_LOCAL const char *
stbi__get16be	stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get16le	stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get32be	stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get32le	stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get8	stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__get_chunk_header	stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	typeref:typename:stbi__pngchunk
stbi__get_marker	stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__getn	stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int
stbi__gif	stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon84e4e8861308
stbi__gif_header	stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int
stbi__gif_info	stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_info_raw	stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_load	stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__gif_load_next	stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stb/;"	f	typeref:typename:stbi_uc *
stbi__gif_lzw	stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon84e4e8861208
stbi__gif_parse_colortable	stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, i/;"	f	typeref:typename:void
stbi__gif_test	stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__gif_test_raw	stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__grow_buffer_unsafe	stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__h2l_gamma_i	stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__h2l_scale_i	stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__hdr_convert	stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void
stbi__hdr_gettoken	stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	typeref:typename:char *
stbi__hdr_info	stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__hdr_load	stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:float *
stbi__hdr_test	stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	typeref:typename:int
stbi__hdr_test_core	stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	typeref:typename:int
stbi__hdr_to_ldr	stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *
stbi__high_bit	stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	typeref:typename:int
stbi__huffman	stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon84e4e8860708
stbi__idct_block	stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__idct_simd	stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__info_main	stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__int16	stb_image.h	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short
stbi__int16	stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t
stbi__int32	stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int
stbi__int32	stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t
stbi__is_16_main	stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	typeref:typename:int
stbi__jbias	stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819/;"	v	typeref:typename:const int[16]
stbi__jpeg	stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon84e4e8860808
stbi__jpeg_decode_block	stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huff/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_ac	stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, st/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_dc	stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, in/;"	f	typeref:typename:int
stbi__jpeg_dequantize	stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	typeref:typename:void
stbi__jpeg_dezigzag	stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__jpeg_finish	stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	typeref:typename:void
stbi__jpeg_get_bit	stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_get_bits	stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_huff_decode	stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_info	stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_info_raw	stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_load	stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__jpeg_reset	stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__jpeg_test	stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__l2h_gamma	stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__l2h_scale	stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__ldr_to_hdr	stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *
stbi__load_and_postprocess_16bit	stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:stbi__uint16 *
stbi__load_and_postprocess_8bit	stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:unsigned char *
stbi__load_gif_main	stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *co/;"	f	typeref:typename:void *
stbi__load_gif_main_outofmem	stb_image.h	/^static void *stbi__load_gif_main_outofmem(stbi__gif *g, stbi_uc *out, int **delays)$/;"	f	typeref:typename:void *
stbi__load_main	stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__loadf_main	stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__mad2sizes_valid	stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	typeref:typename:int
stbi__mad3sizes_valid	stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	typeref:typename:int
stbi__mad4sizes_valid	stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:int
stbi__malloc	stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	typeref:typename:void *
stbi__malloc_mad2	stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad3	stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad4	stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:void *
stbi__mul2shorts_valid	stb_image.h	/^static int stbi__mul2shorts_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__mul2sizes_valid	stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__out_gif_code	stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void
stbi__paeth	stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	typeref:typename:int
stbi__parse_entropy_coded_data	stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__parse_huffman_block	stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_png_file	stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	typeref:typename:int
stbi__parse_uncompressed_block	stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_zlib	stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	typeref:typename:int
stbi__parse_zlib_header	stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__pic_info	stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pic_is4	stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	typeref:typename:int
stbi__pic_load	stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__resul/;"	f	typeref:typename:void *
stbi__pic_load_core	stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *re/;"	f	typeref:typename:stbi_uc *
stbi__pic_packet	stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon84e4e8861108
stbi__pic_test	stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pic_test_core	stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png	stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon84e4e8860e08
stbi__png_info	stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_info_raw	stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_is16	stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png_load	stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__png_test	stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pngchunk	stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon84e4e8860d08
stbi__pnm_getinteger	stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	typeref:typename:int
stbi__pnm_info	stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pnm_is16	stb_image.h	/^static int stbi__pnm_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pnm_isdigit	stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	typeref:typename:int
stbi__pnm_isspace	stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	typeref:typename:int
stbi__pnm_load	stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__pnm_skip_whitespace	stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	typeref:typename:void
stbi__pnm_test	stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__process_frame_header	stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__process_gif_raster	stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	typeref:typename:stbi_uc *
stbi__process_marker	stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	typeref:typename:int
stbi__process_scan_header	stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__psd_decode_rle	stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	typeref:typename:int
stbi__psd_info	stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__psd_is16	stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__psd_load	stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__psd_test	stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__readval	stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *
stbi__refill_buffer	stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	typeref:typename:void
stbi__resample	stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon84e4e8860a08
stbi__resample_row_generic	stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_h_2	stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2	stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2_simd	stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, in/;"	f	typeref:typename:stbi_uc *
stbi__resample_row_v_2	stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, i/;"	f	typeref:typename:stbi_uc *
stbi__result_info	stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anon84e4e8860508
stbi__rewind	stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	typeref:typename:void
stbi__setup_jpeg	stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__shiftsigned	stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	typeref:typename:int
stbi__skip	stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	typeref:typename:void
stbi__skip_jpeg_junk_at_end	stb_image.h	/^static stbi_uc stbi__skip_jpeg_junk_at_end(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__sse2_available	stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	typeref:typename:int
stbi__start_callbacks	stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void
stbi__start_file	stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	typeref:typename:void
stbi__start_mem	stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	typeref:typename:void
stbi__stdio_callbacks	stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks
stbi__stdio_eof	stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	typeref:typename:int
stbi__stdio_read	stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int
stbi__stdio_skip	stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	typeref:typename:void
stbi__tga_get_comp	stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	typeref:typename:int
stbi__tga_info	stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__tga_load	stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__tga_read_rgb16	stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	typeref:typename:void
stbi__tga_test	stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__uint16	stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t
stbi__uint16	stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short
stbi__uint32	stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t
stbi__uint32	stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int
stbi__unpremultiply_on_load	stb_image.h	/^#define stbi__unpremultiply_on_load /;"	d
stbi__unpremultiply_on_load_global	stb_image.h	/^static int stbi__unpremultiply_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__unpremultiply_on_load_local	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__unpremultiply_on_load_set	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertical_flip	stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertical_flip_slices	stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertically_flip_on_load	stb_image.h	/^#define stbi__vertically_flip_on_load /;"	d
stbi__vertically_flip_on_load_global	stb_image.h	/^static int stbi__vertically_flip_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__vertically_flip_on_load_local	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertically_flip_on_load_set	stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__zbuf	stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon84e4e8860c08
stbi__zbuild_huffman	stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	typeref:typename:int
stbi__zdefault_distance	stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v	typeref:typename:const stbi_uc[32]
stbi__zdefault_length	stb_image.h	/^static const stbi_uc stbi__zdefault_length[STBI__ZNSYMS] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__zdist_base	stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:const int[32]
stbi__zdist_extra	stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v	typeref:typename:const int[32]
stbi__zeof	stb_image.h	/^stbi_inline static int stbi__zeof(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zexpand	stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int
stbi__zget8	stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__zhuffman	stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon84e4e8860b08
stbi__zhuffman_decode	stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zhuffman_decode_slowpath	stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:int
stbi__zlength_base	stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v	typeref:typename:const int[31]
stbi__zlength_extra	stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v	typeref:typename:const int[31]
stbi__zreceive	stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int
stbi_convert_iphone_png_to_rgb	stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_iphone_png_to_rgb_thread	stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb_thread(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_wchar_to_utf8	stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIDEF int
stbi_failure_reason	stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	typeref:typename:STBIDEF const char *
stbi_hdr_to_ldr_gamma	stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_hdr_to_ldr_scale	stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_image_free	stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:STBIDEF void
stbi_info	stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_callbacks	stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int/;"	f	typeref:typename:STBIDEF int
stbi_info_from_file	stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_memory	stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_inline	stb_image.h	/^   #define stbi_inline /;"	d
stbi_inline	stb_image.h	/^   #define stbi_inline$/;"	d
stbi_io_callbacks	stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon84e4e8860208
stbi_is_16_bit	stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_callbacks	stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_file	stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_memory	stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr	stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_callbacks	stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_file	stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_memory	stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_ldr_to_hdr_gamma	stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_ldr_to_hdr_scale	stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_load	stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_16	stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_callbacks	stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, /;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_memory	stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *c/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_from_callbacks	stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file	stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file_16	stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi__uint16 *
stbi_load_from_memory	stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_gif_from_memory	stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x,/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_loadf	stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_callbacks	stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int /;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_file	stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_memory	stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,/;"	f	typeref:typename:STBIDEF float *
stbi_lrot	stb_image.h	/^   #define stbi_lrot(/;"	d
stbi_set_flip_vertically_on_load	stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_flip_vertically_on_load_thread	stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load_thread(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load	stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load_thread	stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load_thread(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_uc	stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char
stbi_us	stb_image.h	/^typedef unsigned short stbi_us;$/;"	t	typeref:typename:unsigned short
stbi_zlib_decode_buffer	stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_malloc	stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize	stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, i/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize_headerflag	stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int init/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_noheader_buffer	stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int i/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_noheader_malloc	stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbrp_context	stb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anon0048a2851108
stbrp_coord	stb_truetype.h	/^typedef int stbrp_coord;$/;"	t	typeref:typename:int
stbrp_init_target	stb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nod/;"	f	typeref:typename:void
stbrp_node	stb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anon0048a2851208
stbrp_pack_rects	stb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:void
stbrp_rect	stb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	stb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbtt_BakeFontBitmap	stb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f	typeref:typename:STBTT_DEF int
stbtt_BakeFontBitmap_internal	stb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (u/;"	f	typeref:typename:int
stbtt_CompareUTF8toUTF16_bigendian	stb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int l/;"	f	typeref:typename:STBTT_DEF int
stbtt_CompareUTF8toUTF16_bigendian_internal	stb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2)$/;"	f	typeref:typename:int
stbtt_FindGlyphIndex	stb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont	stb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont_internal	stb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbt/;"	f	typeref:typename:int
stbtt_FindSVGDoc	stb_truetype.h	/^STBTT_DEF stbtt_uint8 *stbtt_FindSVGDoc(const stbtt_fontinfo *info, int gl)$/;"	f	typeref:typename:STBTT_DEF stbtt_uint8 *
stbtt_FlattenCurves	stb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_f/;"	f	typeref:typename:stbtt__point *
stbtt_FreeBitmap	stb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeSDF	stb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeShape	stb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetBakedQuad	stb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_inde/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmap	stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBitmapBox	stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapBoxSubpixel	stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, fl/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapSubpixel	stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scal/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBox	stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointHMetrics	stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanc/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointKernAdvance	stb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointSDF	stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int cod/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointSVG	stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointSVG(const stbtt_fontinfo *info, int unicode_codepoint, const cha/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointShape	stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_v/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontBoundingBox	stb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, i/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontNameString	stb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platf/;"	f	typeref:typename:STBTT_DEF const char *
stbtt_GetFontOffsetForIndex	stb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontOffsetForIndex_internal	stb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f	typeref:typename:int
stbtt_GetFontVMetrics	stb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontVMetricsOS2	stb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDe/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphBitmap	stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float s/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBitmapBox	stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapBoxSubpixel	stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapSubpixel	stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBox	stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, i/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphHMetrics	stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceW/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphKernAdvance	stb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphSDF	stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, /;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphSVG	stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphSVG(const stbtt_fontinfo *info, int gl, const char **svg)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphShape	stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTable	stb_truetype.h	/^STBTT_DEF int stbtt_GetKerningTable(const stbtt_fontinfo *info, stbtt_kerningentry* table, int t/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTableLength	stb_truetype.h	/^STBTT_DEF int  stbtt_GetKerningTableLength(const stbtt_fontinfo *info)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts	stb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts_internal	stb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f	typeref:typename:int
stbtt_GetPackedQuad	stb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_in/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetScaledFontVMetrics	stb_truetype.h	/^STBTT_DEF void stbtt_GetScaledFontVMetrics(const unsigned char *fontdata, int index, float size,/;"	f	typeref:typename:STBTT_DEF void
stbtt_InitFont	stb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_InitFont_internal	stb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f	typeref:typename:int
stbtt_IsGlyphEmpty	stb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_MakeCodepointBitmap	stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixel	stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outp/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixelPrefilter	stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned c/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmap	stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixel	stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixelPrefilter	stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char /;"	f	typeref:typename:STBTT_DEF void
stbtt_PackBegin	stb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, in/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackEnd	stb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRange	stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int fo/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRanges	stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int f/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesGatherRects	stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *inf/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesPackRects	stb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRangesRenderIntoRects	stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo /;"	f	typeref:typename:STBTT_DEF int
stbtt_PackSetOversampling	stb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, uns/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackSetSkipMissingCodepoints	stb_truetype.h	/^STBTT_DEF void stbtt_PackSetSkipMissingCodepoints(stbtt_pack_context *spc, int skip)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_Rasterize	stb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *ve/;"	f	typeref:typename:STBTT_DEF void
stbtt_ScaleForMappingEmToPixels	stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f	typeref:typename:STBTT_DEF float
stbtt_ScaleForPixelHeight	stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f	typeref:typename:STBTT_DEF float
stbtt__CompareUTF8toUTF16_bigendian_prefix	stb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,/;"	f	typeref:typename:stbtt_int32
stbtt__GetCoverageIndex	stb_truetype.h	/^static stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyfOffset	stb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:int
stbtt__GetGlyphClass	stb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphGPOSInfoAdvance	stb_truetype.h	/^static stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int gl/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphInfoT2	stb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, /;"	f	typeref:typename:int
stbtt__GetGlyphKernInfoAdvance	stb_truetype.h	/^static int stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f	typeref:typename:int
stbtt__GetGlyphShapeT2	stb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__GetGlyphShapeTT	stb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__active_edge	stb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	stb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	stb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f	typeref:typename:void
stbtt__bitmap	stb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anon0048a2850808
stbtt__buf	stb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anon0048a2850108
stbtt__buf_get	stb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f	typeref:typename:stbtt_uint32
stbtt__buf_get16	stb_truetype.h	/^#define stbtt__buf_get16(/;"	d
stbtt__buf_get32	stb_truetype.h	/^#define stbtt__buf_get32(/;"	d
stbtt__buf_get8	stb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_peek8	stb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_range	stb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f	typeref:typename:stbtt__buf
stbtt__buf_seek	stb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__buf_skip	stb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__cff_get_index	stb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_index_count	stb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f	typeref:typename:int
stbtt__cff_index_get	stb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_int	stb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint32
stbtt__cff_skip_operand	stb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f	typeref:typename:void
stbtt__check_size16	stb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int16)==2?1:-1]
stbtt__check_size32	stb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int32)==4?1:-1]
stbtt__cid_get_glyph_subrs	stb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:stbtt__buf
stbtt__close_shape	stb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_o/;"	f	typeref:typename:int
stbtt__compute_crossings_x	stb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f	typeref:typename:int
stbtt__csctx	stb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anon0048a2850f08
stbtt__csctx_close_shape	stb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f	typeref:typename:void
stbtt__csctx_rccurve_to	stb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy/;"	f	typeref:typename:void
stbtt__csctx_rline_to	stb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_rmove_to	stb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_v	stb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbt/;"	f	typeref:typename:void
stbtt__cuberoot	stb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f	typeref:typename:float
stbtt__dict_get	stb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f	typeref:typename:stbtt__buf
stbtt__dict_get_ints	stb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f	typeref:typename:void
stbtt__edge	stb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	stb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	stb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, in/;"	f	typeref:typename:void
stbtt__fill_active_edges_new	stb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__/;"	f	typeref:typename:void
stbtt__find_table	stb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag/;"	f	typeref:typename:stbtt_uint32
stbtt__get_subr	stb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_subrs	stb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_svg	stb_truetype.h	/^static int stbtt__get_svg(stbtt_fontinfo *info)$/;"	f	typeref:typename:int
stbtt__h_prefilter	stb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt__handle_clipped_edge	stb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, /;"	f	typeref:typename:void
stbtt__hheap	stb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	stb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	stb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f	typeref:typename:void *
stbtt__hheap_chunk	stb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	stb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	stb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f	typeref:typename:void
stbtt__hheap_free	stb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f	typeref:typename:void
stbtt__isfont	stb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f	typeref:typename:int
stbtt__matches	stb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 f/;"	f	typeref:typename:int
stbtt__matchpair	stb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nle/;"	f	typeref:typename:int
stbtt__new_active	stb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float /;"	f	typeref:typename:stbtt__active_edge *
stbtt__new_buf	stb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f	typeref:typename:stbtt__buf
stbtt__oversample_shift	stb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f	typeref:typename:float
stbtt__point	stb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anon0048a2851008
stbtt__position_trapezoid_area	stb_truetype.h	/^static float stbtt__position_trapezoid_area(float height, float tx0, float tx1, float bx0, float/;"	f	typeref:typename:float
stbtt__rasterize	stb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings/;"	f	typeref:typename:void
stbtt__rasterize_sorted_edges	stb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsub/;"	f	typeref:typename:void
stbtt__ray_intersect_bezier	stb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], fl/;"	f	typeref:typename:int
stbtt__run_charstring	stb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f	typeref:typename:int
stbtt__sized_trapezoid_area	stb_truetype.h	/^static float stbtt__sized_trapezoid_area(float height, float top_width, float bottom_width)$/;"	f	typeref:typename:float
stbtt__sized_triangle_area	stb_truetype.h	/^static float stbtt__sized_triangle_area(float height, float width)$/;"	f	typeref:typename:float
stbtt__solve_cubic	stb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f	typeref:typename:int
stbtt__sort_edges	stb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_ins_sort	stb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_quicksort	stb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__tesselate_cubic	stb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, fl/;"	f	typeref:typename:void
stbtt__tesselate_curve	stb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flo/;"	f	typeref:typename:int
stbtt__test_oversample_pow2	stb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?/;"	t	typeref:typename:int[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1))==0?1:-1]
stbtt__track_vertex	stb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f	typeref:typename:void
stbtt__v_prefilter	stb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt_aligned_quad	stb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anon0048a2850308
stbtt_bakedchar	stb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anon0048a2850208
stbtt_fontinfo	stb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	stb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	stb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t	typeref:typename:signed short
stbtt_int32	stb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t	typeref:typename:signed int
stbtt_int8	stb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t	typeref:typename:signed char
stbtt_kerningentry	stb_truetype.h	/^typedef struct stbtt_kerningentry$/;"	s
stbtt_kerningentry	stb_truetype.h	/^} stbtt_kerningentry;$/;"	t	typeref:struct:stbtt_kerningentry
stbtt_pack_context	stb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	stb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	stb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anon0048a2850508
stbtt_packedchar	stb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anon0048a2850408
stbtt_setvertex	stb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stb/;"	f	typeref:typename:void
stbtt_tag	stb_truetype.h	/^#define stbtt_tag(/;"	d
stbtt_tag4	stb_truetype.h	/^#define stbtt_tag4(/;"	d
stbtt_uint16	stb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t	typeref:typename:unsigned short
stbtt_uint32	stb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t	typeref:typename:unsigned int
stbtt_uint8	stb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t	typeref:typename:unsigned char
stbtt_vertex	stb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anon0048a2850708
stbtt_vertex_type	stb_truetype.h	/^   #define stbtt_vertex_type /;"	d
step	stb_image.h	/^   int parse, step;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
stride	stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon0048a2850808	typeref:typename:int
stride_in_bytes	stb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
string	strings.h	/^struct string$/;"	s
string_array	strings.h	/^struct string_array$/;"	s
string_list	strings.h	/^struct string_list$/;"	s
string_node	strings.h	/^struct string_node$/;"	s
subrs	stb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
succ_high	stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
succ_low	stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
suffix	stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon84e4e8861208	typeref:typename:stbi_uc
svg	stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
sy	stb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
t0	stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon0048a2850308	typeref:typename:float
t1	stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon0048a2850308	typeref:typename:float
temporary_memory	game.h	/^struct temporary_memory$/;"	s
texture	texture.h	/^struct texture$/;"	s
todo	stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon84e4e8860808	typeref:typename:int
tq	stb_image.h	/^      int tq;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
transparent	stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
ttBYTE	stb_truetype.h	/^#define ttBYTE(/;"	d
ttCHAR	stb_truetype.h	/^#define ttCHAR(/;"	d
ttFixed	stb_truetype.h	/^#define ttFixed(/;"	d
ttLONG	stb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_int32
ttSHORT	stb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_int16
ttULONG	stb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_uint32
ttUSHORT	stb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_uint16
type	stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon84e4e8860d08	typeref:typename:stbi__uint32
type	stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon84e4e8861108	typeref:typename:stbi_uc
type	stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon0048a2850708	typeref:typename:unsigned char
u16	platform.h	/^typedef uint16_t u16;$/;"	t	typeref:typename:uint16_t
u32	platform.h	/^typedef uint32_t u32;$/;"	t	typeref:typename:uint32_t
u64	platform.h	/^typedef uint64_t u64;$/;"	t	typeref:typename:uint64_t
u8	platform.h	/^typedef uint8_t	 u8;$/;"	t	typeref:typename:uint8_t
uint64_t	glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	glext.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	glext.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
user_allocator_context	stb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
userdata	stb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo	typeref:typename:void *
v	stb_image.h	/^      int h,v;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
v2	math.h	/^union v2$/;"	u
v3	math.h	/^union v3$/;"	u
v4	math.h	/^union v4$/;"	u
v_oversample	stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon0048a2850508	typeref:typename:unsigned char
v_oversample	stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
validate_uint32	stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]
value	stb_image.h	/^   stbi__uint16 value[STBI__ZNSYMS];$/;"	m	struct:__anon84e4e8860b08	typeref:typename:stbi__uint16[]
values	stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon84e4e8860708	typeref:typename:stbi_uc[256]
vertex	mesh.h	/^struct vertex $/;"	s
vs	stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon84e4e8860a08	typeref:typename:int
w	math.h	/^		f32 w;$/;"	m	struct:quaternion::__anon0d3df6e50808	typeref:typename:f32
w	math.h	/^		f32 w;$/;"	m	struct:v4::__anon0d3df6e50508	typeref:typename:f32
w	math.h	/^		f32 x, y, z, w;$/;"	m	struct:v4::__anon0d3df6e50408	typeref:typename:f32
w	stb_image.h	/^   int w,h;$/;"	m	struct:__anon84e4e8861308	typeref:typename:int
w	stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
w	stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon0048a2850808	typeref:typename:int
w2	stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
w_lores	stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon84e4e8860a08	typeref:typename:int
was_packed	stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
wglChoosePixelFormatARB	win32_opengl.cpp	/^PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB;$/;"	v	typeref:typename:PFNWGLCHOOSEPIXELFORMATARBPROC
wglCreateContextAttribsARB	win32_opengl.cpp	/^PFNWGLCREATECONTEXTATTRIBSARBPROC wglCreateContextAttribsARB;$/;"	v	typeref:typename:PFNWGLCREATECONTEXTATTRIBSARBPROC
wglGetExtensionsStringEXT	win32_opengl.cpp	/^PFNWGLGETEXTENSIONSSTRINGEXTPROC wglGetExtensionsStringEXT;$/;"	v	typeref:typename:PFNWGLGETEXTENSIONSSTRINGEXTPROC
wglMakeContextCurrentARB	win32_opengl.cpp	/^PFNWGLMAKECONTEXTCURRENTARBPROC wglMakeContextCurrentARB;$/;"	v	typeref:typename:PFNWGLMAKECONTEXTCURRENTARBPROC
wglSwapIntervalEXT	win32_opengl.cpp	/^PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;$/;"	v	typeref:typename:PFNWGLSWAPINTERVALEXTPROC
width	stb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
width	stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon0048a2851108	typeref:typename:int
x	math.h	/^				f32 x, y, z;$/;"	m	struct:v4::__anon0d3df6e50508::__anon0d3df6e5060a::__anon0d3df6e50708	typeref:typename:f32
x	math.h	/^		f32 x, y, z, w;$/;"	m	struct:v4::__anon0d3df6e50408	typeref:typename:f32
x	math.h	/^		f32 x, y, z;$/;"	m	struct:v3::__anon0d3df6e50208	typeref:typename:f32
x	math.h	/^		f32 x, y;$/;"	m	struct:v2::__anon0d3df6e50108	typeref:typename:f32
x	math.h	/^		f32 x;$/;"	m	struct:quaternion::__anon0d3df6e50808	typeref:typename:f32
x	stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
x	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
x	stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:float
x	stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon0048a2851008	typeref:typename:float
x	stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
x	stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon0048a2851108	typeref:typename:int
x	stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	stb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anon0048a2851208	typeref:typename:unsigned char
x0	stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x0	stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon0048a2850308	typeref:typename:float
x0	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850208	typeref:typename:unsigned short
x0	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850408	typeref:typename:unsigned short
x1	stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x1	stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon0048a2850308	typeref:typename:float
x1	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850208	typeref:typename:unsigned short
x1	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850408	typeref:typename:unsigned short
xadvance	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850208	typeref:typename:float
xadvance	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850408	typeref:typename:float
xoff	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850208	typeref:typename:float
xoff	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850408	typeref:typename:float
xoff2	stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon0048a2850408	typeref:typename:float
xyz	math.h	/^			v3 xyz;$/;"	m	union:v4::__anon0d3df6e50508::__anon0d3df6e5060a	typeref:typename:v3
y	math.h	/^				f32 x, y, z;$/;"	m	struct:v4::__anon0d3df6e50508::__anon0d3df6e5060a::__anon0d3df6e50708	typeref:typename:f32
y	math.h	/^		f32 x, y, z, w;$/;"	m	struct:v4::__anon0d3df6e50408	typeref:typename:f32
y	math.h	/^		f32 x, y, z;$/;"	m	struct:v3::__anon0d3df6e50208	typeref:typename:f32
y	math.h	/^		f32 x, y;$/;"	m	struct:v2::__anon0d3df6e50108	typeref:typename:f32
y	math.h	/^		f32 y;$/;"	m	struct:quaternion::__anon0d3df6e50808	typeref:typename:f32
y	stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon84e4e8860808::__anon84e4e8860908	typeref:typename:int
y	stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon0048a2850708	typeref:typename:stbtt_vertex_type
y	stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon0048a2850f08	typeref:typename:float
y	stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon0048a2851008	typeref:typename:float
y	stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon0048a2851108	typeref:typename:int
y	stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y0	stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y0	stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon0048a2850308	typeref:typename:float
y0	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850208	typeref:typename:unsigned short
y0	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850408	typeref:typename:unsigned short
y1	stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y1	stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon0048a2850308	typeref:typename:float
y1	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850208	typeref:typename:unsigned short
y1	stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon0048a2850408	typeref:typename:unsigned short
yaw	math.h	/^		f32 pitch, yaw, roll;$/;"	m	struct:v3::__anon0d3df6e50308	typeref:typename:f32
yoff	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850208	typeref:typename:float
yoff	stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon0048a2850408	typeref:typename:float
yoff2	stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon0048a2850408	typeref:typename:float
ypos	stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon84e4e8860a08	typeref:typename:int
ystep	stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon84e4e8860a08	typeref:typename:int
z	math.h	/^				f32 x, y, z;$/;"	m	struct:v4::__anon0d3df6e50508::__anon0d3df6e5060a::__anon0d3df6e50708	typeref:typename:f32
z	math.h	/^		f32 x, y, z, w;$/;"	m	struct:v4::__anon0d3df6e50408	typeref:typename:f32
z	math.h	/^		f32 x, y, z;$/;"	m	struct:v3::__anon0d3df6e50208	typeref:typename:f32
z	math.h	/^		f32 z;$/;"	m	struct:quaternion::__anon0d3df6e50808	typeref:typename:f32
z_distance	stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:stbi__zhuffman
z_expandable	stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:int
z_length	stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:stbi__zhuffman
zbuffer	stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:stbi_uc *
zbuffer_end	stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:stbi_uc *
zout	stb_image.h	/^   char *zout;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:char *
zout_end	stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:char *
zout_start	stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon84e4e8860c08	typeref:typename:char *
