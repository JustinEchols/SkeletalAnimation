[1]
# Hello, sailor! This is a comment

# 2025.02.02 1829
# Added new behavior when the time offset specified is -1. When
# a time offset of -1 is specified then the next animation that
# is played will use the current time of the current animation
# as the start time. An example of this can be found in the Paladin
# animation graph. The idea is that we are using the same animation
# for running and sprinting but the sprinting state just scales
# the time so the animation plays faster. Since we are using the same
# animation then when we go from run to sprint we can start playing
# the animation at the same time that the run animation is at.

# Format
# This format follows Johnathan Blow's animation graph file format.
# An animtion state is defined by : AnimationStateName
# Animation flags are defined on a separate line and alter the behavior
# of the animation. Flags include looping, remove_locomotion, controls_position,
# and controls_turning.
# State transitions, or arcs between nodes, start with "message"
# then the message e.g. "go_state_idle" then the name of the new state and finally additional parameters.
# The additional parameters control how the transition happens from the current
# state to the next state. Parameters such as start time (t_start), time
# interval (t_interval), and blend duration (t_blend).

#
# Idle
#

: StateIdleRight
animation XBot_IdleRight
looping
message go_state_run StateRunning t_start 0.4
message go_state_sprint StateSprintMirror
message go_state_crouch StateCrouchingIdleRight
#message go_state_jump StateJumpForwardMirror

: StateIdleLeft
animation XBot_IdleLeft
looping
message go_state_run StateRunningMirror t_start 0.4
message go_state_sprint StateSprint
message go_state_crouch StateCrouchingIdleLeft
#message go_state_jump StateJumpForward

#
# Running 
#

: StateRunning
#animation XBot_Running
animation XBot_RunningRootMotion
looping
controls_position
message go_state_idle StateIdleLeft t_interval 0.0 0.4
message go_state_idle StateIdleLeft t_interval 0.61 0.7
message go_state_sprint StateSprint t_interval 0.0 0.1
message go_state_sprint StateSprint t_interval 0.65 0.7
message go_state_sprint StateSprintMirror t_interval 0.3 0.4

: StateRunningMirror
#animation XBot_RunningMirror
animation XBot_RunningRootMotionMirror
looping
controls_position
message go_state_idle StateIdleRight t_interval 0.0 0.4
message go_state_idle StateIdleRight t_interval 0.61 0.7
message go_state_sprint StateSprintMirror t_interval 0.0 0.1
message go_state_sprint StateSprintMirror t_interval 0.65 0.7
message go_state_sprint StateSprint t_interval 0.3 0.4

#
# Sprinting 
#

: StateSprint
animation XBot_FastRun
looping
message go_state_idle StateIdleLeft t_interval 0.0 0.25
message go_state_idle StateIdleRight t_interval 0.25 0.5
message go_state_run StateRunningMirror t_interval 0.2 0.3
message go_state_run StateRunning t_interval 0.4 0.5

: StateSprintMirror
animation XBot_FastRunMirror
looping
message go_state_idle StateIdleRight t_interval 0.0 0.25
message go_state_idle StateIdleLeft t_interval 0.25 0.5
message go_state_run StateRunning t_interval 0.2 0.3
message go_state_run StateRunningMirror t_interval 0.4 0.5

: StateSprintTo180FromLeftToRight
animation XBot_Running180
controls_position
when_done go_state_sprint StateSprintMirror t_remaining 0.3

#
# Jumping
#

: StateJumpForward
animation XBot_JumpForward
controls_position
message go_state_idle StateIdleLeft t_interval 0.8 1.0

: StateJumpForwardMirror
animation XBot_JumpForwardMirror
controls_position
message go_state_idle StateIdleRight t_interval 0.8 1.0


# 
# Crouching
# 

: StateCrouchingIdleLeft
animation XBot_CrouchingIdleLeft
looping
message go_state_idle StateIdleLeft

: StateCrouchingIdleRight
animation XBot_CrouchingIdleRight
looping
message go_state_idle StateIdleRight

#
# Sliding
#

: StateSlide
animation XBot_RunningSlide
controls_position
when_done go_state_run StateRunning t_remaining 0.1

: StateSlideMirror
animation XBot_RunningSlideMirror
controls_position
when_done go_state_run StateRunningMirror t_remaining 0.1
